{
   "openapi": "3.0.1",
   "info": {
      "title": "Wisenet Api",
      "version": "v1"
   },
   "servers": [
      {
         "url": "https://api.wisenet.co/v1",
         "description": "Production environment"
      }
   ],
   "paths": {
      "/agents": {
         "get": {
            "tags": [
               "Agent"
            ],
            "summary": "Get Agents",
            "description": "Returns all Agent records.",
            "operationId": "GetAgents",
            "parameters": [
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on Name and Code",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "agentStatusIdFilter",
                  "in": "query",
                  "description": "Filter by AgentStatusId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "sort",
                  "in": "query",
                  "description": "Field name to sort agents by.  Supported fields are Name and AgentId. Default sorting is by AgentId.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "Order in which agents are sorted.  Supported orders are asc and desc. Default sorting is by asc.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "archivedFlagFilter",
                  "in": "query",
                  "description": "Filter by ArchivedFlag",
                  "schema": {
                     "type": "boolean"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AgentItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "Agent"
            ],
            "summary": "Post Agents",
            "description": "Create Agents.",
            "operationId": "CreateAgents",
            "requestBody": {
               "description": "Agent objects to add",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/AgentRequest"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AgentItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/agents/{id}": {
         "get": {
            "tags": [
               "Agent"
            ],
            "summary": "Get Agent by Id",
            "description": "Returns an Agent for the given Id",
            "operationId": "GetAgent",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Agent",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/AgentItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Agent not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "Agent"
            ],
            "summary": "Put Agent by Id",
            "description": "Successfully updated, returns the updated Agent",
            "operationId": "ReplaceAgent",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Agent",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "New Agent object update with",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/AgentRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/AgentItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Agent not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/assessors": {
         "get": {
            "tags": [
               "Assessor"
            ],
            "summary": "Get Assessors",
            "description": "Returns all Assessor records.",
            "operationId": "GetAssessors",
            "parameters": [
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AssessorItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/audit-logs": {
         "get": {
            "tags": [
               "AuditLog"
            ],
            "summary": "Get AuditLogs",
            "description": "Returns all AuditLog records.",
            "operationId": "GetAuditLogs",
            "parameters": [
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "auditActionFilter",
                  "in": "query",
                  "description": "Filter by audit action. Use I for insert, U for update and D for delete.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "entityNameFilter",
                  "in": "query",
                  "description": "Filter by entity name. See entities Entity for list of values.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AuditLogItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/checklists": {
         "get": {
            "tags": [
               "Checklist"
            ],
            "summary": "Get Checklists",
            "description": "Returns all Checklist records",
            "operationId": "GetChecklists",
            "parameters": [
               {
                  "name": "checklistItemIdFilter",
                  "in": "query",
                  "description": "Filter by ChecklistItemId",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "entityNameFilter",
                  "in": "query",
                  "description": "Filter by EntityName",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "recordIdFilter",
                  "in": "query",
                  "description": "Filter by RecordId",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ChecklistWrappedItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "Checklist"
            ],
            "summary": "Create Checklists",
            "description": "Creates Checklist records",
            "operationId": "CreateChecklists",
            "requestBody": {
               "description": "Checklists objects to add",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/Checklist"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ChecklistWrappedItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/checklists/{id}": {
         "get": {
            "tags": [
               "Checklist"
            ],
            "summary": "Get Checklist by Id",
            "description": "Returns a single Checklist record for a given ChecklistId.",
            "operationId": "GetChecklist",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Checklist",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ChecklistWrappedItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Checklist not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "Checklist"
            ],
            "summary": "Replace Checklist",
            "description": "Replaces a Checklist for the given ChecklistId. Ignores changes to ChecklistItemId and RecordId.",
            "operationId": "ReplaceChecklist",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Checklist",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "New Checklist object to replace the Checklist with",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/Checklist"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ChecklistWrappedItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Checklist not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/checklist-items": {
         "get": {
            "tags": [
               "ChecklistItem"
            ],
            "summary": "Get ChecklistItems",
            "description": "Returns all Checklist Item records",
            "operationId": "GetChecklistItems",
            "parameters": [
               {
                  "name": "entityNameFilter",
                  "in": "query",
                  "description": "Filter by EntityName",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "typeFilter",
                  "in": "query",
                  "description": "Filter by Type",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "descriptionFilter",
                  "in": "query",
                  "description": "Filter by Description",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "isActiveFilter",
                  "in": "query",
                  "description": "Filter by IsActive",
                  "schema": {
                     "type": "boolean"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp",
                  "schema": {
                     "type": "string",
                     "format": "date-time"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ChecklistItemItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/coordinators": {
         "get": {
            "tags": [
               "Coordinator"
            ],
            "summary": "Get Coordinators",
            "description": "Returns all Coordinator records.",
            "operationId": "GetCoordinators",
            "parameters": [
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CoordinatorItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/courses": {
         "get": {
            "tags": [
               "Course"
            ],
            "summary": "Get Courses",
            "description": "Returns all courses with the option to filter by a string",
            "operationId": "GetCourses",
            "parameters": [
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on the Code and Description",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "courseCodeFilter",
                  "in": "query",
                  "description": "Filter by Course Code",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CourseItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/courses/{id}": {
         "get": {
            "tags": [
               "Course"
            ],
            "summary": "Get Course by Id",
            "description": "Returns Course for the given CourseId",
            "operationId": "GetCourse",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Course",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/CourseItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Course not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/course-enrolments": {
         "get": {
            "tags": [
               "CourseEnrolment"
            ],
            "summary": "Get CourseEnrolments",
            "description": "Returns all Course Enrolment records.",
            "operationId": "GetCourseEnrolments",
            "parameters": [
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on the learner's FirstName, LastName, LearnerNumber and course offer code",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerIdFilter",
                  "in": "query",
                  "description": "Filter by LearnerId",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "learnerNumberFilter",
                  "in": "query",
                  "description": "Filter by LearnerNumber",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "courseOfferIdFilter",
                  "in": "query",
                  "description": "Filter by CourseOfferId",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "applicationStatusIdFilter",
                  "in": "query",
                  "description": "Filter by ApplicationStatusId",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "sort",
                  "in": "query",
                  "description": "Field name to sort course enrolments by.  Supported fields are EndDate, LastModifiedTimeStamp and EnquiryDate. Default sorting is by LastModifiedTimeStamp.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "Order in which course enrolments are sorted.  Supported orders are asc and desc. Default sorting is by asc.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "enrolmentStatusIdFilter",
                  "in": "query",
                  "description": "Filter by EnrolmentStatusId",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CourseEnrolmentItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "CourseEnrolment"
            ],
            "summary": "Create CourseEnrolments",
            "description": "Creates a Course Enrolment with a given Course Enrolment object",
            "operationId": "CreateCourseEnrolments",
            "requestBody": {
               "description": "Course Enrolment objects to add",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/CourseEnrolment"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CourseEnrolmentItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/course-enrolments/{id}": {
         "get": {
            "tags": [
               "CourseEnrolment"
            ],
            "summary": "Get CourseEnrolment by Id",
            "description": "Returns Course Enrolment for the given id",
            "operationId": "GetCourseEnrolment",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the CourseEnrolment",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/CourseEnrolmentItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Course Enrolment not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "CourseEnrolment"
            ],
            "summary": "Replace CourseEnrolment",
            "description": "Replaces a Course Enrolment for a given CourseEnrolmentId",
            "operationId": "ReplaceCourseEnrolment",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the CourseEnrolment",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "Course Enrolment object to update with",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/CourseEnrolment"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/CourseEnrolmentItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Course Enrolment not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "patch": {
            "tags": [
               "CourseEnrolment"
            ],
            "summary": "Patch CourseEnrolment",
            "description": "Updates defined Course Enrolment fields for a Course Enrolment record for a given CourseEnrolmentId.",
            "operationId": "PatchCourseEnrolment",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the CourseEnrolment",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "JSON Patch Document operations to perform on course enrolment",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/PatchDocument"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/CourseEnrolmentItem"
                        }
                     }
                  }
               }
            },
            "x-public": true
         }
      },
      "/course-offers": {
         "get": {
            "tags": [
               "CourseOffer"
            ],
            "summary": "Get CourseOffers",
            "description": "Returns all Course Offer records.",
            "operationId": "GetCourseOffers",
            "parameters": [
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on the Code and Description",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "publishFlagFilter",
                  "in": "query",
                  "description": "Filter by PublishFlag",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "courseOfferStartDateFilter",
                  "in": "query",
                  "description": "Filter by CourseOfferStartDate (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CourseOfferItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/course-offers/{id}": {
         "get": {
            "tags": [
               "CourseOffer"
            ],
            "summary": "Get CourseOffer by Id",
            "description": "Returns a single Course Offer record for a given CourseOfferId.",
            "operationId": "GetCourseOffer",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the CourseOffer",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/CourseOfferItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Course Offer not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/course-offers/list/{id}": {
         "get": {
            "tags": [
               "CourseOffer"
            ],
            "summary": "Get CourseOffer by Id",
            "description": "Returns a single short Course Offer record for a given CourseOfferId.",
            "operationId": "GetCourseOfferList",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the CourseOffer",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/CourseOfferBasicItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Course Offer not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/credentials": {
         "get": {
            "tags": [
               "Credential"
            ],
            "summary": "Get Credentials",
            "description": "Returns all credentials",
            "operationId": "GetCredentials",
            "parameters": [
               {
                  "name": "credentialIdFilter",
                  "in": "query",
                  "description": "Filter by CredentialId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "courseEnrolmentIdFilter",
                  "in": "query",
                  "description": "Filter by CourseEnrolmentId",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "credentialNumberFilter",
                  "in": "query",
                  "description": "Filter by CredentialNumber",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "learnerIdFilter",
                  "in": "query",
                  "description": "Filter by LearnerId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "credentialStatusIdFilter",
                  "in": "query",
                  "description": "Filter by CredentialStatusId",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CredentialItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/credentials/{id}": {
         "get": {
            "tags": [
               "Credential"
            ],
            "summary": "Get Credential by Id",
            "description": "Returns Credentials for the given id",
            "operationId": "GetCredentialsById",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Credentials",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/CredentialItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Credential not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/document-file/": {
         "post": {
            "tags": [
               "DocumentFile"
            ],
            "summary": "Create a File",
            "description": "Get a URL for uploading files. See Documents and Files section above.",
            "operationId": "CreateDocumentFile",
            "requestBody": {
               "description": "File upload information",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/DocumentFileUploadRequest"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/DocumentFileUploadResponse"
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/document-file/{id}": {
         "get": {
            "tags": [
               "DocumentFile"
            ],
            "summary": "Get a URL for Downloading a File",
            "description": "Returns response containing a URL to download the file for the given documentId. See Documents and Files section above.",
            "operationId": "GetDocumentFile",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Document",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/DocumentFile"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Document not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/element-enrolments": {
         "get": {
            "tags": [
               "ElementEnrolment"
            ],
            "summary": "Get ElementEnrolments",
            "description": "Returns all ElementEnrolment records",
            "operationId": "GetElementEnrolments",
            "parameters": [
               {
                  "name": "learnerIdFilter",
                  "in": "query",
                  "description": "Filter by LearnerId",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "courseEnrolmentIdFilter",
                  "in": "query",
                  "description": "Filter by CourseEnrolmentId",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "unitEnrolmentIdFilter",
                  "in": "query",
                  "description": "Filter by UnitEnrolmentId",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp",
                  "schema": {
                     "type": "string",
                     "format": "date-time"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "learnerNumberFilter",
                  "in": "query",
                  "description": "Filter by Learner Number",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "unitCodeFilter",
                  "in": "query",
                  "description": "Filter by Unit Code",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ElementEnrolmentItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/element-enrolments/{id}": {
         "patch": {
            "tags": [
               "ElementEnrolment"
            ],
            "summary": "Patch ElementEnrolment",
            "description": "Updates defined Element Enrolment fields for a Element Enrolment record for a given ElementEnrolmentId.",
            "operationId": "PatchElementEnrolment",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the ElementEnrolment",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "JSON Patch Document operations to perform on course enrolment",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/PatchDocument"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ElementEnrolmentItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "ElementEnrolment not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/entities": {
         "get": {
            "tags": [
               "Entity"
            ],
            "summary": "Get Entities",
            "description": "Returns all Entities",
            "operationId": "GetEntities",
            "parameters": [
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/EntityItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/filenotes/{id}": {
         "get": {
            "tags": [
               "Filenote"
            ],
            "summary": "Get Filenote by Id",
            "description": "Returns a single Filenote record for a given FilenoteId.",
            "operationId": "GetFilenote",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Filenote",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/FilenoteItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Filenote not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "Filenote"
            ],
            "summary": "Replace a Filenote",
            "description": "Replaces a Filenote for the given FilenoteId",
            "operationId": "ReplaceFilenote",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of Filenote to replace",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "New Filenote object to replace Filenote with",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Filenote"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/FilenoteItem"
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/filenotes": {
         "get": {
            "tags": [
               "Filenote"
            ],
            "summary": "Get Filenotes",
            "description": "Returns all Filenotes for a given EntityName and RecordId",
            "operationId": "GetFilenotes",
            "parameters": [
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "entityNameFilter",
                  "in": "query",
                  "description": "Filter by EntityName",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "recordIdFilter",
                  "in": "query",
                  "description": "Filter by RecordId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FilenoteItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "Filenote"
            ],
            "summary": "Create Filenote",
            "description": "Add a Filenote record",
            "operationId": "CreateFilenote",
            "requestBody": {
               "description": "Filenotes objects to add.",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/Filenote"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FilenoteItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred."
               }
            },
            "x-public": true
         }
      },
      "/invoices": {
         "get": {
            "tags": [
               "Invoice"
            ],
            "summary": "Get Invoices",
            "operationId": "GetInvoices",
            "parameters": [
               {
                  "name": "learnerIdFilter",
                  "in": "query",
                  "description": "Learner ID Filter.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/InvoiceItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/invoices/{id}": {
         "get": {
            "tags": [
               "Invoice"
            ],
            "summary": "Get Invoice by Id",
            "operationId": "GetInvoice",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Invoice",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/InvoiceItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Invoice not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "Invoice"
            ],
            "summary": "Replace an existing Invoice or Create a new one if Invoice not found",
            "operationId": "ReplaceInvoice",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Invoice",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "description": "The source.",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Invoice"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/InvoiceItem"
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "delete": {
            "tags": [
               "Invoice"
            ],
            "summary": "Delete Invoice",
            "operationId": "DeleteInvoice",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Invoice",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "204": {
                  "description": "NoContent"
               },
               "404": {
                  "description": "Invoice not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/language-literacy-numeracy": {
         "get": {
            "tags": [
               "LanguageLiteracyNumeracy"
            ],
            "summary": "Get LanguageLiteracyNumeracies",
            "description": "Returns all LanguageLiteracyNumeracy records",
            "operationId": "GetLanguageLiteracyNumeracies",
            "parameters": [
               {
                  "name": "courseEnrolmentIdFilter",
                  "in": "query",
                  "description": "Filter by CourseEnrolmentId",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp",
                  "schema": {
                     "type": "string",
                     "format": "date-time"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LanguageLiteracyNumeracyItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "LanguageLiteracyNumeracy"
            ],
            "summary": "Create LanguageLiteracyNumeracies",
            "description": "Creates LanguageLiteracyNumeracy records",
            "operationId": "CreateLanguageLiteracyNumeracies",
            "requestBody": {
               "description": "LanguageLiteracyNumeracies objects to add",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/LanguageLiteracyNumeracy"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LanguageLiteracyNumeracyItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/language-literacy-numeracy/{id}": {
         "put": {
            "tags": [
               "LanguageLiteracyNumeracy"
            ],
            "summary": "Replace LanguageLiteracyNumeracy",
            "description": "Replaces a LanguageLiteracyNumeracy for the given LanguageLiteracyNumeracyId.",
            "operationId": "ReplaceLanguageLiteracyNumeracy",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LanguageLiteracyNumeracy",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "New object to replace LanguageLiteracyNumeracy with",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/LanguageLiteracyNumeracy"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LanguageLiteracyNumeracyItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "LanguageLiteracyNumeracy not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/learnersAU": {
         "get": {
            "tags": [
               "LearnerAu"
            ],
            "summary": "Returns all LearnerAU records.",
            "description": "Returns all LearnerAU records.",
            "operationId": "GetLearnersAU",
            "parameters": [
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on the FirstName and LastName",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "isActiveFilter",
                  "in": "query",
                  "description": "Filter by IsActive",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "syncToXeroFilter",
                  "in": "query",
                  "description": "Filter by SyncToXero",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerNumberFilter",
                  "in": "query",
                  "description": "Filter by LearnerNumber (RefInternal)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "emailAddressFilter",
                  "in": "query",
                  "description": "Filter by Email Address",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "mobileFilter",
                  "in": "query",
                  "description": "Filter by Mobile Number",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerAlt1NumberFilter",
                  "in": "query",
                  "description": "Filter by Learner Alt 1 Number",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerAlt2NumberFilter",
                  "in": "query",
                  "description": "Filter by Learner Alt 2 Number",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "uniqueStudentIdentifierFilter",
                  "in": "query",
                  "description": "Filter by UniqueStudentIdentifierFilter",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LearnerAuItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "LearnerAu"
            ],
            "summary": "Post LearnersAU",
            "description": "Add a LearnerAU record.",
            "operationId": "PostLearnersAU",
            "requestBody": {
               "description": "The learners.",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/LearnerAu"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LearnerAuItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/learnersAU/{id}": {
         "get": {
            "tags": [
               "LearnerAu"
            ],
            "summary": "Get LearnerAu by Id",
            "description": "Returns a single LearnerAU record for a given LearnerId.",
            "operationId": "GetLearnerAU",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerAU",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerAuItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Learner not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "LearnerAu"
            ],
            "summary": "Replace LearnerAU",
            "description": "Replaces a LearnerAU record for a given LearnerId.",
            "operationId": "ReplaceLearnerAU",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerAU",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "New learner object to replace learner with",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/LearnerAu"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerAuItem"
                        }
                     }
                  }
               }
            },
            "x-public": true
         },
         "patch": {
            "tags": [
               "LearnerAu"
            ],
            "summary": "Patch LearnerAU",
            "description": "Updates defined LearnerAU fields for a LearnerAU record for a given LearnerId.",
            "operationId": "PatchLearnerAU",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerAU",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "Json Patch Document operations to perform on learner",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/PatchDocument"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerAu"
                        }
                     }
                  }
               }
            },
            "x-public": true
         }
      },
      "/learnersAU/{id}/personal": {
         "get": {
            "tags": [
               "LearnerAu"
            ],
            "summary": "Get LearnerAuPersonal by Id",
            "description": "Returns a single LearnerAU record’s personal details for a given LearnerId.",
            "operationId": "GetLearnerAUPersonal",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerAUPersonal",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerAuPersonalItem"
                        }
                     }
                  }
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "LearnerAu"
            ],
            "summary": "Replace LearnerAUPersonal",
            "description": "Replace a LearnerAU record’s personal details for a given LearnerId",
            "operationId": "ReplaceLearnerAUPersonal",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerAUPersonal",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "Source learner personal object to replace target learner's personal fields",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/LearnerAuPersonal"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerAuPersonalItem"
                        }
                     }
                  }
               }
            },
            "x-public": true
         }
      },
      "/learnersAU/list": {
         "get": {
            "tags": [
               "LearnerAu"
            ],
            "summary": "Get Basic Learner List",
            "description": "Returns a list of basic learners with the option to filter",
            "operationId": "GetLearnerAuList",
            "parameters": [
               {
                  "name": "learnerNumberFilter",
                  "in": "query",
                  "description": "Filter by LearnerNumber (RefInternal)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerUsernameFilter",
                  "in": "query",
                  "description": "Filter by LearnerUsername (PortalUsername)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "syncToXeroFilter",
                  "in": "query",
                  "description": "Filter by SyncToXero",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "isActiveFilter",
                  "in": "query",
                  "description": "Filter by IsActive",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "usiRequiresValidationFilter",
                  "in": "query",
                  "description": "Filter by Usi validation",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on the FirstName and LastName",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "uniqueStudentIdentifierFilter",
                  "in": "query",
                  "description": "Filter by UniqueStudentIdentifierFilter",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LearnerBasic"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/learnersNZ": {
         "get": {
            "tags": [
               "LearnerNz"
            ],
            "summary": "Get LearnersNZ",
            "description": "Returns all LearnerNZ records.",
            "operationId": "GetLearnersNZ",
            "parameters": [
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on the FirstName and LastName",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "isActiveFilter",
                  "in": "query",
                  "description": "Filter by IsActive",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "syncToXeroFilter",
                  "in": "query",
                  "description": "Filter by SyncToXero",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerNumberFilter",
                  "in": "query",
                  "description": "Filter by LearnerNumber (RefInternal)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "emailAddressFilter",
                  "in": "query",
                  "description": "Filter by Email Address",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "mobileFilter",
                  "in": "query",
                  "description": "Filter by Mobile Number",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerAlt1NumberFilter",
                  "in": "query",
                  "description": "Filter by Learner Alt 1 Number",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerAlt2NumberFilter",
                  "in": "query",
                  "description": "Filter by Learner Alt 2 Number",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LearnerNzItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "LearnerNz"
            ],
            "summary": "Post LearnersNZ",
            "description": "Add a LearnerNZ record.",
            "operationId": "PostLearnersNZ",
            "requestBody": {
               "description": "The learners.",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/LearnerNz"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LearnerNzItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/learnersNZ/{id}": {
         "get": {
            "tags": [
               "LearnerNz"
            ],
            "summary": "Get LearnerNz by Id",
            "description": "Returns a single LearnerNZ record for a given LearnerId.",
            "operationId": "GetLearnerNZ",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerNZ",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerNzItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Learner not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "LearnerNz"
            ],
            "summary": "Replace LearnerNZ",
            "description": "Replace a LearnerNZ record for a given LearnerId.",
            "operationId": "ReplaceLearnerNZ",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerNZ",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "New learner object to replace learner with",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/LearnerNz"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerNzItem"
                        }
                     }
                  }
               }
            },
            "x-public": true
         },
         "patch": {
            "tags": [
               "LearnerNz"
            ],
            "summary": "Patch LearnerNZ",
            "description": "Updates defined LearnerNZ fields for a LearnerNZ record for a given LearnerId.",
            "operationId": "PatchLearnerNZ",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerNZ",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "Json Patch Document operations to perform on learner",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/PatchDocument"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerNzItem"
                        }
                     }
                  }
               }
            },
            "x-public": true
         }
      },
      "/learnersNZ/{id}/personal": {
         "get": {
            "tags": [
               "LearnerNz"
            ],
            "summary": "Get LearnerNzPersonal by Id",
            "description": "Returns a single LearnerNZ record’s personal details for a given LearnerId.",
            "operationId": "GetLearnerNZPersonal",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerNZPersonal",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerNzPersonal"
                        }
                     }
                  }
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "LearnerNz"
            ],
            "summary": "Replace LearnerNZPersonal",
            "description": "Replace a LearnerNZ record’s personal details for a given LearnerId.",
            "operationId": "ReplaceLearnerNZPersonal",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerNZPersonal",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "Source learner personal object to replace target learner's personal fields",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/LearnerNzPersonal"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerNzPersonalItem"
                        }
                     }
                  }
               }
            },
            "x-public": true
         }
      },
      "/learnersNZ/list": {
         "get": {
            "tags": [
               "LearnerNz"
            ],
            "summary": "Get Basic Learner List",
            "description": "Returns a list of basic learners with the option to filter",
            "operationId": "GetLearnerNzList",
            "parameters": [
               {
                  "name": "learnerNumberFilter",
                  "in": "query",
                  "description": "Filter by LearnerNumber (RefInternal)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerUsernameFilter",
                  "in": "query",
                  "description": "Filter by LearnerUsername (PortalUsername)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "syncToXeroFilter",
                  "in": "query",
                  "description": "Filter by SyncToXero",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LearnerBasic"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/learnersSA": {
         "get": {
            "tags": [
               "LearnerSa"
            ],
            "summary": "Get LearnersSA",
            "description": "Returns all LearnerSA records.",
            "operationId": "GetLearnersSA",
            "parameters": [
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on the FirstName and LastName.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "isActiveFilter",
                  "in": "query",
                  "description": "Filter by IsActive",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "syncToXeroFilter",
                  "in": "query",
                  "description": "Filter by SyncToXero",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerNumberFilter",
                  "in": "query",
                  "description": "Filter by LearnerNumber (RefInternal)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "emailAddressFilter",
                  "in": "query",
                  "description": "Filter by Email Address",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "mobileFilter",
                  "in": "query",
                  "description": "Filter by Mobile Number",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerAlt1NumberFilter",
                  "in": "query",
                  "description": "Filter by Learner Alt 1 Number",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerAlt2NumberFilter",
                  "in": "query",
                  "description": "Filter by Learner Alt 2 Number",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LearnerSaItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "LearnerSa"
            ],
            "summary": "Post LearnersSA",
            "description": "Add a LearnerSA record.",
            "operationId": "PostLearnersSA",
            "requestBody": {
               "description": "The learners.",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/LearnerSa"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LearnerSaItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/learnersSA/{id}": {
         "get": {
            "tags": [
               "LearnerSa"
            ],
            "summary": "Get LearnerSA by Id",
            "description": "Returns a single LearnerSA record for a given LearnerId.",
            "operationId": "GetLearnerSA",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerSA",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerSaItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Learner not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "LearnerSa"
            ],
            "summary": "Replace LearnerSA",
            "description": "Replace a LearnerSA record for a given LearnerId.",
            "operationId": "ReplaceLearnerSA",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerSA",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "New learner object to replace learner with",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/LearnerSa"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerSaItem"
                        }
                     }
                  }
               }
            },
            "x-public": true
         },
         "patch": {
            "tags": [
               "LearnerSa"
            ],
            "summary": "Patch LearnerSA",
            "description": "Updates defined LearnerSA fields for a LearnerSA record for a given LearnerId.",
            "operationId": "PatchLearnerSA",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerSA",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "Json Patch Document operations to perform on learner",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/PatchDocument"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerSaItem"
                        }
                     }
                  }
               }
            },
            "x-public": true
         }
      },
      "/learnersSA/{id}/personal": {
         "get": {
            "tags": [
               "LearnerSa"
            ],
            "summary": "Get LearnerSAPersonal by Id",
            "description": "Returns a single LearnerSA record’s personal details for a given LearnerId",
            "operationId": "GetLearnerSAPersonal",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerSAPersonal",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerSaPersonal"
                        }
                     }
                  }
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "LearnerSa"
            ],
            "summary": "Replace LearnerSAPersonal",
            "description": "Replace a LearnerSA record’s personal details for a given LearnerId.",
            "operationId": "ReplaceLearnerSAPersonal",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerSAPersonal",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "Source learner personal object to replace target learner's personal fields",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/LearnerSaPersonal"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerSaPersonalItem"
                        }
                     }
                  }
               }
            },
            "x-public": true
         }
      },
      "/learnersSA/list": {
         "get": {
            "tags": [
               "LearnerSa"
            ],
            "summary": "Get Basic Learner List",
            "description": "Returns a list of basic learners with the option to filter",
            "operationId": "GetLearnerSaList",
            "parameters": [
               {
                  "name": "learnerNumberFilter",
                  "in": "query",
                  "description": "Filter by LearnerNumber (RefInternal)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerUsernameFilter",
                  "in": "query",
                  "description": "Filter by LearnerUsername (PortalUsername)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LearnerBasicSa"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/learnersSG": {
         "get": {
            "tags": [
               "LearnerSg"
            ],
            "summary": "Get LearnersSG",
            "description": "Returns all LearnerSG records.",
            "operationId": "GetLearnersSG",
            "parameters": [
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on the FirstName and LastName.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "isActiveFilter",
                  "in": "query",
                  "description": "Filter by IsActive",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "syncToXeroFilter",
                  "in": "query",
                  "description": "Filter by SyncToXero",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerNumberFilter",
                  "in": "query",
                  "description": "Filter by LearnerNumber (RefInternal)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "emailAddressFilter",
                  "in": "query",
                  "description": "Filter by Email Address",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "mobileFilter",
                  "in": "query",
                  "description": "Filter by Mobile Number",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerAlt1NumberFilter",
                  "in": "query",
                  "description": "Filter by Learner Alt 1 Number",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerAlt2NumberFilter",
                  "in": "query",
                  "description": "Filter by Learner Alt 2 Number",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LearnerSgItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "LearnerSg"
            ],
            "summary": "Post LearnersSG",
            "description": "Add a LearnerSG record.",
            "operationId": "PostLearnersSG",
            "requestBody": {
               "description": "The learners.",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/LearnerSg"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LearnerSgItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/learnersSG/{id}": {
         "get": {
            "tags": [
               "LearnerSg"
            ],
            "summary": "Get LearnerSg by Id",
            "description": "Returns a single LearnerSG record for a given LearnerId.",
            "operationId": "GetLearnerSG",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerSG",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerSgItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Learner not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "LearnerSg"
            ],
            "summary": "Replace LearnerSG",
            "description": "Replace a LearnerSG record for a given LearnerId.",
            "operationId": "ReplaceLearnerSG",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerSG",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "New learner object to replace learner with",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/LearnerSg"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerSgItem"
                        }
                     }
                  }
               }
            },
            "x-public": true
         },
         "patch": {
            "tags": [
               "LearnerSg"
            ],
            "summary": "Patch LearnerSG",
            "description": "Updates defined LearnerSG fields for a LearnerSG record for a given LearnerId.",
            "operationId": "PatchLearnerSG",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerSG",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "Json Patch Document operations to perform on learner",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/PatchDocument"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerSgItem"
                        }
                     }
                  }
               }
            },
            "x-public": true
         }
      },
      "/learnersSG/{id}/personal": {
         "get": {
            "tags": [
               "LearnerSg"
            ],
            "summary": "Get LearnerSgPersonal by Id",
            "description": "Returns a single LearnerSG record’s personal details for a given LearnerId",
            "operationId": "GetLearnerSGPersonal",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerSGPersonal",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerSgPersonal"
                        }
                     }
                  }
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "LearnerSg"
            ],
            "summary": "Replace LearnerSGPersonal",
            "description": "Replace a LearnerSG record’s personal details for a given LearnerId.",
            "operationId": "ReplaceLearnerSGPersonal",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the LearnerSGPersonal",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "Source learner personal object to replace target learner's personal fields",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/LearnerSgPersonal"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerSgPersonalItem"
                        }
                     }
                  }
               }
            },
            "x-public": true
         }
      },
      "/learnersSG/list": {
         "get": {
            "tags": [
               "LearnerSg"
            ],
            "summary": "Get Basic Learner List",
            "description": "Returns a list of basic learners with the option to filter",
            "operationId": "GetLearnerSgList",
            "parameters": [
               {
                  "name": "learnerNumberFilter",
                  "in": "query",
                  "description": "Filter by LearnerNumber (RefInternal)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerUsernameFilter",
                  "in": "query",
                  "description": "Filter by LearnerUsername (PortalUsername)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "syncToXeroFilter",
                  "in": "query",
                  "description": "Filter by SyncToXero",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LearnerBasic"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/learner-positions": {
         "get": {
            "tags": [
               "LearnerPosition"
            ],
            "summary": "Get Learner Positions",
            "description": "Returns all Learner Position records.",
            "operationId": "GetLearnerPositions",
            "parameters": [
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerIdFilter",
                  "in": "query",
                  "description": "Filter by LearnerId.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "workplaceIdFilter",
                  "in": "query",
                  "description": "Filter by WorkplaceId.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LearnerPositionItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "LearnerPosition"
            ],
            "summary": "Create Learner Positions",
            "description": "Add a Learner Position record.",
            "operationId": "CreateLearnerPositions",
            "requestBody": {
               "description": "Learner Position objects to add",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/LearnerPosition"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LearnerPositionItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/learner-positions/{id}": {
         "get": {
            "tags": [
               "LearnerPosition"
            ],
            "summary": "Get Learner Position by Id",
            "description": "Returns a single Learner Position record for a given LearnerPositionId.",
            "operationId": "GetLearnerPosition",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Learner Position",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerPositionItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Learner Position not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "LearnerPosition"
            ],
            "summary": "Replace a Learner Position",
            "description": "Replaces a Learner Position for the given LearnerPositionId",
            "operationId": "ReplaceLearnerPosition",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Learner Position",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "The source.",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/LearnerPosition"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LearnerPositionItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Learner Position not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "delete": {
            "tags": [
               "LearnerPosition"
            ],
            "summary": "Delete a Learner Position",
            "description": "Deletes a Learner Position for the given LearnerPositionId",
            "operationId": "DeleteLearnerPosition",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Learner Position",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "204": {
                  "description": "NoContent"
               },
               "404": {
                  "description": "Learner Position not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/locations": {
         "get": {
            "tags": [
               "Location"
            ],
            "summary": "Get Locations",
            "description": "Returns all Locations with the option to filter by LastModifiedTimeStamp",
            "operationId": "GetLocations",
            "parameters": [
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "sort",
                  "in": "query",
                  "description": "Field name to sort locations by.  Supported fields are Code, Description and LastModifiedTimeStamp. Default sorting is by Description.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "Order in which locations are sorted.  Supported orders are asc and desc. Default sorting is by asc.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on Code and Description",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LocationFullItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "Location"
            ],
            "summary": "Create Locations",
            "description": "Add Location records.",
            "operationId": "CreateLocations",
            "requestBody": {
               "description": "Location objects to add",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/LocationFull"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LocationFullItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/locations/list": {
         "get": {
            "tags": [
               "Location"
            ],
            "summary": "Get list of Locations",
            "description": "Returns all locations short info",
            "operationId": "GetLocationsList",
            "parameters": [
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "sort",
                  "in": "query",
                  "description": "Field name to sort locations by.  Supported fields are Code and Description. Default sorting is by Description.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "Order in which locations are sorted.  Supported orders are asc and desc. Default sorting is by asc.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on Code and Description",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LocationBasicItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/locations/{id}": {
         "get": {
            "tags": [
               "Location"
            ],
            "summary": "Get Location by Id",
            "description": "Returns Location for the given LocationId",
            "operationId": "GetLocation",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Location",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LocationFullItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Location not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "Location"
            ],
            "summary": "Replace a Location",
            "description": "Replaces a Location record for a given LocationId.",
            "operationId": "ReplaceLocation",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Location",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "New Location object to replace Location with",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/LocationFull"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LocationFullItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Location not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/opportunities": {
         "get": {
            "tags": [
               "Opportunity"
            ],
            "summary": "Get Opportunities",
            "description": "Returns all Opportunity records.",
            "operationId": "GetOpportunities",
            "parameters": [
               {
                  "name": "salesContactIdFilter",
                  "in": "query",
                  "description": "Filter by SalesContactId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "search",
                  "in": "query",
                  "description": "Search Opportunity by Description",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "closeDateFilter",
                  "in": "query",
                  "description": "Filter by CloseDate (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "opportunityStageIdFilter",
                  "in": "query",
                  "description": "Filter by OpportunityStageId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "ownerIdFilter",
                  "in": "query",
                  "description": "Filter by OwnerId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "pagingGroup",
                  "in": "query",
                  "description": "Group results by this field. Valid values(s) are 'OpportunityStageId'. Using this parameter means paging will be per pagingGroup. E.g. Take 30 records per OpportunityStageId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "sort",
                  "in": "query",
                  "description": "Field name to sort opportunities by.  Supported fields are CloseDate, Amount and LastModifiedTimeStamp. Default sorting is by LastModifiedTimeStamp.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "Order in which opportunities are sorted.  Supported orders are asc and desc. Default sorting is by asc.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "opportunityStageWinProbabilityIdFilter",
                  "in": "query",
                  "description": "Filter by OpportunityStageWinProbabilityId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "createdOnFilter",
                  "in": "query",
                  "description": "Filter by CreatedOn",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "pipelineIdFilter",
                  "in": "query",
                  "description": "Filter by PipelineId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "tagIdFilter",
                  "in": "query",
                  "description": "Filter by tag ids",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "amountFilter",
                  "in": "query",
                  "description": "Filter by Amount",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "previousIdentifierFilter",
                  "in": "query",
                  "description": "Filter by PreviousIdentifier",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "opportunitySourceIdFilter",
                  "in": "query",
                  "description": "Filter by OpportunitySourceId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "opportunityTypeIdFilter",
                  "in": "query",
                  "description": "Filter by OpportunityTypeId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "closeLostReasonIdFilter",
                  "in": "query",
                  "description": "Filter by CloseLostReasonId",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/OpportunityItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "Opportunity"
            ],
            "summary": "Create Opportunities",
            "description": "Add an Opportunity record. Minimum required fields SalesContactId, Description, OpportunityStageId",
            "operationId": "CreateOpportunities",
            "requestBody": {
               "description": "Opportunity objects to add",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/Opportunity"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/OpportunityItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/opportunities/{id}": {
         "get": {
            "tags": [
               "Opportunity"
            ],
            "summary": "Get Opportunity by Id",
            "description": "Returns a single Opportunity record for a given OpportunityId.",
            "operationId": "GetOpportunity",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Opportunity",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/OpportunityItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Opportunity not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "patch": {
            "tags": [
               "Opportunity"
            ],
            "summary": "Patch Opportunity",
            "description": "Updates defined Opportunity fields for an Opportunity record for a given OpportunityId. Cannot PATCH OpportunityId",
            "operationId": "PatchOpportunity",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Opportunity",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "JSON Patch Document operations to perform on opportunity",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/PatchDocument"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/OpportunityItem"
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/promotions": {
         "get": {
            "tags": [
               "Promotion"
            ],
            "summary": "Get Promotions",
            "description": "Returns all Promotion records. Used in Agent.",
            "operationId": "GetPromotions",
            "parameters": [
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "sort",
                  "in": "query",
                  "description": "Field name to sort promotions by.  Supported fields are LastModifiedTimeStamp and PromotionId. Default sorting is by LastModifiedTimeStamp.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "Order in which promotions are sorted.  Supported orders are asc and desc. Default sorting is by asc.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/PromotionItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "Promotion"
            ],
            "summary": "Post Promotions",
            "description": "Create Promotions.",
            "operationId": "CreatePromotions",
            "requestBody": {
               "description": "Promotion objects to add",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/Promotion"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/PromotionItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/promotions/{id}": {
         "get": {
            "tags": [
               "Promotion"
            ],
            "summary": "Get Promotion by Id",
            "description": "Returns an Promotion for the given Id",
            "operationId": "GetPromotion",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Promotion",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/PromotionItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Promotion not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "Promotion"
            ],
            "summary": "Put Promotion by Id",
            "description": "Successfully updated, returns the updated Promotion",
            "operationId": "ReplacePromotion",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Promotion",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "New Promotion object update with",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Promotion"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/PromotionItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Promotion not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/sales-contacts": {
         "get": {
            "tags": [
               "SalesContact"
            ],
            "summary": "Get SalesContacts",
            "description": "Returns all Sales Contact records.",
            "operationId": "GetSalesContacts",
            "parameters": [
               {
                  "name": "contactTypeIdFilter",
                  "in": "query",
                  "description": "Filter by ContactTypeId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "search",
                  "in": "query",
                  "description": "Search Sales Contacts by FirstName, LastName, Email, Company or Mobile",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "relationshipEntityNameFilter",
                  "in": "query",
                  "description": "Search Sales Contacts that have a Relationship with EntityName eg. 'Learner'",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "relationshipRecordIdFilter",
                  "in": "query",
                  "description": "Search Sales Contacts that have a Relationship with RecordId for given EntityName",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "sort",
                  "in": "query",
                  "description": "Field name to sort Sales Contacts by. Sales Contacts may only be sorted by LastModifiedTimeStamp",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "Order in which Sales Contacts are sorted.  Supported orders are asc and desc. Defalt sorting is by desc.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "emailFilter",
                  "in": "query",
                  "description": "Search Sales Contacts by Email",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SalesContactItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "SalesContact"
            ],
            "summary": "Create SalesContacts",
            "description": "Add a Sales Contact record. Minimum required fields FirstName. Email must be unique.",
            "operationId": "CreateSalesContacts",
            "requestBody": {
               "description": "Sales Contact objects to add",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/SalesContact"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SalesContactItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/sales-contacts/{id}": {
         "get": {
            "tags": [
               "SalesContact"
            ],
            "summary": "Get SalesContact by Id",
            "description": "Returns a single Sales Contact record for a given SalesContactId.",
            "operationId": "GetSalesContact",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the SalesContact",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/SalesContactItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Sales Contact not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "patch": {
            "tags": [
               "SalesContact"
            ],
            "summary": "Patch SalesContact",
            "description": "Updates defined Sales Contact fields for a Sales Contact record for a given SalesContactId. Cannot PATCH SalesContactId or SalesContactRelationships.",
            "operationId": "PatchSalesContact",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the SalesContact",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "JSON Patch Document operations to perform on sales contact",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/PatchDocument"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/SalesContactItem"
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/sales-persons": {
         "get": {
            "tags": [
               "SalesPerson"
            ],
            "summary": "Get SalesPersons",
            "description": "Returns all Sales Person records.",
            "operationId": "GetSalesPersons",
            "parameters": [
               {
                  "name": "salesPersonIdFilter",
                  "in": "query",
                  "description": "Filter by SalesPersonId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "isActiveFilter",
                  "in": "query",
                  "description": "Filter by IsActive",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "firstNameFilter",
                  "in": "query",
                  "description": "Search Sales Persons by FirstName",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "lastNameFilter",
                  "in": "query",
                  "description": "Search Sales Persons by LastName",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SalesPersonItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/staff": {
         "get": {
            "tags": [
               "Staff"
            ],
            "summary": "Get Staff",
            "operationId": "GetStaff",
            "parameters": [
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on the FirstName and LastName",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "archivedFlagFilter",
                  "in": "query",
                  "description": "Filter by ArchivedFlag",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "trainerIdFilter",
                  "in": "query",
                  "description": "Filter by TrainerId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "assessorIdFilter",
                  "in": "query",
                  "description": "Filter by AssessorId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "coordinatorIdFilter",
                  "in": "query",
                  "description": "Filter by CoordinatorId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "salesPersonIdFilter",
                  "in": "query",
                  "description": "Filter by SalesPersonId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/StaffItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/tags": {
         "get": {
            "tags": [
               "Tag"
            ],
            "summary": "Returns all Tag records",
            "operationId": "GetTags",
            "parameters": [
               {
                  "name": "entityNameFilter",
                  "in": "query",
                  "description": "See entity Entities. Only 'CourseEnrolment' and 'Opportunity'",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "search",
                  "in": "query",
                  "description": "Name used to identify the Tag",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "archivedFlagFilter",
                  "in": "query",
                  "description": "To indicate if Tag is Archived",
                  "schema": {
                     "type": "boolean"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/TagItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "Tag"
            ],
            "summary": "Add Tag records",
            "description": "Creates Tags with from the given Tag list.",
            "operationId": "CreateTags",
            "requestBody": {
               "description": "Tag objects to add.",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/Tag"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/Tag"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred."
               }
            },
            "x-public": true
         }
      },
      "/tags/{id}": {
         "get": {
            "tags": [
               "Tag"
            ],
            "summary": "Get Tag by Id",
            "description": "Returns a Tag for the given Id",
            "operationId": "GetTag",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Tag",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/TagItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Tag not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "Tag"
            ],
            "summary": "Replaces a Tag record for a given TagId",
            "operationId": "ReplaceTag",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of tag to replace",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "New tag object to replace tag with",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Tag"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/TagItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Tag not found"
               }
            },
            "x-public": true
         }
      },
      "/trainers": {
         "get": {
            "tags": [
               "Trainer"
            ],
            "summary": "Get Trainers",
            "description": "Returns all Trainer records.",
            "operationId": "GetTrainers",
            "parameters": [
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/TrainerItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/units": {
         "get": {
            "tags": [
               "Unit"
            ],
            "summary": "Get Units",
            "description": "Returns all units with the option to filter by a string",
            "operationId": "GetUnits",
            "parameters": [
               {
                  "name": "search",
                  "in": "query",
                  "description": "Search string",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "unitCodeFilter",
                  "in": "query",
                  "description": "Filter by Unit Code",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "courseIdFilter",
                  "in": "query",
                  "description": "Filter by CourseId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/UnitItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/units/{id}": {
         "get": {
            "tags": [
               "Unit"
            ],
            "summary": "Get Unit by Id",
            "description": "Returns Unit for the given UnitId",
            "operationId": "GetUnit",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Unit",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/UnitItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Unit not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/unit-offers": {
         "get": {
            "tags": [
               "UnitOffer"
            ],
            "summary": "Get UnitOffers",
            "description": "Returns all units offered with the option to filter by a string",
            "operationId": "GetUnitOffers",
            "parameters": [
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on the Code",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "courseOfferIdFilter",
                  "in": "query",
                  "description": "Filter by CourseOfferId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "unitIdFilter",
                  "in": "query",
                  "description": "Filter by UnitId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/UnitOfferItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/unit-offers/{id}": {
         "get": {
            "tags": [
               "UnitOffer"
            ],
            "summary": "Get UnitOffer by Id",
            "description": "Returns the Unit Offer for the given UnitOfferId",
            "operationId": "GetUnitOffer",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the UnitOffer",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/UnitOfferItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Unit Offer not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/unit-enrolments": {
         "get": {
            "tags": [
               "UnitEnrolment"
            ],
            "summary": "Get UnitEnrolments",
            "description": "Returns all Unit Enrolment records.",
            "operationId": "GetUnitEnrolments",
            "parameters": [
               {
                  "name": "courseEnrolmentIdFilter",
                  "in": "query",
                  "description": "Filter by CourseEnrolmentId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "unitOfferIdFilter",
                  "in": "query",
                  "description": "Filter by UnitOfferId",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "learnerIdFilter",
                  "in": "query",
                  "description": "Filter by LearnerId",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "lastModifiedTimestampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string",
                     "format": "date-time"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "enrolmentStatusIdFilter",
                  "in": "query",
                  "description": "Filter by EnrolmentStatusId",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/UnitEnrolmentItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "UnitEnrolment"
            ],
            "summary": "Create UnitEnrolments",
            "description": "Add a Unit Enrolment record. Minimum required fields CourseEnrolmentId and UnitOfferId.",
            "operationId": "CreateUnitEnrolments",
            "requestBody": {
               "description": "Unit Enrolment objects to add",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/UnitEnrolment"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/UnitEnrolmentItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/unit-enrolments/{id}": {
         "get": {
            "tags": [
               "UnitEnrolment"
            ],
            "summary": "Get UnitEnrolment by Id",
            "description": "Returns a single Unit Enrolment record for a given UnitEnrolmentId.",
            "operationId": "GetUnitEnrolment",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Unit Enrolment",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/UnitEnrolmentItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Unit Enrolment not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "patch": {
            "tags": [
               "UnitEnrolment"
            ],
            "summary": "Patch UnitEnrolment",
            "description": "Updates defined Unit Enrolment fields for a Unit Enrolment record for a given UnitEnrolmentId. Cannot PATCH UnitEnrolmentId, UnitOfferID or CourseEnrolmentId.",
            "operationId": "PatchUnitEnrolment",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of Unit Enrolment to perform patch operations on",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "JSON Patch Document operations to perform on Unit Enrolment",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/PatchDocument"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/UnitEnrolmentItem"
                        }
                     }
                  }
               }
            },
            "x-public": true
         }
      },
      "/usi/verify-usi": {
         "post": {
            "tags": [
               "USI"
            ],
            "summary": "Verify USI",
            "description": "Verify USI",
            "operationId": "VerifyUsi",
            "requestBody": {
               "description": "The USI to be verified.",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/USIValidation"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/USIValidationResponse"
                        }
                     }
                  }
               },
               "403": {
                  "description": "Forbidden"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/workplaces": {
         "get": {
            "tags": [
               "Workplace"
            ],
            "summary": "Get Workplaces",
            "description": "Returns all Workplace records.",
            "operationId": "GetWorkplaces",
            "parameters": [
               {
                  "name": "lastModifiedTimeStampFilter",
                  "in": "query",
                  "description": "Filter by LastModifiedTimeStamp (allows additional filter operators as per above)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on Code and Description.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "skip",
                  "in": "query",
                  "description": "Number of records to skip",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               },
               {
                  "name": "take",
                  "in": "query",
                  "description": "Number of records to take",
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/WorkplaceItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "Workplace"
            ],
            "summary": "Create Workplaces",
            "description": "Add a Workplace record. Minimum required fields: Description.",
            "operationId": "CreateWorkplaces",
            "requestBody": {
               "description": "Workplace objects to add",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/Workplace"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/WorkplaceItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/workplaces/{id}": {
         "get": {
            "tags": [
               "Workplace"
            ],
            "summary": "Get Workplace by Id",
            "description": "Returns a single Workplace record for a given WorkplaceId.",
            "operationId": "GetWorkplace",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Workplace",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/WorkplaceItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Workplace not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "put": {
            "tags": [
               "Workplace"
            ],
            "summary": "Replace Workplace",
            "description": "Replaces a Workplace for the given WorkplaceId",
            "operationId": "ReplaceWorkplace",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of the Workplace",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "The source.",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Workplace"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/WorkplaceItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Workplace not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/aacs": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Aacs",
            "description": "Australia only. Returns all Aac records. Used in Course Enrolment.",
            "operationId": "GetAacs",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AacItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/accreditation-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get AccreditationTypes",
            "description": "Returns all Accreditation Type records. Used in Workplace.",
            "operationId": "GetAccreditationTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AccreditationTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/admission-basis": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get AdmissionBasis",
            "description": "Australia only. Returns all Admission Basis records. Used in Course Enrolment for Fee Help and VSL.",
            "operationId": "GetAdmissionBasis",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AdmissionBasisItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/age-categories": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get AgeCategories",
            "description": "Australia only. Returns all Age Category records. Used in LearnerAu Personal.",
            "operationId": "GetAgeCategories",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AgeCategoryItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/agent-agreement-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get AgentAgreementStatuses",
            "description": "Returns all Agent Agreement Status records. Used in Agent.",
            "operationId": "GetAgentAgreementStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AgentAgreementStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/agent-classifications": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get AgentClassifications",
            "description": "Returns all Agent Classification records. Used in Agent.",
            "operationId": "GetAgentClassifications",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AgentClassificationItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/agent-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get AgentStatuses",
            "description": "Returns all Agent Status records. Used in Agent.",
            "operationId": "GetAgentStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AgentStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/alert-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get AlertTypes",
            "description": "Returns all Alert Type records.",
            "operationId": "GetAlertTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AlertTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/anzscos": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Anzscos",
            "description": "Returns all ANZSCO records. Used in Course.",
            "operationId": "GetAnzscos",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AnzscoItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/anzsics": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Anzsics",
            "description": "Returns all Anzsic records. Used in Workplace.",
            "operationId": "GetAnzsicTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AnzsicItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/application-payment-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get PaymentTypes",
            "description": "Returns all Payment Type records.",
            "operationId": "GetApplicationPaymentTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ApplicationPaymentTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/application-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get ApplicationStatuses",
            "description": "Returns all Application Status records. Used in Course Enrolment.",
            "operationId": "GetApplicationStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ApplicationStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/application-status-reasons": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get ApplicationStatusReasons",
            "description": "Returns all Application Status Reason records. Used in Course Enrolment.",
            "operationId": "GetApplicationStatusReasons",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ApplicationStatusReasonItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/ascos": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Ascos",
            "description": "Returns all ASCOs",
            "operationId": "GetAscos",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AscoItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/assessment-methods": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get AssessmentMethods",
            "description": "Returns all Assessment Method records. Used in Course Offer, Unit Offer and Unit Enrolment.",
            "operationId": "GetAssessmentMethods",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AssessmentMethodItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/attendance-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get AttendanceTypes",
            "description": "Australia only. Returns all Attendance Type records. Used in Course Enrolment for Fee Help and VSL.",
            "operationId": "GetAttendanceTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AttendanceTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/auto-grade-rule-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get AutoGradeRuleTypes",
            "description": "Returns all Auto Grade Rule Type records.",
            "operationId": "GetAutoGradeRuleTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AutoGradeRuleTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/auto-grade-activity-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get AutoGradeActivityStatuses",
            "description": "Returns all Auto Grade Activity Status records.",
            "operationId": "GetAutoGradeActivityStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AutoGradeStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/av-study-reasons": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get AvStudyReasons",
            "description": "Australia only. Returns all Study Reason records. Used in Course Offer and Course Enrolment.",
            "operationId": "GetAvStudyReasons",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/AvStudyReasonItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/campus-operation-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get CampusOperationTypes",
            "description": "Australia only. Returns all Campus Operation Type records. Used in Course Offer for Fee Help.",
            "operationId": "GetCampusOperationTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CampusOperationTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/close-lost-reasons": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get CloseLostReasons",
            "description": "Returns all Close Lost Reason records. Used in Opportunity.",
            "operationId": "GetCloseLostReasons",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CloseLostReasonItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/commencing-program-cohorts": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get CommencingProgramCohorts",
            "description": "Returns all Commencing Program Cohorts",
            "operationId": "GetCommencingProgramCohorts",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CommencingProgramCohortItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/commenced-at-school-flags": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get CommencedAtSchoolFlag",
            "description": "Returns all Commenced at School Flag records",
            "operationId": "GetCommencedAtSchoolFlag",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CommencedAtSchoolFlagItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/commencing-courses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get CommencingCourses",
            "description": "Australia only. Returns all Commencing Course Identifier records. Used in Course Offer and Course Enrolment.",
            "operationId": "GetCommencingCourses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CommencingCourseItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/commencing-student-identifiers": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get CommencingStudentIdentifiers",
            "description": "Australia only. Returns all Commencing Student Identifier records. Used in a Fee Help and VetStudentLoan course enrolment.",
            "operationId": "GetCommencingStudentIdentifiers",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CommencingStudentIdentifierItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/completion-pathways": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get CompletionPathways",
            "description": "Returns all Completion Pathway records. Used in Course Enrolment.",
            "operationId": "GetCompletionPathways",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CompletionPathwayItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/course-offer-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get CourseOfferStatuses",
            "description": "Returns all Course Offer Status records. Used in Course Offer.",
            "operationId": "GetCourseOfferStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CourseOfferStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/course-offer-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get CourseOfferTypes",
            "description": "Returns all Course Offer Type records. Used in Course Offer.",
            "operationId": "GetCourseOfferTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CourseOfferTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/contract-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get ContractTypes",
            "description": "Australia only. Returns all Contract Type records. Used in Course Offer and Course Enrolment.",
            "operationId": "GetContractTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ContractTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/countries": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Countries",
            "description": "Australia only. Returns all country records. Used in LearnerAu. (see nz-countries for NZ and SG)",
            "operationId": "GetCountries",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CountryItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/credential-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get CredentialStatuses",
            "description": "Returns all Credential Status records. Used in Credentials.",
            "operationId": "GetCredentialStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CredentialStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/currencies": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Currencies",
            "description": "Returns all Currency records",
            "operationId": "GetCurrencies",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/CurrencyItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/elearning-course-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get ElearningCourseStatuses",
            "description": "Returns all Elearning Course Status records.",
            "operationId": "GetElearningCourseStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ElearningCourseStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/elearning-enrolment-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get ElearningEnrolmentStatuses",
            "description": "Returns all Elearning Enrolment Status records.",
            "operationId": "GetElearningEnrolmentStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ElearningEnrolmentStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/event-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get EventTypes",
            "description": "Returns all Event Type records.",
            "operationId": "GetEventTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/EventTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/delivery-modes": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get DeliveryModes",
            "description": "Returns all Delivery Mode (AV7) records. Used in Course Offer, Unit Offer and Unit Enrolment.",
            "operationId": "GetDeliveryModes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/DeliveryModeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/delivery-modes-av8": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get DeliveryModesAv8",
            "description": "Australia only. Returns all Delivery Mode (AV8) records. Used in Course Offer, Unit Offer and Unit Enrolment.",
            "operationId": "GetDeliveryModesAv8",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/DeliveryModeAv8Item"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/delivery-modes-wa": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get DeliveryModesWa",
            "description": "Australia only. Returns all Delivery Modes (WA) records. Used in Course Offer, Unit Offer and Unit Enrolment.",
            "operationId": "GetDeliveryModesWa",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/DeliveryModeWaItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/delivery-options": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get DeliveryOptions",
            "description": "Returns all Delivery Option records.",
            "operationId": "GetDeliveryOptions",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/DeliveryOptionItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/department-codes": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get DepartmentCodes",
            "description": "Returns all Department Code records. Used in Course Offer.",
            "operationId": "GetDepartmentCodes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/DepartmentCodeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/disabilities": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Disabilities",
            "description": "Returns all disability type records. Used in LearnerAu, LearnerSg and LearnerNz.",
            "operationId": "GetDisabilities",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/DisabilityItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/disability-flags": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get DisabilityFlags",
            "description": "Returns disability flag records. Used in LearnerAu and LearnerSg Demographics.",
            "operationId": "GetDisabilityFlags",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/DisabilityFlagItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/duration-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get DurationTypes",
            "description": "Returns duration type records. Used in Course Enrolment.",
            "operationId": "GetDurationTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/DurationTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/employment-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get EmploymentStatuses",
            "description": "Returns all Employment Status records. Used in LearnerAu and LearnerNz.",
            "operationId": "GetEmploymentStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/EmploymentStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/english-test-score-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get EnglishTestScoreTypes",
            "description": "Returns Spoken English Proficiency records. Used in LearnerAu, LearnerNZ and LearnerSg Demographics.",
            "operationId": "GetEnglishTestScoreTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/EnglishTestScoreTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/enrolment-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get EnrolmentStatuses",
            "description": "Returns all Enrolment Statuses",
            "operationId": "GetEnrolmentStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/EnrolmentStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/enrolment-status-reasons": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get EnrolmentStatusReasons",
            "description": "Returns all Status Reason records. Used in Course Enrolment.",
            "operationId": "GetEnrolmentStatusReasons",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/EnrolmentStatusReasonItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/element-enrolment-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get ElementEnrolmentStatuses",
            "description": "Returns all Element Enrolment Statuses",
            "operationId": "GetElementEnrolmentStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ElementEnrolmentStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/fee-assessment-categories": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FeeAssessmentCategories",
            "description": "New Zealand only. Returns all Fee Assessment Category records. Used in Course Offer, Unit Offer and Unit Enrolment.",
            "operationId": "GetFeeAssessmentCategories",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FeeAssessmentCategoryItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/fee-exemptions": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FeeExemptions",
            "description": "Australia only. Returns all Fee Exemption records. Used in Course Offer, Unit Offer and Unit Enrolment.",
            "operationId": "GetFeeExemptions",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FeeExemptionItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/fee-exemption-waivers": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FeeExemptionWaivers",
            "description": "Australia only. Returns all Fee Exemption Waiver records. Used in Course Offer, Unit Offer and Unit Enrolment.",
            "operationId": "GetFeeExemptionWaivers",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FeeExemptionWaiverItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/fees-free-eligibles": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FeesFreeEligibles",
            "description": "New Zealand only. Returns all Fees free eligible records. Used in Learner.",
            "operationId": "GetFeesFreeEligibles",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FeesFreeEligibleItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/fee-type-indicators": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FeeTypeIndicators",
            "description": "Australia Only. Returns all Fee Type Indicator records. Used in Course Enrolment and Course Offer for Fee Help and VSL.",
            "operationId": "GetFeeTypeIndicators",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FeeTypeIndicatorItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/fh-additional-entrance-criteria": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FhAdditionalEntranceCriteria",
            "description": "Australia only. Returns all Additional Entrance Criteria records. Used in LearnerAu Demographics Fee Help.",
            "operationId": "GetFhAdditionalEntranceCriteria",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FhAdditionalEntranceCriteriaItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/fh-basis-for-admission": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FhBasisForAdmission",
            "description": "Australia only. Returns all Basis for Admission records. Used in Learner for Fee Help and VSL.",
            "operationId": "GetFhBasisForAdmission",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FhBasisForAdmissionItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/fh-citizen-residents": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FhCitizenshipResidents",
            "description": "Australia only. Returns all Fee Help Citizen Resident records. Used in LearnerAu Demographics.",
            "operationId": "GetFhCitizenshipResidents",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FhCitizenResidentItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/fh-field-of-educations": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FhFieldOfEducations",
            "description": "Australia only. Returns all Field of Education records. Used in Course Enrolment for Fee Help.",
            "operationId": "GetFhFieldOfEducations",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FhFieldOfEducationItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/fh-highest-education-levels": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FhHighestEducationLevels",
            "description": "Australia only. Returns all Highest Education Level records. Used in LearnerAu Demographics Fee Help.",
            "operationId": "GetFhHighestEducationLevels",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FhHighestEducationLevelItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/fh-indigenous-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FhIndigenousStatuses",
            "description": "Australia only. Returns Indigenous Status records. Used in LearnerAu Demographics Fee Help.",
            "operationId": "GetFhIndigenousStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FhIndigenousStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/fh-parent-education-levels": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FhParentEducationLevels",
            "description": "Australia only. Returns all Parent Education Level records. Used in LearnerAu Demographics Fee Help.",
            "operationId": "GetFhParentEducationLevels",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FhParentEducationLevelItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/fh-study-reasons": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FhStudyReasons",
            "description": "Australia Only. Returns all Study Reason records. Used in Course Enrolment for Fee Help and VSL.",
            "operationId": "GetFhStudyReasons",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FhStudyReasonItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/fps-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FpsStatuses",
            "description": "Singapore Only. Returns FPS Status records. Used in Course Enrolment.",
            "operationId": "GetFpsStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FpsStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/fps-waiver-reasons": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FpsWaiverReasons",
            "description": "Singapore Only. Returns FPS Waiver Reason records. Used in Course Enrolment.",
            "operationId": "GetFpsWaiverReasons",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FpsWaiverReasonItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/fund-sources": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FundSources",
            "description": "New Zealand Only. Returns Fund Source records. Used in Course Offer and Course Enrolment.",
            "operationId": "GetFundSources",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FundSourceItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/fund-source-nationals": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FundSourceNationals",
            "description": "Australia only. Returns all Fund Source National records. Used in Course Offer, Unit Offer and Unit Enrolment.",
            "operationId": "GetFundSourceNationals",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FundSourceNationalItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/fund-source-states": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get FundSourceStates",
            "description": "Australia only. Returns all Fund Source State records. Used in Course Offer, Unit Offer and Unit Enrolment.",
            "operationId": "GetFundSourceStates",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/FundSourceStateItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/genders": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Genders",
            "description": "Australia Only. Returns all Gender records. Used in LearnerAu Personal. (see nz-genders for NZ and SG)",
            "operationId": "GetGenders",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/GenderItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/highest-school-level-completed": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get HighestSchoolLevelCompleted",
            "description": "Australia only. Returns Highest School Level Completed records. Used in LearnerAu Demographics.",
            "operationId": "GetHighestSchoolLevelCompleted",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/HighestSchoolLevelItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/indigenous-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get IndigenousStatuses",
            "description": "Australia only. Returns Indigenous Status records. Used in LearnerAu Demographics.",
            "operationId": "GetIndigenousStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/IndigenousStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/industries": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Industries",
            "description": "Returns all Industry records.",
            "operationId": "GetIndustries",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/IndustryItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/industries-of-employment": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get IndustriesOfEmployment",
            "description": "Australia only. Returns Industry of Employment records. Used in LearnerAu Demographics.",
            "operationId": "GetIndustriesOfEmployment",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/IndustryOfEmploymentItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/industry-sizes": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get IndustrySizes",
            "description": "Returns Industry Size records. Used in Workplace.",
            "operationId": "GetIndustrySizes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/IndustrySizeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/internet-based-learnings": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get InternetBasedLearnings",
            "description": "New Zealand only. Returns all Internet Based Learning records. Used in Course Offer and Unit Offer.",
            "operationId": "GetInternetBasedLearnings",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/InternetBasedLearningItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/languages": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Languages",
            "description": "Returns all Language records. Used in LearnerAu, LearnerNz and LearnerSg Demographics Language Spoken at Home and Course Offer Delivery Language.",
            "operationId": "GetLanguages",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LanguageItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/level-of-educations": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get LevelOfEducations",
            "description": "Australia only. Returns Highest School Level Completed records. Used in LearnerAu Demographics.",
            "operationId": "GetLevelOfEducations",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LevelOfEducationItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/lln-benefits": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get LlnBenefits",
            "description": "Returns all LLN Benefit records. Used in LLN.",
            "operationId": "GetLlnBenefits",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LlnBenefitItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/lln-levels": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get LlnLevels",
            "description": "Returns all LLN Level records. Used in LLN.",
            "operationId": "GetLlnLevels",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LlnLevelItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/lln-post-assesses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get LlnPostAssesses",
            "description": "Returns all LLN Post-Assess records. Used in Learner LLN.",
            "operationId": "GetLlnPostAssesses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LlnPostAssessItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/lln-pre-assesses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get LlnPreAssesses",
            "description": "Returns all LLN Pre-Assess records. Used in Learner LLN.",
            "operationId": "GetLlnPreAssesses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/LlnPreAssessItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/main-subjects": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get MainSubjects",
            "description": "New Zealand only. Returns Main Subject records. Used in Course Offer and Course Enrolment.",
            "operationId": "GetMainSubjects",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/MainSubjectItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/managed-apprenticeships": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get ManagedApprenticeships",
            "description": "New Zealand only. Returns Managed Apprenticeship records. Used in Course Enrolment.",
            "operationId": "GetManagedApprenticeships",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ManagedApprenticeshipItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/marital-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get MaritalStatuses",
            "description": "Returns all Marital Statuses. Used in Learner.",
            "operationId": "GetMaritalStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/MaritalStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/mural-attendances": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get MuralAttendances",
            "description": "New Zealand only. Returns all Mural Attendance records. Used in Course Offer, Unit Offer and Unit Enrolment.",
            "operationId": "GetMuralAttendances",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/MuralAttendanceItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/next-of-kin-relationships": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NextOfKinRelationships",
            "description": "Returns Next of Kin Relationship records. Used in LearnerAu, LearnerNz and LearnerSg Personal.",
            "operationId": "GetNextOfKinRelationships",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NextOfKinRelationshipItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "Combo"
            ],
            "summary": "Create NextOfKinRelationships",
            "description": "Add Next of Kin Relationship records",
            "operationId": "CreateNextOfKinRelationships",
            "requestBody": {
               "description": "Next of Kin Relationship objects to add",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/NextOfKinRelationship"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NextOfKinRelationshipItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/next-of-kin-relationships/{id}": {
         "put": {
            "tags": [
               "Combo"
            ],
            "summary": "Replace NextOfKinRelationship",
            "description": "Replace a Next of Kin Relationship record for a given Next of Kin Relationship id.",
            "operationId": "ReplaceNextOfKinRelationships",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of Next of Kin Relationship to update",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "Next of Kin Relationship object to update with",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/NextOfKinRelationship"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/NextOfKinRelationshipItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Next of Kin Relationship not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/nz-countries": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzCountries",
            "description": "New Zealand and Singapore only. Returns all country records. Used in LearnerNz and LearnersSg. (see countries for AU)",
            "operationId": "GetNzCountries",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzCountryItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/nz-disability-accessed": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzDisabilityAccessed",
            "description": "New Zealand only. Returns all Disability Accessed records. Used in LearnerNz Demographics.",
            "operationId": "GetNzDisabilityAccessed",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzDisabilityAccessedFlagItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/nz-disability-flags": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzDisabilityFlags",
            "description": "New Zealand only. Returns all Disability Flag records. Used in LearnerNz Demographics.",
            "operationId": "GetNzDisabilityFlags",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzDisabilityFlagItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/nz-ethnicities": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzEthnicities",
            "description": "New Zealand only. Returns all Ethnicity records. Used in LearnerNz Demographics.",
            "operationId": "GetNzEthnicities",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzEthnicityItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/nz-genders": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzGenders",
            "description": "New Zealand and Singapore only. Returns all Gender records. Used in LearnerNz and LearnerSg Personal. (see genders for AU)",
            "operationId": "GetNzGenders",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzGenderItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/nz-iwi-affiliations": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzIwiAffiliations",
            "description": "New Zealand only. Returns all IWI affiliation records. Used in LearnerNZ Demographics.",
            "operationId": "GetNzIwiAffiliations",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzIwiAffiliationItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/nz-last-schools-attended": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzLastSchoolsAttended",
            "description": "New Zealand only. Returns all Last School Attended records. Used in LearnerNz Demographics.",
            "operationId": "GetNzLastSchoolsAttended",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzLastSchoolAttendedItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/nz-employment-location-codes": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzEmploymentLocationCodes",
            "description": "New Zealand only, Returns all nz employment location codes. Used in Workplace",
            "operationId": "GetNzEmploymentLocationCodes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzEmploymentLocationCodeItem"
                           }
                        }
                     }
                  }
               },
               "401": {
                  "description": "Unauthorized"
               },
               "403": {
                  "description": "Forbidden"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/nz-main-activities-prior-to-study": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzMainActivitiesPriorToStudy",
            "description": "New Zealand only. Returns all Main Activities Prior to Study records. Used in LearnerNz Demographics.",
            "operationId": "GetNzMainActivitiesPriorToStudy",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzMainActivityPriorToStudyItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/nz-outcomes": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzOutcomes",
            "description": "New Zealand only. Returns all Outcome records. Used in Unit Enrolments.",
            "operationId": "GetNzOutcomes",
            "parameters": [
               {
                  "name": "sort",
                  "in": "query",
                  "description": "Field name to sort NzOutcomes by.  Supported fields are NzOutcomeId and Code. Default sorting is by Code asc.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "Order in which NzOutcomes are sorted.  Supported orders are asc and desc.",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzOutcomeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/nzqa-awarding-providers": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzqaAwardingProviders",
            "description": "New Zealand only. Returns all NZQA Awarding Provider records. Used in Course Enrolment.",
            "operationId": "GetNzqaAwardingProviders",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzqaAwardingProviderItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/nzqa-request-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzqaRequestTypes",
            "description": "New Zealand only. Returns all NZQA Request Type records. Used in Course Enrolment.",
            "operationId": "GetNzqaRequestTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzqaRequestTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/nzqa-results": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzqaResults",
            "description": "New Zealand only. Returns all NZQA Result records. Used in Unit Enrolments.",
            "operationId": "GetNzqaResults",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzqaResultItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/nz-residential-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzResidentialStatuses",
            "description": "New Zealand only. Returns all Residential Status records. Used in LearnerNz Demographics.",
            "operationId": "GetNzResidentialStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzResidentialStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/nz-secondary-qualifications": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzSecondaryQualifications",
            "description": "New Zealand only. Returns all Secondary Qualification records. Used in LearnerNz Demographics.",
            "operationId": "GetNzSecondaryQualifications",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzSecondaryQualificationItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/nz-visa-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get NzVisaTypes",
            "description": "New Zealand only. Returns all Visa Type records. Used in LearnerNz International.",
            "operationId": "GetNzVisaTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/NzVisaTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/occupation-identifiers": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get OccupationIdentifiers",
            "description": "Australia only. Returns all Occupation Identifier records. Used in LearnerAu Demographics.",
            "operationId": "GetOccupationIdentifiers",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/OccupationIdentifierItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/offshore-delivery-indicators": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get OffshoreDeliveryIndicators",
            "description": "Australia only. Returns all Offshore Delivery Indicator records. Used in Course Offer for Fee Help.",
            "operationId": "GetOffshoreDeliveryIndicators",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/OffshoreDeliveryIndicatorItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/offshore-delivery-modes": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get OffshoreDeliveryModes",
            "description": "Australia only. Returns all Offshore Delivery Mode records. Used in Course Offer for Fee Help.",
            "operationId": "GetOffshoreDeliveryModes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/OffshoreDeliveryModeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/opportunity-sources": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get OpportunitySources",
            "description": "Returns all Opportunity Source records. Used in Opportunity.",
            "operationId": "GetOpportunitySources",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/OpportunitySourceItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/opportunity-stages": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get OpportunityStages",
            "description": "Returns all Opportunity Stage records. Used in Opportunity.",
            "operationId": "GetOpportunityStages",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/OpportunityStageItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/opportunity-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get OpportunityTypes",
            "description": "Returns all Opportunity Type records. Used in Opportunity.",
            "operationId": "GetOpportunityTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/OpportunityTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/outcomes": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Outcomes",
            "description": "Australia only. Returns all Outcome records. Used in Unit Enrolments.",
            "operationId": "GetOutcomes",
            "parameters": [
               {
                  "name": "sort",
                  "in": "query",
                  "description": "Field name to sort Outcomes by.  Supported fields are OutcomeId and Code. Default sorting is by Code asc.",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "order",
                  "in": "query",
                  "description": "Order in which Outcomes are sorted.  Supported orders are asc and desc.",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/OutcomeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/pay-levels": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get PayLevels",
            "description": "Returns all Pay Level records. Used in Learner Postions.",
            "operationId": "GetPayLevels",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/PayLevelItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/payment-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get PaymentTypes",
            "description": "Returns all Payment Type records. Used in Course Enrolment.",
            "operationId": "GetPaymentTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/PaymentTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/period-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get PeriodTypes",
            "description": "Returns all Period Type records. Used in Learncycles.",
            "operationId": "GetPeriodTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/PeriodTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/pipelines": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get pipelines",
            "description": "Returns all pipelines.",
            "operationId": "GetPipelines",
            "parameters": [
               {
                  "name": "IsActiveFilter",
                  "in": "query",
                  "description": "Filter by IsActive",
                  "schema": {
                     "type": "boolean"
                  }
               },
               {
                  "name": "search",
                  "in": "query",
                  "description": "This does a string search on Description",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/PipelineItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/positions": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Positions",
            "description": "Returns all Position records. Used in Learner Postions.",
            "operationId": "GetPositions",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/PositionItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/predominant-delivery-modes": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get PredominantDeliveryModes",
            "description": "Australia only. Returns all Predominant Delivery Mode records. Used in Course Offer, Unit Offer and Unit Enrolment.",
            "operationId": "GetPredominantDeliveryModes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/PredominantDeliveryModeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/prior-education-flags": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get PriorEducationFlags",
            "description": "Returns all Prior Ed Flag records. Used in LearnerAu and LearnerNz Demographics.",
            "operationId": "GetPriorEducationFlags",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/PriorEducationFlagItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/prior-educations": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get PriorEducations",
            "description": "Returns all Prior Ed Achieved records. Used in LearnerAu and LearnerNz Demographics.",
            "operationId": "GetPriorEducations",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/PriorEducationItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/prior-education-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get PriorEducationTypes",
            "description": "Australia only. Returns all Prior Ed Identifier (Vic) records. Used in LearnerAu Demographics.",
            "operationId": "GetPriorEducationTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/PriorEducationTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/publish-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get PublishTypes",
            "description": "Returns all Publish Type records.",
            "operationId": "GetPublishTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/PublishTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/programs": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Programs",
            "description": "Returns all Program records. Used in Course Offer.",
            "operationId": "GetPrograms",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ProgramItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/program-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get ProgramStatuses",
            "description": "Australia only. Returns all Program Status records. Used in Course Offer and Course Enrolment.",
            "operationId": "GetProgramStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ProgramStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/qualification-field-of-educations": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get QualificationFieldOfEducations",
            "description": "Returns all Qualification Field of Education records. Used in Course.",
            "operationId": "GetQualificationFieldOfEducations",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/QualificationFieldOfEducationItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/recognition-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get RecognitionStatuses",
            "description": "Australia only. Returns all Recognition Status records. Used in Course.",
            "operationId": "GetRecognitionStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/RecognitionStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/recipient-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get RecipientTypes",
            "description": "Returns all Recipient Type records. Used in Learncycles.",
            "operationId": "GetRecipientTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/RecipientTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/regions": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Regions",
            "description": "Returns all Region records. Used in Agent.",
            "operationId": "GetRegions",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/RegionItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/results": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Results",
            "description": "Returns all Result records. Used in Unit Enrolments.",
            "operationId": "GetResults",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ResultItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/rto-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get RtoStatuses",
            "description": "Australia only. Returns all RTO Status records. Used in Course Enrolment.",
            "operationId": "GetRtoStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/RtoStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/sa-alternative-identifier-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SaAlternativeIdentifierTypes",
            "description": "South Africa only. Returns all Alternative Identifier Type records. Used in LearnerSa Personal",
            "operationId": "GetSaAlternativeIdentifierTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SaAlternativeIdentifierTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/sa-citizen-resident-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SaCitizenResidentStatuses",
            "description": "South Africa only. Returns all Citizen Resident Status records. Used in LearnerSa Demographics",
            "operationId": "GetSaCitizenResidentStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SaCitizenResidentStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/sa-equities": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SaEquities",
            "description": "South Africa only. Returns all Equity records. Used in LearnerSa Demographics",
            "operationId": "GetSaEquities",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SaEquityItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/sa-health-ratings": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SaHealthRatings",
            "description": "South Africa only. Returns all Health Rating records. Used in LearnerSa Demographics",
            "operationId": "GetSaHealthRatings",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SaHealthRatingItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/sa-highest-qualification-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get HighestQualificationTypes",
            "description": "South Africa only. Returns all Highest Qualification Type records. Used in Staff",
            "operationId": "GetHighestQualificationTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SaHighestQualificationTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/sa-languages": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SaLanguages",
            "description": "South Africa only. Returns all Language records. Used in LearnerSa Demographics",
            "operationId": "GetSaLanguages",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SaLanguageItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/sa-nationalities": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SaNationalities",
            "description": "South Africa only. Returns all Nationality records. Used in LearnerSa Demographics",
            "operationId": "GetSaNationalities",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SaNationalityItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/sa-provinces": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SaProvinces",
            "description": "South Africa only. Returns all Province records. Used in LearnerSa Demographics",
            "operationId": "GetSaProvinces",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SaProvinceItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/sa-socioeconomic-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SaSocioeconomicStatuses",
            "description": "South Africa only. Returns all Socioeconomic Status records. Used in LearnerSa Demographics",
            "operationId": "GetSaSocioeconomicStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SaSocioeconomicStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/sales-contact-stages": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SalesContactStages",
            "description": "Returns all Sales Contact Stage records. Used in Sales Contact.",
            "operationId": "GetSalesContactStages",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SalesContactStageItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/sales-contact-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SalesContactTypes",
            "description": "Returns all Sales Contact Type records. Used in Sales Contact.",
            "operationId": "GetSalesContactTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SalesContactTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/scholarship-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get ScholarshipTypes",
            "description": "Australia only. Returns all Scholarship Type records. Used in Course Enrolment for Fee Help.",
            "operationId": "GetScholarshipTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/ScholarshipTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/school-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SchoolTypes",
            "description": "Returns all School Type records. Used in Workplace.",
            "operationId": "GetSchoolTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SchoolTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/separation-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SeparationStatuses",
            "description": "Australia only. Returns all Separation Status records. Used in Course Enrolment for Fee Help.",
            "operationId": "GetSeparationStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SeparationStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/sg-nric-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SgNricTypes",
            "description": "Singapore only. Returns all NRIC Type records. Used in LearnerSg Personal.",
            "operationId": "GetSgNricTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SgNricTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/sg-prior-educations": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SgPriorEducations",
            "description": "Singapore only. Returns all Prior Education Achieved (SG) records. Used in LearnerSg Demographics.",
            "operationId": "GetSgPriorEducations",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SgPriorEducationItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/sg-prior-educations-wsq": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SgWsqPriorEducations",
            "description": "Singapore only. Returns all Prior Education (WSQ) records. Used in LearnerSg Demographics.",
            "operationId": "GetSgWsqPriorEducations",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SgPriorEducationWsqItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/sg-nationalities": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SgNationalities",
            "description": "Singapore only. Returns all Nationality records. Used in LearnerSg Demographics and International.",
            "operationId": "GetSgNationalities",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SgNationalityItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/sg-residential-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SgResidentialStatuses",
            "description": "Singapore only. Returns all Residential Status records. Used in LearnerSg Demographics.",
            "operationId": "GetSgResidentialStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SgCitizenPrStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/sg-identity-document-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SgIdentityDocumentTypes",
            "description": "Singapore only. Returns all Identity Document Type records. Used in LearnerSg Demographics.",
            "operationId": "GetSgIdentityDocumentTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SgIdentityDocumentTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/sg-races": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SgRaces",
            "description": "Singapore only. Returns all Race records. Used in LearnerSg Demographics.",
            "operationId": "GetSgRaces",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SgRaceItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/specific-program-identifiers": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SpecificProgramIdentifiers",
            "description": "Returns all Specific Program Identifier records. Used in Unit Enrolments.",
            "operationId": "GetSpecificProgramIdentifiers",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SpecificProgramIdentifierItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/spoken-english-proficiencies": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SpokenEnglishProficiencies",
            "description": "Returns all Spoken English Proficiency records. Used in LearnerAu, LearnerNZ and LearnerSg Demographics.",
            "operationId": "GetSpokenEnglishProficiencies",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SpokenEnglishProficiencyItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/states": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get States",
            "description": "Australia only. Returns all State records. Used in LearnerAu Personal.",
            "operationId": "GetStates",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/StateItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/student-pass-requirements": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get StudentPassRequirements",
            "description": "Singapore only. Returns all Student Pass Requirement records. Used in Course Enrolment.",
            "operationId": "GetStudentPassRequirements",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/StudentPassRequirementItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/studylink-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get StudylinkStatuses",
            "description": "New Zealand only. Returns all Studylink Status records. Used in Course Enrolment.",
            "operationId": "GetStudylinkStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/StudylinkStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/studylink-status-reasons": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get StudylinkStatusReasons",
            "description": "Returns all Studylink Status Reasons",
            "operationId": "GetStudylinkStatusReasons",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/StudylinkStatusReasonItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/study-modes": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get StudyModes",
            "description": "Returns all Study Mode records. Used in Course Enrolment.",
            "operationId": "GetStudyModes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/StudyModeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/survey-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get SurveyStatuses",
            "description": "Australia only. Returns all Survey Status records. Used in LearnerAu Personal.",
            "operationId": "GetSurveyStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/SurveyStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/target-groups-course-enrolment": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get TargetGroupsCourseEnrolment",
            "description": "Returns all Target Group Course Enrolment records. Used in Course Enrolment.",
            "operationId": "GetTargetGroupsCourseEnrolment",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/TargetGroupCourseEnrolmentItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/target-groups-learner": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get TargetGroupsLearner",
            "description": "Returns Learner Target Group Learner records. Used in LearnerAu and LearnerNz Demographics.",
            "operationId": "GetTargetGroupsLearner",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/TargetGroupClientItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/task-completion-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get TaskCompletionStatuses",
            "description": "Returns Task Completion Status records. Used in Logbooks and Tasks.",
            "operationId": "GetTaskCompletionStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/TaskCompletionStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/task-priorities": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get TaskPriorities",
            "description": "Returns Task Priority records. Used in Tasks.",
            "operationId": "GetTaskPriorities",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/TaskPriorityItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/unit-field-of-educations": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get UnitFieldOfEducations",
            "description": "Returns all Unit Field of Education records. Used in Unit.",
            "operationId": "GetUnitFieldOfEducations",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/UnitFieldOfEducationItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/unit-of-competency-flags": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get UnitOfCompetencyFlags",
            "description": "Returns all Unit of Competency Flag records. Used in Unit.",
            "operationId": "GetUnitOfCompetencyFlags",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/UnitOfCompetencyFlagItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/unit-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get UnitTypes",
            "description": "Returns all Unit Type records. Used in Unit.",
            "operationId": "GetUnitTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/UnitTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/venues": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Venues",
            "description": "Returns all Venue records. Used in Course Offer, Unit Offer and Class.",
            "operationId": "GetVenues",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/VenueItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/vaccine-statuses": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get VaccineStatuses",
            "description": "Returns all Vaccine Statuses",
            "operationId": "GetVaccineStatuses",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/VaccineStatusItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/visa-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get VisaTypes",
            "description": "Returns all Visa Types in LearnerAu, LearnerNz and LearnerSg International.",
            "operationId": "GetVisaTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/VisaTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/visas": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get Visas",
            "description": "Returns all Visas",
            "operationId": "GetVisas",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/VisaItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         },
         "post": {
            "tags": [
               "Combo"
            ],
            "summary": "Create Visas",
            "description": "Add Visa records",
            "operationId": "CreateVisas",
            "requestBody": {
               "description": "Visa objects to add",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "array",
                        "items": {
                           "$ref": "#/components/schemas/Visa"
                        }
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/VisaItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/visas/{id}": {
         "put": {
            "tags": [
               "Combo"
            ],
            "summary": "Replace Visa",
            "description": "Replace a Visa record for a given id.",
            "operationId": "ReplaceVisa",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Id of Visa to update",
                  "required": true,
                  "schema": {
                     "type": "integer",
                     "format": "int32"
                  }
               }
            ],
            "requestBody": {
               "description": "Visa object to update with",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Visa"
                     }
                  }
               },
               "required": true
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/VisaItem"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Visa not found"
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/ureport-template-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get UReportTemplateTypes",
            "description": "Returns Ureport Template Types based on provided entity name",
            "operationId": "GetUReportTemplateTypes",
            "parameters": [
               {
                  "name": "entityNameFilter",
                  "in": "query",
                  "description": "Filter by EntityName",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/UReportTemplateTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occurred"
               }
            },
            "x-public": true
         }
      },
      "/combos/win-probabilities": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get WinProbabilities",
            "description": "Returns all Win Probability records. Used to configure Opportunity Stage combo.",
            "operationId": "GetWinProbabilities",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/WinProbabilityItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/workplace-classifications": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get WorkplaceClassifications",
            "description": "Returns all Workplace Classifications records. Used in Workplace.",
            "operationId": "GetWorkplaceClassifications",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/WorkplaceClassificationItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      },
      "/combos/workplace-types": {
         "get": {
            "tags": [
               "Combo"
            ],
            "summary": "Get WorkplaceTypes",
            "description": "Returns all Workplace Type records. Used to configure Workplace Stage combo.",
            "operationId": "GetWorkplaceTypes",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/WorkplaceTypeItem"
                           }
                        }
                     }
                  }
               },
               "500": {
                  "description": "Error occured"
               }
            },
            "x-public": true
         }
      }
   },
   "components": {
      "schemas": {
         "AgentItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Agent"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AgentRelationships"
               }
            }
         },
         "AgentRequest": {
            "type": "object",
            "properties": {
               "AgentId": {
                  "type": "integer",
                  "description": "Primary Id for Agent that is auto generated",
                  "format": "int32"
               },
               "Name": {
                  "type": "string",
                  "description": "Name used to identify the Agent",
                  "format": "100"
               },
               "Code": {
                  "type": "string",
                  "description": "Code used to identify the Agent",
                  "format": "50"
               },
               "AgentStatusId": {
                  "type": "integer",
                  "description": "See combo AgentStatuses",
                  "format": "int32"
               },
               "ArchivedFlag": {
                  "type": "boolean",
                  "description": "To indicate if Agent is Archived"
               },
               "AssignedToStaffId": {
                  "type": "integer",
                  "description": "See entity Staff",
                  "format": "int32"
               },
               "RegionId": {
                  "type": "integer",
                  "description": "See combo Regions",
                  "format": "int32"
               },
               "AgentAltNumber": {
                  "type": "string",
                  "description": "Alternative number to identify the Agent",
                  "format": "100"
               },
               "AgentClassificationId": {
                  "type": "integer",
                  "description": "See combo AgentClassifications",
                  "format": "int32"
               },
               "MainContactFirstName": {
                  "type": "string",
                  "description": "Main Contact First Name for Agent",
                  "format": "20"
               },
               "MainContactMiddleName": {
                  "type": "string",
                  "description": "Main Contact Middle Name for Agent",
                  "format": "20"
               },
               "MainContactLastName": {
                  "type": "string",
                  "description": "Main Contact Last Name for Agent",
                  "format": "50"
               },
               "Email": {
                  "type": "string",
                  "description": "Agent Email",
                  "format": "80"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Agent Mobile",
                  "format": "20"
               },
               "Phone": {
                  "type": "string",
                  "description": "Agent Phone",
                  "format": "20"
               },
               "PhoneOther": {
                  "type": "string",
                  "description": "Agent Phone Other",
                  "format": "20"
               },
               "Fax": {
                  "type": "string",
                  "description": "Agent Fax",
                  "format": "20"
               },
               "Website": {
                  "type": "string",
                  "description": "Agent Website",
                  "format": "100"
               },
               "BusinessNumber": {
                  "type": "string",
                  "description": "Agent Business Number",
                  "format": "50"
               },
               "CompanyNumber": {
                  "type": "string",
                  "description": "Agent Company Number",
                  "format": "50"
               },
               "RegistrationNumber": {
                  "type": "string",
                  "description": "Agent Registration Number",
                  "format": "50"
               },
               "StreetAddress": {
                  "$ref": "#/components/schemas/AgentStreetAddress"
               },
               "PostalAddress": {
                  "$ref": "#/components/schemas/AgentPostalAddress"
               },
               "VetCommission": {
                  "type": "integer",
                  "description": "Agent VET Commission rate as a percentage",
                  "format": "int32"
               },
               "ElicosCommission": {
                  "type": "integer",
                  "description": "Agent ELICOS Commission rate as a percentage",
                  "format": "int32"
               },
               "EnrolmentFeeFlag": {
                  "type": "boolean",
                  "description": "To indicate if Agent receives Enrolment Fee"
               },
               "RegionalScholarshipFlag": {
                  "type": "boolean",
                  "description": "To indicate if Agent receives Regional Scholarship"
               },
               "RegionalScholarshipCode": {
                  "type": "string",
                  "description": "Regional Scholarship Code",
                  "format": "50"
               },
               "LastVisitDate": {
                  "type": "string",
                  "description": "Date Agent was last visited",
                  "format": "date-time"
               },
               "AgentStartDate": {
                  "type": "string",
                  "description": "Date Agent Started",
                  "format": "date-time"
               },
               "AgreementSignDate": {
                  "type": "string",
                  "description": "Date last agreement was signed",
                  "format": "date-time"
               },
               "AgreementExpiryDate": {
                  "type": "string",
                  "description": "Date last agreement expires",
                  "format": "date-time"
               },
               "GeneralNotes": {
                  "type": "string",
                  "description": "Notes regarding the Agent",
                  "format": "1000"
               },
               "AgentAgreementStatusId": {
                  "type": "integer",
                  "description": "See combo AgentAgreementStatuses",
                  "format": "int32"
               },
               "PrimarySalesContactId": {
                  "type": "integer",
                  "description": "See entity SalesContacts. This allows a primary Sales Contact to be defined.",
                  "format": "int32"
               },
               "PromotionIds": {
                  "type": "array",
                  "items": {
                     "type": "integer"
                  }
               }
            }
         },
         "AssessorItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Assessor"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AssessorRelationships"
               }
            }
         },
         "AuditLogItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/AuditLog"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AuditLogRelationships"
               }
            }
         },
         "ChecklistWrappedItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Checklist"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/ChecklistRelationships"
               }
            }
         },
         "Checklist": {
            "type": "object",
            "properties": {
               "ChecklistId": {
                  "type": "integer",
                  "description": "Primary Id for checklist that is auto generated",
                  "format": "int32"
               },
               "ChecklistItemId": {
                  "type": "integer",
                  "description": "Associated Checklist Item Id",
                  "format": "int32"
               },
               "EntityName": {
                  "type": "string",
                  "description": "See entity Entities"
               },
               "RecordId": {
                  "type": "integer",
                  "description": "The RecordId for the EntityName. E.g. The LearnerId if EntityName = Learner.",
                  "format": "int32"
               },
               "DateDue": {
                  "type": "string",
                  "description": "The due date for the checklist",
                  "format": "date-time"
               },
               "DateCompleted": {
                  "type": "string",
                  "description": "The date checklist was completed",
                  "format": "date-time"
               },
               "CompletedFlag": {
                  "type": "boolean",
                  "description": "To indicate if the checklist has been completed or not"
               },
               "StaffName": {
                  "type": "string",
                  "description": "Free text field for staff name associated with checklist"
               },
               "Notes": {
                  "type": "string",
                  "description": "Notes for checklist"
               },
               "Amount": {
                  "type": "number",
                  "description": "Checklist amount used for dollars",
                  "format": "double"
               },
               "TaxExemptFlag": {
                  "type": "boolean",
                  "description": "To indicate if the checklist amount is tax exempt or not"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the checklist was last modified",
                  "format": "date-time"
               }
            }
         },
         "ChecklistItemItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/ChecklistItem"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/ChecklistItemRelationships"
               }
            }
         },
         "CoordinatorItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Coordinator"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CoordinatorRelationships"
               }
            }
         },
         "CourseItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Course"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CourseRelationships"
               }
            }
         },
         "CourseEnrolmentItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/CourseEnrolment"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CourseEnrolmentRelationships"
               }
            }
         },
         "CourseEnrolment": {
            "required": [
               "CourseOfferId",
               "LearnerId"
            ],
            "type": "object",
            "properties": {
               "CourseEnrolmentId": {
                  "type": "integer",
                  "description": "Primary Id for course enrolment that is auto generated",
                  "format": "int32"
               },
               "LearnerId": {
                  "type": "integer",
                  "description": "See entity Learner",
                  "format": "int32"
               },
               "LearnerNumberId": {
                  "type": "integer",
                  "description": "See entity Learner",
                  "format": "int32"
               },
               "CourseOfferId": {
                  "type": "integer",
                  "description": "See entity CourseOffers",
                  "format": "int32"
               },
               "PreviousIdentifier": {
                  "type": "string",
                  "description": "The previous identifier associated with the course enrolment",
                  "format": "10"
               },
               "OpportunityId": {
                  "type": "integer",
                  "description": "See entity Opportunity",
                  "format": "int32"
               },
               "EnrolmentStatusId": {
                  "type": "integer",
                  "description": "See combo EnrolmentStatuses",
                  "format": "int32"
               },
               "EnrolmentStatusReasonId": {
                  "type": "integer",
                  "description": "See combo EnrolmentStatusReasons",
                  "format": "int32"
               },
               "StudyModeId": {
                  "type": "integer",
                  "description": "See combo StudyModes",
                  "format": "int32"
               },
               "TargetGroupId": {
                  "type": "integer",
                  "description": "AU and NZ. See combo TargetGroupsCourseEnrolment",
                  "format": "int32"
               },
               "CoordinatorId": {
                  "type": "integer",
                  "description": "See entity Coordinators",
                  "format": "int32"
               },
               "TrainerId": {
                  "type": "integer",
                  "description": "See entity Trainers",
                  "format": "int32"
               },
               "AssessorId": {
                  "type": "integer",
                  "description": "See entity Assessors",
                  "format": "int32"
               },
               "CompletionPathwayId": {
                  "type": "integer",
                  "description": "See combo Completion Pathway",
                  "format": "int32"
               },
               "CommencedAtSchoolFlagId": {
                  "type": "string",
                  "description": "Commenced at School Flag Id",
                  "format": "int32"
               },
               "EcoeNumber": {
                  "type": "string",
                  "description": "AU only. Electronic Confirmation of Enrolment number",
                  "format": "20"
               },
               "StudentNumber": {
                  "type": "string",
                  "description": "AU and NZ. Student Number for internal use",
                  "format": "255"
               },
               "LearnerPositionId": {
                  "type": "integer",
                  "description": "See entity LearnerPositions",
                  "format": "int32"
               },
               "StudylinkStatusId": {
                  "type": "integer",
                  "description": "NZ Only. See combo StudylinkStatuses",
                  "format": "int32"
               },
               "StudylinkStatusReasonId": {
                  "type": "integer",
                  "description": "NZ Only. See combo StudylinkStatusReasons",
                  "format": "int32"
               },
               "StartDate": {
                  "type": "string",
                  "description": "Course Enrolment Start Date",
                  "format": "date-time"
               },
               "EndDate": {
                  "type": "string",
                  "description": "Course Enrolment End Date",
                  "format": "date-time"
               },
               "EnrolmentDuration": {
                  "type": "string",
                  "description": "Enrolment duration"
               },
               "DurationTypeId": {
                  "type": "integer",
                  "description": "See combo DurationTypes",
                  "format": "int32"
               },
               "ActualEndDate": {
                  "type": "string",
                  "description": "Course Enrolment Actual End Date",
                  "format": "date-time"
               },
               "CourseCommencementDate": {
                  "type": "string",
                  "description": "Course Enrolment Commencement Date",
                  "format": "date-time"
               },
               "TuitionDuration": {
                  "type": "number",
                  "description": "Enrolment Duration",
                  "format": "double"
               },
               "ExpiryDate": {
                  "type": "string",
                  "description": "Date the course enrolment expires",
                  "format": "date-time"
               },
               "ExpectedAwardDate": {
                  "type": "string",
                  "description": "Expected date of when the qualification will be awarded",
                  "format": "date-time"
               },
               "QualificationIssuedFlag": {
                  "type": "boolean",
                  "description": "To indicate if a qualification has been issued or not"
               },
               "QualificationIssuedDate": {
                  "type": "string",
                  "description": "Date the qualification has been issued",
                  "format": "date-time"
               },
               "TrainingPlanIssuedFlag": {
                  "type": "boolean",
                  "description": "AU only. To indicate if the training plan has been issued or not"
               },
               "TrainingPlanSignDate": {
                  "type": "string",
                  "description": "AU only. Date the training plan is signed",
                  "format": "date-time"
               },
               "UniqueTrainingHours": {
                  "type": "integer",
                  "description": "AU and NZ. AU: Program Unique Supervised Hours NZ: The training hours",
                  "format": "int32"
               },
               "InvoiceDate": {
                  "type": "string",
                  "description": "AU only. Earliest date the learner incurred cost",
                  "format": "date-time"
               },
               "ParchmentNumber": {
                  "type": "string",
                  "description": "AU and NZ. The parchment number",
                  "format": "25"
               },
               "EnquiryDate": {
                  "type": "string",
                  "description": "Date an enquiry for the enrolment was made",
                  "format": "date-time"
               },
               "EnrolmentDate": {
                  "type": "string",
                  "description": "Date when the enrolment was created",
                  "format": "date-time"
               },
               "ReEnrolmentDate": {
                  "type": "string",
                  "description": "AU and NZ. Date when the learner was re-enrolled",
                  "format": "date-time"
               },
               "OrientationDate": {
                  "type": "string",
                  "description": "AU and NZ. Orientation Date of the enrolment",
                  "format": "date-time"
               },
               "ForAvetmissFlag": {
                  "type": "boolean",
                  "description": "AU only. To indicate if the enrolment is for AVETMISS reporting"
               },
               "PreviousCourseIdentifier": {
                  "type": "string",
                  "description": "AU only. The superseded course identifier, if applicable",
                  "format": "10"
               },
               "RegistrationNumber": {
                  "type": "string",
                  "description": "AU only. Traineeship number for Course Enrolment",
                  "format": "20"
               },
               "ProgramStatusId": {
                  "type": "integer",
                  "description": "AU only. See combo ProgramStatuses",
                  "format": "int32"
               },
               "ContractTypeId": {
                  "type": "integer",
                  "description": "AU only. See combo ContractTypes",
                  "format": "int32"
               },
               "AvStudyReasonId": {
                  "type": "integer",
                  "description": "AU only. See combo AvStudyReasons",
                  "format": "int32"
               },
               "CommencingCourseId": {
                  "type": "integer",
                  "description": "AU only. See combo CommencingCourses",
                  "format": "int32"
               },
               "EligibilityExemptionFlag": {
                  "type": "string",
                  "description": "AU only. To indicate if the learner is eligible for an exemption",
                  "format": "Y or N"
               },
               "FundingEligibleFlag": {
                  "type": "boolean",
                  "description": "AU only. To indicate if the learner is eligible for funding or not"
               },
               "LearnerFeesOther": {
                  "type": "number",
                  "description": "AU only. Other fees incurred by the learner",
                  "format": "double"
               },
               "IndividualContractId": {
                  "type": "string",
                  "description": "AU only. The individual contract ID",
                  "format": "20"
               },
               "IndividualContractExpiryDate": {
                  "type": "string",
                  "description": "AU only. Date when the individual contract ID expires",
                  "format": "date-time"
               },
               "FhAccessedFlag": {
                  "type": "string",
                  "description": "AU only. To indicate if the learner is receiving VSL or FeeHelp assistance",
                  "format": "Y or N"
               },
               "FhEligibleFlag": {
                  "type": "boolean",
                  "description": "AU only. To indicate if the learner is eligible for VSL or FeeHelp"
               },
               "EstimatedYearlyEftsl": {
                  "type": "string",
                  "description": "AU FH/VSL only. Estimated EFTSL per year",
                  "format": "11"
               },
               "CommencingStudentIdentifier": {
                  "type": "integer",
                  "description": "AU FH/VSL only. See combo CommencingStudentIdentifiers",
                  "format": "int32"
               },
               "FeeTypeIndicatorId": {
                  "type": "integer",
                  "description": "AU FH/VSL only. See combo FeeTypeIndicators",
                  "format": "int32"
               },
               "AdmissionBasisId": {
                  "type": "integer",
                  "description": "AU FH/VSL only. See combo AdmissionBasis",
                  "format": "int32"
               },
               "AttendanceTypeId": {
                  "type": "integer",
                  "description": "AU FH/VSL only. See combo AttendanceTypes",
                  "format": "int32"
               },
               "FhStudyReasonId": {
                  "type": "integer",
                  "description": "AU FH/VSL only. See combo FhStudyReasons",
                  "format": "int32"
               },
               "SpecialisationFieldOfEducationId": {
                  "type": "integer",
                  "description": "AU FH only. See combo FhFieldOfEducations",
                  "format": "int32"
               },
               "ScholarshipTypeId": {
                  "type": "integer",
                  "description": "AU FH only. See combo ScholarshipTypes",
                  "format": "int32"
               },
               "PreviousRtsEfts": {
                  "type": "number",
                  "description": "AU FH only. The previous EFTSL value of Higher Education provider under the Research Training Scheme",
                  "format": "double"
               },
               "CompletionPercentage": {
                  "type": "integer",
                  "description": "AU FH only. The percentage of course completion",
                  "format": "int32"
               },
               "JointDegreeProviderCode": {
                  "type": "string",
                  "description": "AU FH only. Provider code if joint degree was undertaken",
                  "format": "50"
               },
               "SeparationStatusId": {
                  "type": "integer",
                  "description": "AU FH only. See combo SeparationStatuses",
                  "format": "int32"
               },
               "EcafId": {
                  "type": "integer",
                  "description": "AU FH/VSL only. ECAF Identifier",
                  "format": "int32"
               },
               "EcafStatus": {
                  "type": "string",
                  "description": "AU FH/VSL only. Current ECAF Status",
                  "format": "100"
               },
               "EcafStatusReason": {
                  "type": "string",
                  "description": "AU FH/VSL only. The ECAF status reason",
                  "format": "300"
               },
               "EcafNotes": {
                  "type": "string",
                  "description": "AU FH/VSL only. Any related ECAF notes",
                  "format": "300"
               },
               "EcafLastModifiedDate": {
                  "type": "string",
                  "description": "AU FH/VSL only. Date when ECAF record was last modified",
                  "format": "date-time"
               },
               "EcafCensusDate": {
                  "type": "string",
                  "description": "AU FH/VSL only. ECAF census date",
                  "format": "date-time"
               },
               "ForUipFlag": {
                  "type": "boolean",
                  "description": "NZ only. To indicate if the enrolment is for UIP reporting"
               },
               "FundSourceId": {
                  "type": "integer",
                  "description": "NZ only. See combo FundSources",
                  "format": "int32"
               },
               "ForeignFee": {
                  "type": "number",
                  "description": "NZ only. Fees paid by international fee-paying students",
                  "format": "double"
               },
               "MainSubject1Id": {
                  "type": "integer",
                  "description": "NZ only. See combo MainSubjects",
                  "format": "int32"
               },
               "MainSubject2Id": {
                  "type": "integer",
                  "description": "NZ only. See combo MainSubjects",
                  "format": "int32"
               },
               "MainSubject3Id": {
                  "type": "integer",
                  "description": "NZ only. See combo MainSubjects",
                  "format": "int32"
               },
               "NzqaReturnToProviderFlag": {
                  "type": "boolean",
                  "description": "NZ only. To indicate if the certificate should be returned to the PTE"
               },
               "NzqaAwardingProviderId": {
                  "type": "integer",
                  "description": "NZ only. See combo NzqaAwardingProviders",
                  "format": "int32"
               },
               "NzqaStrand": {
                  "type": "string",
                  "description": "NZ only. Strand for NZQA reporting",
                  "format": "2"
               },
               "NzqaOptionalStrand": {
                  "type": "string",
                  "description": "NZ only. Optional Strand for NZQA reporting",
                  "format": "50"
               },
               "NzqaRequestTypeId": {
                  "type": "integer",
                  "description": "NZ only. See combo NzqaRequestTypes",
                  "format": "int32"
               },
               "ManagedApprenticeshipId": {
                  "type": "integer",
                  "description": "NZ only. See combo ManagedApprenticeships",
                  "format": "int32"
               },
               "AacId": {
                  "type": "integer",
                  "description": "AU only. See combo Aacs",
                  "format": "int32"
               },
               "AacSalesOfficer": {
                  "type": "string",
                  "description": "AU only. Name of the AAC Sales Officer",
                  "format": "50"
               },
               "AacSignDate": {
                  "type": "string",
                  "description": "AU only. AAC Sign Date",
                  "format": "date-time"
               },
               "SalesPersonId": {
                  "type": "integer",
                  "description": "See entity SalesPerson",
                  "format": "int32"
               },
               "Certificate1": {
                  "type": "string",
                  "description": "AU and SG only. Certificate 1 details",
                  "format": "255"
               },
               "Certificate2": {
                  "type": "string",
                  "description": "AU and SG only. Certificate 2 details",
                  "format": "255"
               },
               "RtoStatusId": {
                  "type": "integer",
                  "description": "AU only. See combo RtoStatuses",
                  "format": "int32"
               },
               "InvoiceNumber": {
                  "type": "string",
                  "description": "AU only. Invoice number",
                  "format": "20"
               },
               "InvoiceHours": {
                  "type": "integer",
                  "description": "AU only. Number of hours invoiced",
                  "format": "int32"
               },
               "PaymentTypeId": {
                  "type": "integer",
                  "description": "AU only. See combo PaymentTypes",
                  "format": "int32"
               },
               "Deposit": {
                  "type": "number",
                  "description": "AU only. Deposit paid by the learner",
                  "format": "double"
               },
               "RateId": {
                  "type": "integer",
                  "description": "See entity Rates",
                  "format": "int32"
               },
               "PrivacyFlag": {
                  "type": "boolean",
                  "description": "AU and NZ only. To indicate if the privacy flag is given or not"
               },
               "LlnFlag": {
                  "type": "boolean",
                  "description": "AU and NZ only. To indicate if the Language, Literacy & Numeracy flag is given or not"
               },
               "FeesCollected1": {
                  "type": "number",
                  "description": "AU only. Fees collected in the first year",
                  "format": "double"
               },
               "FeesCollected2": {
                  "type": "number",
                  "description": "AU only. Fees collected in the second year",
                  "format": "double"
               },
               "FeesCollected3": {
                  "type": "number",
                  "description": "AU only. Fees collected in the third year",
                  "format": "double"
               },
               "StudentArrivalDate": {
                  "type": "string",
                  "description": "SG only. Date when the learner arrived to commence study",
                  "format": "date-time"
               },
               "MedicalInsuranceProvider": {
                  "type": "string",
                  "description": "SG only. Details of the medical insurance provider",
                  "format": "200"
               },
               "StudentPassRequirementId": {
                  "type": "integer",
                  "description": "SG only. See combo StudentPassRequirements",
                  "format": "int32"
               },
               "StudentPassApplicationDate": {
                  "type": "string",
                  "description": "SG only. Application Date of student pass enrolment",
                  "format": "date-time"
               },
               "StudentPassInPrincipleDate": {
                  "type": "string",
                  "description": "SG only. Approved In Principle Date of student pass enrolment",
                  "format": "date-time"
               },
               "StudentPassIssueDate": {
                  "type": "string",
                  "description": "SG only. Issue Date of student pass enrolment",
                  "format": "date-time"
               },
               "StudentPassExpiryDate": {
                  "type": "string",
                  "description": "SG only. Expiry Date of student pass enrolment",
                  "format": "date-time"
               },
               "StudentPassCancellationDate": {
                  "type": "string",
                  "description": "SG only. Cancellation Date of student pass enrolment",
                  "format": "date-time"
               },
               "PublicNotes": {
                  "type": "string",
                  "description": "Notes that will be displayed on the training plan"
               },
               "PrivateNotes": {
                  "type": "string",
                  "description": "Private Notes that will NOT be displayed on the training plan"
               },
               "Agent": {
                  "$ref": "#/components/schemas/CourseEnrolmentAgent"
               },
               "TagIds": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/TagBasic"
                  },
                  "description": "Ids used to identify Tags"
               },
               "LearnerAppAccessFlag": {
                  "type": "boolean",
                  "description": "To indicate if learner will have access to the enrolment from LearnerApp"
               },
               "ELearningAccessFlag": {
                  "type": "boolean",
                  "description": "To indicate if learner will have access to the enrolment in your LMS"
               },
               "HdrEngagementCode": {
                  "type": "string",
                  "description": "AU FH only. HDR Engagement Code",
                  "format": "10"
               },
               "HdrThesisSubmissionDate": {
                  "type": "string",
                  "description": "AU FH only. Submission Date of HDR Thesis",
                  "format": "date-time"
               },
               "EcoeIssueDate": {
                  "type": "string",
                  "description": "AU only. Electronic Confirmation of Enrolment Issue Date",
                  "format": "date-time"
               },
               "PublicTrustNumber": {
                  "type": "string",
                  "description": "NZ only. Public Trust Number",
                  "format": "50"
               },
               "ApplicationStatusId": {
                  "type": "integer",
                  "description": "See entity ApplicationStatus",
                  "format": "int32"
               },
               "ApplicationExpiryDate": {
                  "type": "string",
                  "description": "Application expiry date",
                  "format": "date-time"
               },
               "ApplicationNotes": {
                  "type": "string",
                  "description": "Application notes"
               },
               "ApplicationStatusReasonId": {
                  "type": "integer",
                  "description": "See entity ApplicationStatusReason",
                  "format": "int32"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the course enrolment was last modified",
                  "format": "date-time"
               },
               "CreatedOn": {
                  "type": "string",
                  "description": "The date the course enrolment was created on",
                  "format": "date-time"
               },
               "CommencingProgramCohort1Id": {
                  "type": "integer",
                  "description": "See entity CommencingProgramCohort",
                  "format": "int32"
               },
               "CommencingProgramCohort2Id": {
                  "type": "integer",
                  "description": "See entity CommencingProgramCohort",
                  "format": "int32"
               },
               "CommencingProgramCohort3Id": {
                  "type": "integer",
                  "description": "See entity CommencingProgramCohort",
                  "format": "int32"
               },
               "CourseOfferCode": {
                  "type": "string",
                  "description": "See entity CourseOffer"
               },
               "CourseOfferDescription": {
                  "type": "string",
                  "description": "See entity CourseOffer"
               }
            }
         },
         "PatchDocument": {
            "required": [
               "op",
               "path"
            ],
            "properties": {
               "op": {
                  "type": "string",
                  "description": "Operation being performed. Use “Replace”."
               },
               "path": {
                  "type": "string",
                  "description": "The field you would like to update as a path"
               },
               "value": {
                  "type": "object",
                  "description": "The value you would like to set. Format depends on field."
               },
               "from": {
                  "type": "string",
                  "description": "This is used for other operations. Remove this option."
               }
            },
            "description": "A JSONPatch document as defined by RFC 6902"
         },
         "CourseOfferItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/CourseOffer"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CourseOfferRelationships"
               }
            }
         },
         "CourseOfferBasicItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/CourseOfferBasic"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CourseOfferBasicRelationships"
               }
            }
         },
         "CredentialItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Credential"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CredentialRelationships"
               }
            }
         },
         "DocumentFileUploadRequest": {
            "type": "object",
            "properties": {
               "Filename": {
                  "type": "string",
                  "description": "Name of the file"
               },
               "Size": {
                  "type": "integer",
                  "description": "Size of the file in bytes",
                  "format": "int32"
               }
            }
         },
         "DocumentFileUploadResponse": {
            "type": "object",
            "properties": {
               "DocumentId": {
                  "type": "integer",
                  "description": "Primary Id for Document that is auto generated",
                  "format": "int32"
               },
               "DocumentPreSignedUrl": {
                  "type": "string",
                  "description": "Auto generated URL required to upload the file"
               }
            }
         },
         "DocumentFile": {
            "type": "object",
            "properties": {
               "DocumentUrl": {
                  "type": "string",
                  "description": "Auto generated URL required to download the file"
               }
            }
         },
         "ElementEnrolmentItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/ElementEnrolment"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/ElementEnrolmentRelationships"
               }
            }
         },
         "EntityItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Entity"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/EntityRelationships"
               }
            }
         },
         "FilenoteItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Filenote"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FilenoteRelationships"
               }
            }
         },
         "Filenote": {
            "required": [
               "RecordId",
               "EntityName",
               "Name"
            ],
            "type": "object",
            "properties": {
               "FilenoteId": {
                  "type": "integer",
                  "description": "Primary Id for FilenoteId that is auto generated.",
                  "format": "int32"
               },
               "RecordId": {
                  "type": "integer",
                  "description": "The RecordId for the EntityName. E.g. The LearnerId if EntityName = Learner.",
                  "format": "int32"
               },
               "EntityName": {
                  "type": "string",
                  "description": "See entity Entities."
               },
               "RecordInfo": {
                  "type": "string",
                  "description": "Read only field. Returns info about the record."
               },
               "Name": {
                  "type": "string",
                  "description": "Name used to identify the Filenote."
               },
               "Description": {
                  "type": "string",
                  "description": "Body of the Filenote in HTML format."
               },
               "CreatedOn": {
                  "type": "string",
                  "description": "The date the Filenote was created",
                  "format": "date-time"
               },
               "CreatedByUserId": {
                  "type": "integer",
                  "description": "The Id of the User who created the Filenote",
                  "format": "int32"
               },
               "AssignedTo": {
                  "$ref": "#/components/schemas/AssignedToFilenote"
               },
               "LearnerVisibility": {
                  "$ref": "#/components/schemas/LearnerVisibilityFilenote"
               },
               "TrainerVisibility": {
                  "$ref": "#/components/schemas/TrainerVisibilityFilenote"
               },
               "OnlineEnrolmentVisibility": {
                  "$ref": "#/components/schemas/OnlineEnrolmentVisibilityFilenote"
               },
               "Documents": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Document"
                  },
                  "description": "See Documents and Files section above"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the Filenote was last modified",
                  "format": "date-time"
               },
               "LastModifiedUserId": {
                  "type": "integer",
                  "description": "The UserId of the user who last modified the Filenote",
                  "format": "int32"
               }
            }
         },
         "InvoiceItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Invoice"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/InvoiceRelationships"
               }
            }
         },
         "Invoice": {
            "type": "object",
            "properties": {
               "InvoiceId": {
                  "type": "string"
               },
               "LearnerId": {
                  "type": "integer",
                  "format": "int32"
               },
               "InvoiceNumber": {
                  "type": "string"
               },
               "InvoiceReference": {
                  "type": "string"
               },
               "SourceAppKey": {
                  "type": "string"
               },
               "Status": {
                  "type": "string"
               },
               "Date": {
                  "type": "string",
                  "format": "date-time"
               },
               "DueDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "LineItems": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/LineItem"
                  }
               },
               "AmountTotal": {
                  "type": "number",
                  "format": "double"
               },
               "UpdateDateUtc": {
                  "type": "string",
                  "format": "date-time"
               },
               "Payments": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Payment"
                  }
               },
               "AmountDue": {
                  "type": "number",
                  "format": "double"
               },
               "AmountPaid": {
                  "type": "number",
                  "format": "double"
               },
               "AmountCredited": {
                  "type": "number",
                  "format": "double"
               }
            }
         },
         "LanguageLiteracyNumeracyItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LanguageLiteracyNumeracy"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LanguageLiteracyNumeracyRelationships"
               }
            }
         },
         "LanguageLiteracyNumeracy": {
            "type": "object",
            "properties": {
               "LanguageLiteracyNumeracyId": {
                  "type": "integer",
                  "description": "Primary Id for LanguageLiteracyNumeracy that is auto generated",
                  "format": "int32"
               },
               "CourseEnrolmentId": {
                  "type": "integer",
                  "description": "See entity CourseEnrolments",
                  "format": "int32"
               },
               "LlnBenefitId": {
                  "type": "integer",
                  "description": "See combo LanguageLiteracyNumeracyBenefit",
                  "format": "int32"
               },
               "LlnLevelId": {
                  "type": "integer",
                  "description": "See combo LanguageLiteracyNumeracyLevel",
                  "format": "int32"
               },
               "LlnPostAssessmentId": {
                  "type": "integer",
                  "description": "See combo LanguageLiteracyNumeracyPostAssessments",
                  "format": "int32"
               },
               "LlnPreAssessmentId": {
                  "type": "integer",
                  "description": "See combo LanguageLiteracyNumeracyPreAssessments",
                  "format": "int32"
               },
               "AssessmentDate1": {
                  "type": "string",
                  "description": "Date of Assessment 1 for LanguageLiteracyNumeracy",
                  "format": "date-time"
               },
               "AssessmentDate2": {
                  "type": "string",
                  "description": "Date of Assessment 2 for LanguageLiteracyNumeracy",
                  "format": "date-time"
               },
               "AssessmentDate3": {
                  "type": "string",
                  "description": "Date of Assessment 3 for LanguageLiteracyNumeracy",
                  "format": "date-time"
               },
               "PostAssessmentDate": {
                  "type": "string",
                  "description": "Date of Post Assessment for LanguageLiteracyNumeracy",
                  "format": "date-time"
               },
               "AssessmentComment": {
                  "type": "string",
                  "description": "Assessment Comments for LanguageLiteracyNumeracy"
               },
               "RecommendedHours": {
                  "type": "integer",
                  "description": "Recommended Hours for LanguageLiteracyNumeracy",
                  "format": "int32"
               },
               "MidpointHours": {
                  "type": "integer",
                  "description": "Midpoint Hours for LanguageLiteracyNumeracy",
                  "format": "int32"
               },
               "AttendedHours": {
                  "type": "integer",
                  "description": "Attended Hours for LanguageLiteracyNumeracy",
                  "format": "int32"
               },
               "CompletedHours": {
                  "type": "integer",
                  "description": "Completed Hours",
                  "format": "int32"
               },
               "CommencementDate": {
                  "type": "string",
                  "description": "Date LanguageLiteracyNumeracy is commenced",
                  "format": "date-time"
               },
               "MidpointDate": {
                  "type": "string",
                  "description": "Date LanguageLiteracyNumeracy is midpoint",
                  "format": "date-time"
               },
               "CompletionDate": {
                  "type": "string",
                  "description": "Date LanguageLiteracyNumeracy is completed",
                  "format": "date-time"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the LanguageLiteracyNumeracy record was last modified",
                  "format": "date-time"
               }
            }
         },
         "LearnerAuItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LearnerAu"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LearnerAuRelationships"
               }
            }
         },
         "LearnerAu": {
            "type": "object",
            "properties": {
               "LearnerId": {
                  "type": "integer",
                  "description": "Primary Id for learner that is auto generated",
                  "format": "int32"
               },
               "Personal": {
                  "$ref": "#/components/schemas/LearnerAuPersonal"
               },
               "Demographics": {
                  "$ref": "#/components/schemas/LearnerAuDemographics"
               },
               "International": {
                  "$ref": "#/components/schemas/LearnerAuInternational"
               },
               "NextOfKin": {
                  "$ref": "#/components/schemas/LearnerAuNextOfKin"
               },
               "LearnerAccess": {
                  "$ref": "#/components/schemas/LearnerAuLearnerAccess"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the learner was last modified",
                  "format": "date-time"
               },
               "LearnerGuid": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
               }
            }
         },
         "LearnerAuPersonalItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LearnerAuPersonal"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LearnerAuPersonalRelationships"
               }
            }
         },
         "LearnerAuPersonal": {
            "type": "object",
            "properties": {
               "IsActive": {
                  "type": "boolean",
                  "description": "To indicate if the learner is active or not"
               },
               "Title": {
                  "type": "string",
                  "description": "Preferred title of the learner. For example: Mr, Mrs, Miss, Ms, Dr, Rev, Hon etc."
               },
               "FirstName": {
                  "type": "string",
                  "description": "First name of learner",
                  "format": "50"
               },
               "MiddleName": {
                  "type": "string",
                  "description": "Middle name of learner",
                  "format": "50"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last name of learner"
               },
               "Suffix": {
                  "type": "string",
                  "description": "Suffix of the learner. For example: Jr, Sr etc."
               },
               "PreferredNamed": {
                  "type": "string",
                  "description": "Preferred informal name of learner"
               },
               "PreviousName": {
                  "type": "string",
                  "description": "Maiden name or any previous name of the learner"
               },
               "DateOfBirth": {
                  "type": "string",
                  "description": "Date of the birth of the learner",
                  "format": "date-time"
               },
               "AgeCategoryId": {
                  "type": "integer",
                  "description": "See combos AgeCategories",
                  "format": "int32"
               },
               "GenderId": {
                  "type": "integer",
                  "description": "See combos Genders",
                  "format": "int32"
               },
               "TaxFileNumber": {
                  "type": "string",
                  "description": "Tax File Number of the learner",
                  "format": "11"
               },
               "AustralianBusinessNumber": {
                  "type": "string",
                  "description": "Relevant ABN details",
                  "format": "50"
               },
               "DriverLicense": {
                  "type": "string",
                  "description": "Driver License",
                  "format": "50"
               },
               "UniqueStudentIdentifier": {
                  "type": "string",
                  "description": "USI number of the learner",
                  "format": "10"
               },
               "UsiStatus": {
                  "type": "string",
                  "description": "The verification status received for the learner USI configured",
                  "format": "50"
               },
               "UsiStatusReason": {
                  "type": "string",
                  "description": "The verification status received for the learner USI configured",
                  "format": "200"
               },
               "UsiStatusLastModifiedTimestamp": {
                  "type": "string",
                  "description": "Date when USI for the learner was last modified",
                  "format": "date-time"
               },
               "Chessn": {
                  "type": "string",
                  "description": "Commonwealth Higher Education Student Support Number used by higher education providers",
                  "format": "10"
               },
               "LearnerUniqueIdentifier": {
                  "type": "string",
                  "description": "A unique learner number (QLD)",
                  "format": "20"
               },
               "SaceId": {
                  "type": "string",
                  "description": "SACE identifier (SA)",
                  "format": "20"
               },
               "VictorianStudentNumber": {
                  "type": "string",
                  "description": "A unique number for all Victorian learners (VIC)",
                  "format": "9"
               },
               "ApprenticeshipIdentifier": {
                  "type": "string",
                  "description": "Learner Identifier with an apprenticeship",
                  "format": "50"
               },
               "LearnerAlt1Number": {
                  "type": "string",
                  "description": "RefExternal. An alternative custom identifier for external purposes",
                  "format": "50"
               },
               "LearnerAlt2Number": {
                  "type": "string",
                  "description": "RefExternal Plus. An alternative custom identifier",
                  "format": "50"
               },
               "LearnerNumber": {
                  "type": "string",
                  "description": "Auto generated unique learner identifier",
                  "format": "10"
               },
               "LearnerExportNumber": {
                  "type": "string",
                  "description": "Auto generated unique learner identifier used for export purposes",
                  "format": "25"
               },
               "TargetGroupId": {
                  "type": "integer",
                  "description": "See combo TargetGroupsLearner",
                  "format": "int32"
               },
               "SyncToSugarCrm": {
                  "type": "boolean",
                  "description": "To indicate if the learner should be synced to SugarCRM or not"
               },
               "SyncToXero": {
                  "type": "boolean",
                  "description": "To indicate if the learner should be synced to Xero or not"
               },
               "PhoneNumbers": {
                  "$ref": "#/components/schemas/LearnerAuPersonalPhoneNumbers"
               },
               "EmailAddresses": {
                  "$ref": "#/components/schemas/LearnerAuPersonalEmailAddresses"
               },
               "WebsiteUrl": {
                  "type": "string",
                  "description": "Any website URL relevant to learner contact details",
                  "format": "100"
               },
               "RequestPrivacy": {
                  "type": "boolean",
                  "description": "To indicate if the learner requests privacy or not"
               },
               "SurveyStatusId": {
                  "type": "integer",
                  "description": "See combo SurveyStatuses",
                  "format": "int32"
               },
               "StreetAddress": {
                  "$ref": "#/components/schemas/LearnerAuPersonalStreetAddress"
               },
               "PostalAddress": {
                  "$ref": "#/components/schemas/LearnerAuPersonalPostalAddress"
               },
               "PermanentAddress": {
                  "$ref": "#/components/schemas/LearnerAuPersonalPermanentAddress"
               },
               "HealthcareNumber": {
                  "type": "string",
                  "description": "Health Care Number of the learner",
                  "format": "20"
               },
               "HealthcareExpiryDate": {
                  "type": "string",
                  "description": "Expiry Date of learner's health care",
                  "format": "date-time"
               },
               "MedicareNumber": {
                  "type": "string",
                  "description": "Medicare Number of the learner",
                  "format": "20"
               },
               "MedicareExpiryDate": {
                  "type": "string",
                  "description": "Expiry Date of learner's medicare",
                  "format": "date-time"
               },
               "GeneralNotes": {
                  "type": "string",
                  "description": "General notes related to the learner",
                  "format": "3000"
               },
               "SpecialRequirements": {
                  "type": "string",
                  "description": "Any special requirements that the learner might have",
                  "format": "1000"
               },
               "SaWorkReadyNumber": {
                  "type": "string",
                  "description": "The Work Ready Number(SA specific)",
                  "format": "30"
               },
               "SentToDsdDate": {
                  "type": "string",
                  "description": "Date when learners details were sent to SSD(SA specific)",
                  "format": "date-time"
               },
               "VaccineStatusId": {
                  "type": "integer",
                  "description": "Vaccine Status Id",
                  "format": "int32"
               },
               "VaccineStatusNotes": {
                  "type": "string",
                  "description": "Vaccination notes",
                  "format": "1000"
               }
            }
         },
         "LearnerBasic": {
            "type": "object",
            "properties": {
               "LearnerId": {
                  "type": "integer",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string"
               },
               "InformalName": {
                  "type": "string"
               },
               "LastName": {
                  "type": "string"
               },
               "LearnerNumber": {
                  "type": "string"
               },
               "Email": {
                  "type": "string"
               },
               "DateOfBirth": {
                  "type": "string",
                  "format": "date-time"
               },
               "IsActive": {
                  "type": "boolean"
               },
               "UniqueStudentIdentifier": {
                  "type": "string"
               },
               "Username": {
                  "type": "string"
               },
               "Mobile": {
                  "type": "string"
               }
            }
         },
         "LearnerNzItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LearnerNz"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LearnerNzRelationships"
               }
            }
         },
         "LearnerNz": {
            "type": "object",
            "properties": {
               "LearnerId": {
                  "type": "integer",
                  "description": "Primary Id for learner that is auto generated",
                  "format": "int32"
               },
               "Personal": {
                  "$ref": "#/components/schemas/LearnerNzPersonal"
               },
               "Demographics": {
                  "$ref": "#/components/schemas/LearnerNzDemographics"
               },
               "International": {
                  "$ref": "#/components/schemas/LearnerNzInternational"
               },
               "NextOfKin": {
                  "$ref": "#/components/schemas/LearnerNzNextOfKin"
               },
               "LearnerAccess": {
                  "$ref": "#/components/schemas/LearnerNzLearnerAccess"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the learner was last modified",
                  "format": "date-time"
               },
               "LearnerGuid": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
               }
            }
         },
         "LearnerNzPersonal": {
            "type": "object",
            "properties": {
               "IsActive": {
                  "type": "boolean",
                  "description": "To indicate if the learner is active or not"
               },
               "Title": {
                  "type": "string",
                  "description": "Preferred title of the learner. For example: Mr, Mrs, Miss, Ms, Dr, Rev, Hon etc.",
                  "format": "20"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First name of learner",
                  "format": "50"
               },
               "MiddleName": {
                  "type": "string",
                  "description": "Middle name of learner",
                  "format": "50"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last name of learner",
                  "format": "50"
               },
               "Suffix": {
                  "type": "string",
                  "description": "Suffix of the learner. For example: Jr, Sr etc.",
                  "format": "50"
               },
               "PreferredNamed": {
                  "type": "string",
                  "description": "Preferred informal name of learner",
                  "format": "20"
               },
               "PreviousName": {
                  "type": "string",
                  "description": "Maiden name or any previous name of the learner",
                  "format": "50"
               },
               "DateOfBirth": {
                  "type": "string",
                  "description": "Date of the birth of the learner",
                  "format": "date-time"
               },
               "GenderId": {
                  "type": "integer",
                  "description": "See combos NzGenders",
                  "format": "int32"
               },
               "NationalStudentNumber": {
                  "type": "string",
                  "description": "National Student Number of the learner",
                  "format": "10"
               },
               "IrdNumber": {
                  "type": "string",
                  "description": "IRD number of the learner",
                  "format": "10"
               },
               "PublicTrustNumber": {
                  "type": "string",
                  "description": "Related Public Trust Number",
                  "format": "50"
               },
               "WinzNumber": {
                  "type": "string",
                  "description": "WINZ Number of the learner",
                  "format": "50"
               },
               "LearnerAlt1Number": {
                  "type": "string",
                  "description": "RefExternal. An alternative custom identifier for external purposes",
                  "format": "50"
               },
               "LearnerAlt2Number": {
                  "type": "string",
                  "description": "Ref External Plus. An alternative custom identifier",
                  "format": "50"
               },
               "LearnerNumber": {
                  "type": "string",
                  "description": "Auto generated unique learner identifier",
                  "format": "10"
               },
               "LearnerExportNumber": {
                  "type": "string",
                  "description": "Auto generated unique learner identifier used for export purposes",
                  "format": "25"
               },
               "DriverLicense": {
                  "type": "string",
                  "description": "Driver License",
                  "format": "50"
               },
               "TargetGroupId": {
                  "type": "integer",
                  "description": "See combo TargetGroupsLearner",
                  "format": "int32"
               },
               "SyncToXero": {
                  "type": "boolean",
                  "description": "To indicate if the learner should be synced to Xero or not"
               },
               "PhoneNumbers": {
                  "$ref": "#/components/schemas/LearnerNzPersonalPhoneNumbers"
               },
               "EmailAddresses": {
                  "$ref": "#/components/schemas/LearnerNzPersonalEmailAddresses"
               },
               "WebsiteUrl": {
                  "type": "string",
                  "description": "Any website URL relevant to learner contact details",
                  "format": "100"
               },
               "RequestPrivacy": {
                  "type": "boolean",
                  "description": "To indicate if the learner requests privacy or not"
               },
               "StreetAddress": {
                  "$ref": "#/components/schemas/LearnerNzPersonalStreetAddress"
               },
               "PostalAddress": {
                  "$ref": "#/components/schemas/LearnerNzPersonalPostalAddress"
               },
               "PermanentAddress": {
                  "$ref": "#/components/schemas/LearnerNzPersonalPermanentAddress"
               },
               "HealthcareOptOut": {
                  "type": "boolean",
                  "description": "To indicate if the learner opts out of health care"
               },
               "HealthcareNumber": {
                  "type": "string",
                  "description": "Health Care Number of the learner",
                  "format": "20"
               },
               "HealthcareExpiryDate": {
                  "type": "string",
                  "description": "Expiry Date of learner's health care",
                  "format": "date-time"
               },
               "GeneralNotes": {
                  "type": "string",
                  "description": "General notes related to the learner",
                  "format": "3000"
               },
               "SpecialRequirements": {
                  "type": "string",
                  "description": "Any special requirements that the learner might have",
                  "format": "1000"
               },
               "FeesFreeEligibleId": {
                  "type": "integer",
                  "description": "See combo FeesFreeEligibles",
                  "format": "int32"
               },
               "TotalFee2018": {
                  "type": "number",
                  "description": "Total Tuition Fee in 2018",
                  "format": "double"
               },
               "TotalFee2019": {
                  "type": "number",
                  "description": "Total Tuition Fee in 2019",
                  "format": "double"
               },
               "TotalFee2020": {
                  "type": "number",
                  "description": "Total Tuition Fee in 2020",
                  "format": "double"
               },
               "TotalFee2021": {
                  "type": "number",
                  "description": "Total Tuition Fee in 2021",
                  "format": "double"
               },
               "TotalFee2022": {
                  "type": "number",
                  "description": "Total Tuition Fee in 2022",
                  "format": "double"
               },
               "TotalFee2023": {
                  "type": "number",
                  "description": "Total Tuition Fee in 2023",
                  "format": "double"
               },
               "VaccineStatusId": {
                  "type": "integer",
                  "description": "Vaccine Status Id",
                  "format": "int32"
               },
               "VaccineStatusNotes": {
                  "type": "string",
                  "description": "Vaccination notes",
                  "format": "1000"
               }
            }
         },
         "LearnerNzPersonalItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LearnerNzPersonal"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LearnerNzPersonalRelationships"
               }
            }
         },
         "LearnerSaItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LearnerSa"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LearnerSaRelationships"
               }
            }
         },
         "LearnerSa": {
            "type": "object",
            "properties": {
               "LearnerId": {
                  "type": "integer",
                  "description": "Primary Id for learner that is auto generated",
                  "format": "int32"
               },
               "Personal": {
                  "$ref": "#/components/schemas/LearnerSaPersonal"
               },
               "Demographics": {
                  "$ref": "#/components/schemas/LearnerSaDemographics"
               },
               "International": {
                  "$ref": "#/components/schemas/LearnerSaInternational"
               },
               "NextOfKin": {
                  "$ref": "#/components/schemas/LearnerSaNextOfKin"
               },
               "LearnerAccess": {
                  "$ref": "#/components/schemas/LearnerSaLearnerAccess"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "format": "date-time"
               },
               "LearnerGuid": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
               }
            }
         },
         "LearnerSaPersonal": {
            "type": "object",
            "properties": {
               "IsActive": {
                  "type": "boolean",
                  "description": "To indicate if the learner is active or not"
               },
               "Title": {
                  "type": "string",
                  "description": "Preferred title of the learner. For example: Mr, Mrs, Miss, Ms, Dr, Rev, Hon etc.",
                  "format": "20"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First name of learner",
                  "format": "50"
               },
               "MiddleName": {
                  "type": "string",
                  "description": "Middle name of learner",
                  "format": "50"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last name of learner",
                  "format": "50"
               },
               "Suffix": {
                  "type": "string",
                  "description": "Suffix of the learner. For example: Jr, Sr etc.",
                  "format": "50"
               },
               "PreferredNamed": {
                  "type": "string",
                  "description": "Preferred informal name of learner",
                  "format": "20"
               },
               "PreviousName": {
                  "type": "string",
                  "description": "Maiden name or any previous name of the learner",
                  "format": "50"
               },
               "DateOfBirth": {
                  "type": "string",
                  "description": "Date of the birth of the learner",
                  "format": "date-time"
               },
               "GenderId": {
                  "type": "integer",
                  "description": "See combos Genders",
                  "format": "int32"
               },
               "NationalIdentifier": {
                  "type": "string",
                  "description": "National Identifier of the learner",
                  "format": "15"
               },
               "AlternativeIdentifier": {
                  "type": "string",
                  "description": "Alternative National Identifier of the learner",
                  "format": "20"
               },
               "AlternativeIdentifierTypeId": {
                  "type": "integer",
                  "description": "See combo SaAlternativeIdentifierTypes",
                  "format": "int32"
               },
               "LearnerAlt1Number": {
                  "type": "string",
                  "description": "RefExternal. An alternative custom identifier for external purposes",
                  "format": "50"
               },
               "LearnerAlt2Number": {
                  "type": "string",
                  "description": "Ref External Plus. An alternative custom identifier",
                  "format": "50"
               },
               "LearnerNumber": {
                  "type": "string",
                  "description": "Auto generated unique learner identifier",
                  "format": "10"
               },
               "LearnerExportNumber": {
                  "type": "string",
                  "description": "Auto generated unique learner identifier used for export purposes",
                  "format": "25"
               },
               "DriverLicense": {
                  "type": "string",
                  "description": "Driver License",
                  "format": "50"
               },
               "TargetGroupId": {
                  "type": "integer",
                  "description": "See combo TargetGroupsLearner",
                  "format": "int32"
               },
               "SyncToXero": {
                  "type": "boolean",
                  "description": "To indicate if the learner should be synced to Xero or not"
               },
               "PreviousInfo": {
                  "$ref": "#/components/schemas/LearnerSaPersonalPreviousInfo"
               },
               "PhoneNumbers": {
                  "$ref": "#/components/schemas/LearnerSaPersonalPhoneNumbers"
               },
               "EmailAddresses": {
                  "$ref": "#/components/schemas/LearnerSaPersonalEmailAddresses"
               },
               "WebsiteUrl": {
                  "type": "string",
                  "description": "Any website URL relevant to learner contact details",
                  "format": "100"
               },
               "RequestPrivacy": {
                  "type": "boolean",
                  "description": "To indicate if the learner requests privacy or not"
               },
               "StreetAddress": {
                  "$ref": "#/components/schemas/LearnerSaPersonalStreetAddress"
               },
               "PostalAddress": {
                  "$ref": "#/components/schemas/LearnerSaPersonalPostalAddress"
               },
               "PermanentAddress": {
                  "$ref": "#/components/schemas/LearnerSaPersonalPermanentAddress"
               },
               "HealthcareOptOut": {
                  "type": "boolean",
                  "description": "To indicate if the learner opts out of health care"
               },
               "HealthcareNumber": {
                  "type": "string",
                  "description": "Health Care Number of the learner",
                  "format": "20"
               },
               "HealthcareExpiryDate": {
                  "type": "string",
                  "description": "Expiry Date of learner's health care",
                  "format": "date-time"
               },
               "GeneralNotes": {
                  "type": "string",
                  "description": "General notes related to the learner",
                  "format": "3000"
               },
               "SpecialRequirements": {
                  "type": "string",
                  "description": "Any special requirements that the learner might have",
                  "format": "1000"
               },
               "VaccineStatusId": {
                  "type": "integer",
                  "description": "Vaccine Status Id",
                  "format": "int32"
               },
               "VaccineStatusNotes": {
                  "type": "string",
                  "description": "Vaccination notes",
                  "format": "1000"
               }
            }
         },
         "LearnerSaPersonalItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LearnerSaPersonal"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LearnerSaPersonalRelationships"
               }
            }
         },
         "LearnerBasicSa": {
            "type": "object",
            "properties": {
               "LearnerId": {
                  "type": "integer",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string"
               },
               "LastName": {
                  "type": "string"
               },
               "LearnerNumber": {
                  "type": "string"
               },
               "Email": {
                  "type": "string"
               },
               "DateOfBirth": {
                  "type": "string",
                  "format": "date-time"
               },
               "IsActive": {
                  "type": "boolean"
               },
               "Username": {
                  "type": "string"
               }
            }
         },
         "LearnerSgItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LearnerSg"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LearnerSgRelationships"
               }
            }
         },
         "LearnerSg": {
            "type": "object",
            "properties": {
               "LearnerId": {
                  "type": "integer",
                  "description": "Primary Id for learner that is auto generated",
                  "format": "int32"
               },
               "Personal": {
                  "$ref": "#/components/schemas/LearnerSgPersonal"
               },
               "Demographics": {
                  "$ref": "#/components/schemas/LearnerSgDemographics"
               },
               "International": {
                  "$ref": "#/components/schemas/LearnerSgInternational"
               },
               "NextOfKin": {
                  "$ref": "#/components/schemas/LearnerSgNextOfKin"
               },
               "LearnerAccess": {
                  "$ref": "#/components/schemas/LearnerSgLearnerAccess"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "format": "date-time"
               },
               "LearnerGuid": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
               }
            }
         },
         "LearnerSgPersonal": {
            "type": "object",
            "properties": {
               "IsActive": {
                  "type": "boolean",
                  "description": "To indicate if the learner is active or not"
               },
               "Title": {
                  "type": "string",
                  "description": "Preferred title of the learner. For example: Mr, Mrs, Miss, Ms, Dr, Rev, Hon etc.",
                  "format": "20"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First name of learner",
                  "format": "50"
               },
               "MiddleName": {
                  "type": "string",
                  "description": "Middle name of learner",
                  "format": "50"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last name of learner",
                  "format": "50"
               },
               "Suffix": {
                  "type": "string",
                  "description": "Suffix of the learner. For example: Jr, Sr etc.",
                  "format": "50"
               },
               "PreferredNamed": {
                  "type": "string",
                  "description": "Preferred informal name of learner",
                  "format": "20"
               },
               "PreviousName": {
                  "type": "string",
                  "description": "Maiden name or any previous name of the learner",
                  "format": "50"
               },
               "DateOfBirth": {
                  "type": "string",
                  "description": "Date of the birth of the learner",
                  "format": "date-time"
               },
               "GenderId": {
                  "type": "integer",
                  "description": "See combos NzGenders",
                  "format": "int32"
               },
               "NRICFIN": {
                  "type": "string",
                  "description": "NRIC/FIN number of the learner",
                  "format": "20"
               },
               "NRICTypeId": {
                  "type": "integer",
                  "description": "See combo SgNricTypes",
                  "format": "int32"
               },
               "LearnerAlt1Number": {
                  "type": "string",
                  "description": "RefExternal. An alternative custom identifier for external purposes",
                  "format": "50"
               },
               "LearnerAlt2Number": {
                  "type": "string",
                  "description": "Ref External Plus. An alternative custom identifier",
                  "format": "50"
               },
               "LearnerNumber": {
                  "type": "string",
                  "description": "Auto generated unique learner identifier",
                  "format": "10"
               },
               "LearnerExportNumber": {
                  "type": "string",
                  "description": "Auto generated unique learner identifier used for export purposes",
                  "format": "25"
               },
               "DriverLicense": {
                  "type": "string",
                  "description": "Driver License",
                  "format": "50"
               },
               "TargetGroupId": {
                  "type": "integer",
                  "description": "See combo TargetGroupsLearner",
                  "format": "int32"
               },
               "SyncToXero": {
                  "type": "boolean",
                  "description": "To indicate if the learner should be synced to Xero or not"
               },
               "PhoneNumbers": {
                  "$ref": "#/components/schemas/LearnerSgPersonalPhoneNumbers"
               },
               "EmailAddresses": {
                  "$ref": "#/components/schemas/LearnerSgPersonalEmailAddresses"
               },
               "WebsiteUrl": {
                  "type": "string",
                  "description": "Any website URL relevant to learner contact details",
                  "format": "100"
               },
               "RequestPrivacy": {
                  "type": "boolean",
                  "description": "To indicate if the learner requests privacy or not"
               },
               "StreetAddress": {
                  "$ref": "#/components/schemas/LearnerSgPersonalStreetAddress"
               },
               "PostalAddress": {
                  "$ref": "#/components/schemas/LearnerSgPersonalPostalAddress"
               },
               "PermanentAddress": {
                  "$ref": "#/components/schemas/LearnerSgPersonalPermanentAddress"
               },
               "HealthcareOptOut": {
                  "type": "boolean",
                  "description": "To indicate if the learner opts out of health care"
               },
               "HealthcareNumber": {
                  "type": "string",
                  "description": "Health Care Number of the learner",
                  "format": "20"
               },
               "HealthcareExpiryDate": {
                  "type": "string",
                  "description": "Expiry Date of learner's health care",
                  "format": "date-time"
               },
               "GeneralNotes": {
                  "type": "string",
                  "description": "General notes related to the learner",
                  "format": "3000"
               },
               "SpecialRequirements": {
                  "type": "string",
                  "description": "Any special requirements that the learner might have",
                  "format": "1000"
               },
               "VaccineStatusId": {
                  "type": "integer",
                  "description": "Vaccine Status Id",
                  "format": "int32"
               },
               "VaccineStatusNotes": {
                  "type": "string",
                  "description": "Vaccination notes",
                  "format": "1000"
               }
            }
         },
         "LearnerSgPersonalItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LearnerSgPersonal"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LearnerSgPersonalRelationships"
               }
            }
         },
         "LearnerPositionItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LearnerPosition"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LearnerPositionRelationships"
               }
            }
         },
         "LearnerPosition": {
            "type": "object",
            "properties": {
               "LearnerPositionId": {
                  "type": "integer",
                  "description": "Primary Id for Learner Position that is auto generated",
                  "format": "int32"
               },
               "LearnerId": {
                  "type": "integer",
                  "description": "See entity Learners",
                  "format": "int32"
               },
               "WorkplaceId": {
                  "type": "integer",
                  "description": "See entity Workplaces",
                  "format": "int32"
               },
               "PositionId": {
                  "type": "integer",
                  "description": "See combo Positions",
                  "format": "int32"
               },
               "SalesContactId": {
                  "type": "integer",
                  "description": "See entity Sales Contacts",
                  "format": "int32"
               },
               "WorkplaceTypeId": {
                  "type": "integer",
                  "description": "See combo Workplace Types",
                  "format": "int32"
               },
               "StartDate": {
                  "type": "string",
                  "description": "Date Learner Position starts",
                  "format": "date-time"
               },
               "EndDate": {
                  "type": "string",
                  "description": "Date Learner Position ends",
                  "format": "date-time"
               },
               "SubGroup": {
                  "type": "string",
                  "description": "Sub Group free text field",
                  "format": "50"
               },
               "OrganisationalUnit": {
                  "type": "string",
                  "description": "Organisational Unit free text field",
                  "format": "50"
               },
               "PayLevelId": {
                  "type": "integer",
                  "description": "See combo Pay Levels",
                  "format": "int32"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the Learner Position was last modified",
                  "format": "date-time"
               }
            }
         },
         "LocationFullItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LocationFull"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LocationFullRelationships"
               }
            }
         },
         "LocationFull": {
            "type": "object",
            "properties": {
               "LocationId": {
                  "type": "integer",
                  "description": "Primary Id for Location that is auto generated",
                  "format": "int32"
               },
               "Code": {
                  "type": "string",
                  "description": "Code used to identify the Location",
                  "format": "10"
               },
               "Description": {
                  "type": "string",
                  "description": "Description used to identify the Location",
                  "format": "100"
               },
               "BuildingName": {
                  "type": "string",
                  "description": "Building Name of the Location Street Address",
                  "format": "50"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit Details of the Location Street Address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street Number of the Location Street Address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street Name of the Location Street Address",
                  "format": "70"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of the Location Street Address",
                  "format": "60"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of the Location Street Address",
                  "format": "20"
               },
               "StateId": {
                  "type": "integer",
                  "description": "See combo States. State of the Location Street Address",
                  "format": "int32"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries. Country of the Location Street Address",
                  "format": "int32"
               },
               "EffectiveFromDate": {
                  "type": "string",
                  "description": "Date Location is effective from",
                  "format": "date-time"
               },
               "EffectiveToDate": {
                  "type": "string",
                  "description": "Date Location is effective to",
                  "format": "date-time"
               },
               "Capacity": {
                  "type": "integer",
                  "description": "Number of people the Location can hold",
                  "format": "int32"
               },
               "LocationCodeNzqaAlternative": {
                  "type": "string",
                  "description": "NZ only. An alternative Code used to identify the Location for NZQA if different to the main Code",
                  "format": "5"
               },
               "ReferenceWorkplaceId": {
                  "type": "integer",
                  "description": "See entity Workplaces. Indicates that this Location is a training delivery location reference for the Workplace.  When WorkplaceId exists, the Location should be updated when changes occur to Workplace address.",
                  "format": "int32"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the Location was last modified",
                  "format": "date-time"
               }
            }
         },
         "LocationBasicItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LocationBasic"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LocationBasicRelationships"
               }
            }
         },
         "OpportunityItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Opportunity"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/OpportunityRelationships"
               }
            }
         },
         "Opportunity": {
            "properties": {
               "OpportunityId": {
                  "type": "integer",
                  "description": "Primary Id for opportunity that is auto generated",
                  "format": "int32"
               },
               "OpportunityGuid": {
                  "type": "string",
                  "description": "The GUID of the record",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
               },
               "SalesContactId": {
                  "type": "integer",
                  "description": "See entity SalesContacts",
                  "format": "int32"
               },
               "Description": {
                  "type": "string",
                  "description": "Brief description of the opportunity",
                  "format": "150"
               },
               "Notes": {
                  "type": "string",
                  "description": "Additional Notes related to the opportunity",
                  "format": "1000"
               },
               "OpportunityStageId": {
                  "type": "integer",
                  "description": "See combo OpportunityStages",
                  "format": "int32"
               },
               "OwnerId": {
                  "type": "integer",
                  "description": "See entity SalesPersons",
                  "format": "int32"
               },
               "OpportunitySourceId": {
                  "type": "integer",
                  "description": "See combo OpportunitySources",
                  "format": "int32"
               },
               "OpportunityTypeId": {
                  "type": "integer",
                  "description": "See combo OpportunityTypes",
                  "format": "int32"
               },
               "Amount": {
                  "type": "number",
                  "description": "Amount of the opportunity",
                  "format": "double"
               },
               "CloseDate": {
                  "type": "string",
                  "description": "Close Date of the opportunity",
                  "format": "date-time"
               },
               "CloseLostReasonId": {
                  "type": "integer",
                  "description": "See combo CloseLostReasons",
                  "format": "int32"
               },
               "ReferringSalesContactId": {
                  "type": "integer",
                  "description": "See entity Sales Contact",
                  "format": "int32"
               },
               "ReferringEntityName": {
                  "type": "string",
                  "description": "Allows either 'Workplace' or 'Agent'"
               },
               "ReferringRecordId": {
                  "type": "integer",
                  "description": "Either the WorkplaceId or AgentId depending on provided ReferringEntityName",
                  "format": "int32"
               },
               "Documents": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Document"
                  },
                  "description": "See Documents and Files section above"
               },
               "PipelineId": {
                  "type": "integer",
                  "description": "Id of related pipeline",
                  "format": "int32"
               },
               "PreviousIdentifier": {
                  "type": "string",
                  "description": "Previoius identifier",
                  "format": "50"
               },
               "TagIds": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/TagBasic"
                  },
                  "description": "Ids used to identify Tags"
               },
               "CreatedOn": {
                  "type": "string",
                  "description": "Date when the opportunity was created",
                  "format": "date-time"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the opportunity was last modified",
                  "format": "date-time"
               }
            }
         },
         "PromotionItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Promotion"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/PromotionRelationships"
               }
            }
         },
         "Promotion": {
            "type": "object",
            "properties": {
               "PromotionId": {
                  "type": "integer",
                  "description": "Primary Id for Promotion that is auto generated",
                  "format": "int32"
               },
               "Code": {
                  "type": "string",
                  "description": "Code used to identify the Promotion"
               },
               "Description": {
                  "type": "string",
                  "description": "Description used to identify the Promotion"
               },
               "Notes": {
                  "type": "string",
                  "description": "General notes related to the Promotion"
               },
               "StartDate": {
                  "type": "string",
                  "description": "Date Promotion starts",
                  "format": "date-time"
               },
               "EndDate": {
                  "type": "string",
                  "description": "Date Promotion ends",
                  "format": "date-time"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the promotion was last modified",
                  "format": "date-time"
               }
            }
         },
         "SalesContactItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SalesContact"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SalesContactRelationships"
               }
            }
         },
         "SalesContact": {
            "properties": {
               "SalesContactId": {
                  "type": "integer",
                  "description": "Primary Id for sales contact that is auto generated",
                  "format": "int32"
               },
               "SalesContactGuid": {
                  "type": "string",
                  "description": "The GUID of the sales contact",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First Name of the sales contact",
                  "format": "50"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last Name of the sales contact",
                  "format": "50"
               },
               "Email": {
                  "type": "string",
                  "description": "Email of the sales contact",
                  "format": "80"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Mobile Number of the sales contact. Accepts numbers only. International format is preferable eg. +614xxxxxxxxx\".",
                  "format": "20"
               },
               "Phone": {
                  "type": "string",
                  "description": "Phone Number of the sales contact",
                  "format": "15"
               },
               "Position": {
                  "type": "string",
                  "description": "Position of the sales contact",
                  "format": "100"
               },
               "Company": {
                  "type": "string",
                  "description": "Company of the sales contact",
                  "format": "100"
               },
               "OwnerId": {
                  "type": "integer",
                  "description": "See entity SalesPersons",
                  "format": "int32"
               },
               "SalesContactStageId": {
                  "type": "integer",
                  "description": "See combo SalesContactStages",
                  "format": "int32"
               },
               "SalesContactTypeId": {
                  "type": "integer",
                  "description": "See combo SalesContactTypes",
                  "format": "int32"
               },
               "Notes": {
                  "type": "string",
                  "description": "Any additional notes related to the sales contact",
                  "format": "1000"
               },
               "SalesContactRelationships": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/SalesContactRelationship"
                  }
               },
               "CreatedOn": {
                  "type": "string",
                  "description": "Date when the sales contact was created",
                  "format": "date-time"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the sales contact was last modified",
                  "format": "date-time"
               }
            }
         },
         "SalesPersonItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SalesPerson"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SalesPersonRelationships"
               }
            }
         },
         "StaffItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Staff"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/StaffRelationships"
               }
            }
         },
         "TagItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Tag"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/TagRelationships"
               }
            }
         },
         "Tag": {
            "type": "object",
            "properties": {
               "TagId": {
                  "type": "integer",
                  "description": "Primary Id for Tag that is auto generated",
                  "format": "int32"
               },
               "Name": {
                  "type": "string",
                  "description": "Name used to identify the Tag"
               },
               "EntityName": {
                  "type": "string",
                  "description": "See entity Entities. Only 'CourseEnrolment' and 'Opportunity' are allowed"
               },
               "ArchivedFlag": {
                  "type": "boolean",
                  "description": "To indicate if Tag is Archived"
               }
            }
         },
         "TrainerItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Trainer"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/TrainerRelationships"
               }
            }
         },
         "UnitItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Unit"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/UnitRelationships"
               }
            }
         },
         "UnitOfferItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/UnitOffer"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/UnitOfferRelationships"
               }
            }
         },
         "UnitEnrolmentItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/UnitEnrolment"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/UnitEnrolmentRelationships"
               }
            }
         },
         "UnitEnrolment": {
            "type": "object",
            "properties": {
               "UnitEnrolmentId": {
                  "type": "integer",
                  "description": "Primary Id for unit enrolment that is auto generated",
                  "format": "int32"
               },
               "UnitOfferId": {
                  "type": "integer",
                  "description": "See entity UnitOffers",
                  "format": "int32"
               },
               "CourseEnrolmentId": {
                  "type": "integer",
                  "description": "See entity CourseEnrolments",
                  "format": "int32"
               },
               "AssessmentMethodId": {
                  "type": "integer",
                  "description": "See combo AssessmentMethods",
                  "format": "int32"
               },
               "ContractId": {
                  "type": "integer",
                  "description": "AU only. See entity Contracts",
                  "format": "int32"
               },
               "AssessorId": {
                  "type": "integer",
                  "description": "See entity Assessors",
                  "format": "int32"
               },
               "TrainerId": {
                  "type": "integer",
                  "description": "See entity Trainers",
                  "format": "int32"
               },
               "LocationId": {
                  "type": "integer",
                  "description": "See entity Locations",
                  "format": "int32"
               },
               "SpecificProgramId": {
                  "type": "integer",
                  "description": "AU only. See combo SpecificPrograms",
                  "format": "int32"
               },
               "ProposedStartDate": {
                  "type": "string",
                  "description": "Proposed Start Date of the unit enrolment",
                  "format": "date-time"
               },
               "ProposedEndDate": {
                  "type": "string",
                  "description": "Proposed End Date of the unit enrolment",
                  "format": "date-time"
               },
               "StartDate": {
                  "type": "string",
                  "description": "Start Date of the unit enrolment",
                  "format": "date-time"
               },
               "EndDate": {
                  "type": "string",
                  "description": "End Date of the unit enrolment",
                  "format": "date-time"
               },
               "ActualEndDate": {
                  "type": "string",
                  "description": "Actual End Date of the unit enrolment",
                  "format": "date-time"
               },
               "ExpiryDate": {
                  "type": "string",
                  "description": "Expiry Date of the unit enrolment",
                  "format": "date-time"
               },
               "CensusDate": {
                  "type": "string",
                  "description": "Census Date of the unit enrolment",
                  "format": "date-time"
               },
               "ConcessionFlag": {
                  "type": "boolean",
                  "description": "To indicate if the learner is eligible for a concession or not"
               },
               "ForGovtReportingFlag": {
                  "type": "boolean",
                  "description": "For AVETMISS flag (AU), For SDR flag (NZ), For Reporting flag (SG)"
               },
               "FinalScore": {
                  "type": "string",
                  "description": "Final Score of the unit enrolment",
                  "format": "50"
               },
               "TheoryScore": {
                  "type": "string",
                  "description": "Theory Score of the unit enrolment",
                  "format": "50"
               },
               "PracticalScore": {
                  "type": "string",
                  "description": "Practical Score of the unit enrolment",
                  "format": "50"
               },
               "UnitHourlyFee": {
                  "type": "number",
                  "description": "Hourly Fee of the unit enrolment",
                  "format": "double"
               },
               "HoursSupervised": {
                  "type": "integer",
                  "description": "Supervised Hours of the unit enrolment",
                  "format": "int32"
               },
               "HoursUnsupervised": {
                  "type": "integer",
                  "description": "Unsupervised Hours of the unit enrolment",
                  "format": "int32"
               },
               "ActualHours": {
                  "type": "integer",
                  "description": "Actual Hours of the unit enrolment",
                  "format": "int32"
               },
               "UnitFees": {
                  "type": "number",
                  "description": "Total Unit Fees of the unit enrolment",
                  "format": "double"
               },
               "ResourceFee": {
                  "type": "number",
                  "description": "AU only. Non tuition fee amount charged for enrolments in this Unit Offer(WA)",
                  "format": "double"
               },
               "LoanLiability": {
                  "type": "number",
                  "description": "AU only. Loan Liability of the unit enrolment(WA)",
                  "format": "double"
               },
               "PreviousIdentifier": {
                  "type": "string",
                  "description": "The previous identifier associated with the unit enrolment",
                  "format": "100"
               },
               "Notes": {
                  "type": "string",
                  "description": "Additional Notes related to the unit enrolment",
                  "format": "4000"
               },
               "FeeExemptionId": {
                  "type": "integer",
                  "description": "See combo FeeExemptions",
                  "format": "int32"
               },
               "FeeExemptionWaiverId": {
                  "type": "integer",
                  "description": "See combo FeeExemptionWaivers",
                  "format": "int32"
               },
               "Stage": {
                  "type": "integer",
                  "description": "Stage the unit enrolment is delivered",
                  "format": "int32"
               },
               "Points": {
                  "type": "integer",
                  "description": "Points achieved in the unit enrolment",
                  "format": "int32"
               },
               "ResultId": {
                  "type": "integer",
                  "description": "See combo Results",
                  "format": "int32"
               },
               "OutcomeId": {
                  "type": "integer",
                  "description": "AU only. See combo Outcomes",
                  "format": "int32"
               },
               "VetInSchoolFlag": {
                  "type": "boolean",
                  "description": "AU only. To indicate if the learner is completing the unit through a school"
               },
               "DeliveryModeId": {
                  "type": "integer",
                  "description": "AU only. See combo DeliveryModes",
                  "format": "int32"
               },
               "DeliveryWorkplaceId": {
                  "type": "integer",
                  "description": "AU only. See entity Workplaces",
                  "format": "int32"
               },
               "FundSourceNationalId": {
                  "type": "integer",
                  "description": "AU only. See combo FundSourceNationals",
                  "format": "int32"
               },
               "FundSourceStateId": {
                  "type": "integer",
                  "description": "AU only. See combo FundSourceStates",
                  "format": "int32"
               },
               "EftsFactor": {
                  "type": "string",
                  "description": "NZ only. EFTS Factor which should be between 0.0000 and 1.0000",
                  "format": "6"
               },
               "ForeignFee": {
                  "type": "number",
                  "description": "NZ only. Tuition Fees paid by international fee-paying student",
                  "format": "double"
               },
               "MaximaExemptFee": {
                  "type": "number",
                  "description": "NZ only. Sum of all non maxima fees charged to the learner",
                  "format": "double"
               },
               "FeeAssessmentCategoryId": {
                  "type": "integer",
                  "description": "NZ only. See combo FeeAssessmentCategories",
                  "format": "int32"
               },
               "MuralAttendanceId": {
                  "type": "integer",
                  "description": "NZ only. See combo MuralAttendances",
                  "format": "int32"
               },
               "NzOutcomeId": {
                  "type": "integer",
                  "description": "NZ only. See combo NzOutcomes",
                  "format": "int32"
               },
               "NzqaResultId": {
                  "type": "integer",
                  "description": "NZ only. See combo NzqaResults",
                  "format": "int32"
               },
               "GradePoint": {
                  "type": "number",
                  "description": "Grade point",
                  "format": "double"
               },
               "ExtensionDate": {
                  "type": "string",
                  "description": "NZ only. The date the unit enrolment has been extended to",
                  "format": "date-time"
               },
               "TuitionWeeks": {
                  "type": "number",
                  "description": "NZ only. Number of weeks for this unit enrolment",
                  "format": "double"
               },
               "FundSourceId": {
                  "type": "integer",
                  "description": "NZ only. See combo FundSources",
                  "format": "int32"
               },
               "DeliveryModeAv8Id": {
                  "type": "integer",
                  "description": "AU only. See combo DeliveryModesAv8",
                  "format": "int32"
               },
               "PredominantDeliveryModeId": {
                  "type": "integer",
                  "description": "AU only. See combo PredominantDeliveryModes",
                  "format": "int32"
               },
               "DeliveryModeWa1Id": {
                  "type": "integer",
                  "description": "AU only. See combo DeliveryModesWa",
                  "format": "int32"
               },
               "DeliveryModeWa2Id": {
                  "type": "integer",
                  "description": "AU only. See combo DeliveryModesWa",
                  "format": "int32"
               },
               "DeliveryModeWa3Id": {
                  "type": "integer",
                  "description": "AU only. See combo DeliveryModesWa",
                  "format": "int32"
               },
               "EmployerInvoicedFlag": {
                  "type": "string",
                  "description": "AU only. To indicate if the employer is invoiced for the unit enrolment",
                  "format": "Y or N"
               },
               "FundingRemovedFlag": {
                  "type": "string",
                  "description": "AU only. To indicate if the funding is removed for the unit enrolment",
                  "format": "Y or N"
               },
               "AssessmentUrl": {
                  "type": "string",
                  "description": "Related assessment URL if applicable",
                  "format": "400"
               },
               "IsLockedFlag": {
                  "type": "boolean",
                  "description": "To indicate of the unit enrolment is locked or not"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the unit enrolment was last modified",
                  "format": "date-time"
               }
            }
         },
         "USIValidation": {
            "type": "object",
            "properties": {
               "UsiNumber": {
                  "type": "string",
                  "description": "USI number of the learner"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First name of learner"
               },
               "FamilyName": {
                  "type": "string",
                  "description": "Last name of learner"
               },
               "SingleName": {
                  "type": "string",
                  "description": "Firstname and Last name of the learner"
               },
               "DateOfBirth": {
                  "type": "string",
                  "description": "Date of the birth of the learner",
                  "format": "date-time"
               },
               "Gender": {
                  "type": "string",
                  "description": "See combos Genders, gender code"
               }
            }
         },
         "USIValidationResponse": {
            "type": "object",
            "properties": {
               "UsiStatus": {
                  "type": "string",
                  "description": "The verification status received for the learner's USI"
               },
               "FirstNameStatus": {
                  "type": "string",
                  "description": "The verification status received for the learner's firstname"
               },
               "FamilyNameStatus": {
                  "type": "string",
                  "description": "The verification status received for the learner's lastname"
               },
               "SingleNameStatus": {
                  "type": "string",
                  "description": "The verification status received for the learner's firstname and lastname"
               },
               "DateOfBirthStatus": {
                  "type": "string",
                  "description": "The verification status received for the learner's date of birth"
               }
            }
         },
         "WorkplaceItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Workplace"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/WorkplaceRelationships"
               }
            }
         },
         "Workplace": {
            "type": "object",
            "properties": {
               "WorkplaceId": {
                  "type": "integer",
                  "description": "Primary Id for Workplace that is auto generated",
                  "format": "int32"
               },
               "Code": {
                  "type": "string",
                  "description": "Code used to identify the Workplace",
                  "format": "20"
               },
               "Description": {
                  "type": "string",
                  "description": "Description used to identify the Workplace",
                  "format": "150"
               },
               "LegalName": {
                  "type": "string",
                  "description": "Legal Name used to identify the Workplace",
                  "format": "100"
               },
               "ArchivedFlag": {
                  "type": "boolean",
                  "description": "To indicate if Workplace is Archived"
               },
               "Phone": {
                  "type": "string",
                  "description": "Workplace Phone",
                  "format": "15"
               },
               "Fax": {
                  "type": "string",
                  "description": "Workplace Fax",
                  "format": "20"
               },
               "Email": {
                  "type": "string",
                  "description": "Workplace Email",
                  "format": "50"
               },
               "Website": {
                  "type": "string",
                  "description": "Workplace Website",
                  "format": "500"
               },
               "StreetAddress": {
                  "$ref": "#/components/schemas/WorkplaceStreetAddress"
               },
               "PostalAddress": {
                  "$ref": "#/components/schemas/WorkplacePostalAddress"
               },
               "CompanyNumber": {
                  "type": "string",
                  "description": "Company Number of the Workplace",
                  "format": "255"
               },
               "BusinessNumber": {
                  "type": "string",
                  "description": "Business Number of the Workplace",
                  "format": "255"
               },
               "SchoolFlag": {
                  "type": "boolean",
                  "description": "To indicate if the Workplace is a School"
               },
               "SchoolTypeId": {
                  "type": "integer",
                  "description": "Returns all School Type records. Used in Workplace.",
                  "format": "int32"
               },
               "AnzsicId": {
                  "type": "integer",
                  "description": "Notes regarding the Workplace",
                  "format": "int32"
               },
               "GeneralNotes": {
                  "type": "string",
                  "description": "Notes regarding the Workplace",
                  "format": "100"
               },
               "WorkplaceClassificationId": {
                  "type": "integer",
                  "description": "Returns all Wrokplace Classifications records. Used in Workplace.",
                  "format": "int32"
               },
               "IndustrySizeId": {
                  "type": "integer",
                  "description": "Returns all Industry Size records. Used in Workplace.",
                  "format": "int32"
               },
               "HeadOfficeWorkplaceId": {
                  "type": "integer",
                  "description": "See entity Workplaces",
                  "format": "int32"
               },
               "SyncToSugarCrm": {
                  "type": "boolean",
                  "description": "To indicate if the Workplace should be synced to SugarCrm or not"
               },
               "SyncToXero": {
                  "type": "boolean",
                  "description": "To indicate if the Workplace should be synced to Xero or not"
               },
               "AccreditationTypeId": {
                  "type": "integer",
                  "description": "Returns all Accreditation Type records. Used in Workplace.",
                  "format": "int32"
               },
               "LocationId": {
                  "type": "integer",
                  "description": "Indicates that the Workplace is a training delivery location. When LocationId exists, the Location should be updated when changes occur to Workplace address. This field is only editable from the Location endpoint.",
                  "format": "int32"
               },
               "NzEmploymentLocationCodeId": {
                  "type": "integer",
                  "description": "New Zealand only. Employment Location Code. See Combo NzEmploymentLocationCode",
                  "format": "int32"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the Workplace was last modified",
                  "format": "date-time"
               }
            }
         },
         "AacItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Aac"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AacRelationships"
               }
            }
         },
         "AccreditationTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/AccreditationType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AccreditationTypeRelationships"
               }
            }
         },
         "AdmissionBasisItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/AdmissionBasis"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AdmissionBasisRelationships"
               }
            }
         },
         "AgeCategoryItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/AgeCategory"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AgeCategoryRelationships"
               }
            }
         },
         "AgentAgreementStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/AgentAgreementStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AgentAgreementStatusRelationships"
               }
            }
         },
         "AgentClassificationItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/AgentClassification"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AgentClassificationRelationships"
               }
            }
         },
         "AgentStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/AgentStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AgentStatusRelationships"
               }
            }
         },
         "AlertTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/AlertType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AlertTypeRelationships"
               }
            }
         },
         "AnzscoItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Anzsco"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AnzscoRelationships"
               }
            }
         },
         "AnzsicItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Anzsic"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AnzsicRelationships"
               }
            }
         },
         "ApplicationPaymentTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/ApplicationPaymentType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/ApplicationPaymentTypeRelationships"
               }
            }
         },
         "ApplicationStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/ApplicationStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/ApplicationStatusRelationships"
               }
            }
         },
         "ApplicationStatusReasonItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/ApplicationStatusReason"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/ApplicationStatusReasonRelationships"
               }
            }
         },
         "AscoItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Asco"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AscoRelationships"
               }
            }
         },
         "AssessmentMethodItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/AssessmentMethod"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AssessmentMethodRelationships"
               }
            }
         },
         "AttendanceTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/AttendanceType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AttendanceTypeRelationships"
               }
            }
         },
         "AutoGradeRuleTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/AutoGradeRuleType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AutoGradeRuleTypeRelationships"
               }
            }
         },
         "AutoGradeStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/AutoGradeStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AutoGradeStatusRelationships"
               }
            }
         },
         "AvStudyReasonItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/AvStudyReason"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/AvStudyReasonRelationships"
               }
            }
         },
         "CampusOperationTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/CampusOperationType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CampusOperationTypeRelationships"
               }
            }
         },
         "CloseLostReasonItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/CloseLostReason"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CloseLostReasonRelationships"
               }
            }
         },
         "CommencingProgramCohortItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/CommencingProgramCohort"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CommencingProgramCohortRelationships"
               }
            }
         },
         "CommencedAtSchoolFlagItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/CommencedAtSchoolFlag"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CommencedAtSchoolFlagRelationships"
               }
            }
         },
         "CommencingCourseItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/CommencingCourse"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CommencingCourseRelationships"
               }
            }
         },
         "CommencingStudentIdentifierItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/CommencingStudentIdentifier"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CommencingStudentIdentifierRelationships"
               }
            }
         },
         "CompletionPathwayItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/CompletionPathway"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CompletionPathwayRelationships"
               }
            }
         },
         "CourseOfferStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/CourseOfferStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CourseOfferStatusRelationships"
               }
            }
         },
         "CourseOfferTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/CourseOfferType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CourseOfferTypeRelationships"
               }
            }
         },
         "ContractTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/ContractType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/ContractTypeRelationships"
               }
            }
         },
         "CountryItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Country"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CountryRelationships"
               }
            }
         },
         "CredentialStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/CredentialStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CredentialStatusRelationships"
               }
            }
         },
         "CurrencyItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Currency"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/CurrencyRelationships"
               }
            }
         },
         "ElearningCourseStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/ElearningCourseStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/ElearningCourseStatusRelationships"
               }
            }
         },
         "ElearningEnrolmentStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/ElearningEnrolmentStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/ElearningEnrolmentStatusRelationships"
               }
            }
         },
         "EventTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/EventType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/EventTypeRelationships"
               }
            }
         },
         "DeliveryModeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/DeliveryMode"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/DeliveryModeRelationships"
               }
            }
         },
         "DeliveryModeAv8Item": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/DeliveryModeAv8"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/DeliveryModeAv8Relationships"
               }
            }
         },
         "DeliveryModeWaItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/DeliveryModeWa"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/DeliveryModeWaRelationships"
               }
            }
         },
         "DeliveryOptionItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/DeliveryOption"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/DeliveryOptionRelationships"
               }
            }
         },
         "DepartmentCodeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/DepartmentCode"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/DepartmentCodeRelationships"
               }
            }
         },
         "DisabilityItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Disability"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/DisabilityRelationships"
               }
            }
         },
         "DisabilityFlagItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/DisabilityFlag"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/DisabilityFlagRelationships"
               }
            }
         },
         "DurationTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/DurationType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/DurationTypeRelationships"
               }
            }
         },
         "EmploymentStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/EmploymentStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/EmploymentStatusRelationships"
               }
            }
         },
         "EnglishTestScoreTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/EnglishTestScoreType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/EnglishTestScoreTypeRelationships"
               }
            }
         },
         "EnrolmentStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/EnrolmentStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/EnrolmentStatusRelationships"
               }
            }
         },
         "EnrolmentStatusReasonItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/EnrolmentStatusReason"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/EnrolmentStatusReasonRelationships"
               }
            }
         },
         "ElementEnrolmentStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/ElementEnrolmentStatus"
               }
            }
         },
         "FeeAssessmentCategoryItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FeeAssessmentCategory"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FeeAssessmentCategoryRelationships"
               }
            }
         },
         "FeeExemptionItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FeeExemption"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FeeExemptionRelationships"
               }
            }
         },
         "FeeExemptionWaiverItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FeeExemptionWaiver"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FeeExemptionWaiverRelationships"
               }
            }
         },
         "FeesFreeEligibleItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FeesFreeEligible"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FeesFreeEligibleRelationships"
               }
            }
         },
         "FeeTypeIndicatorItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FeeTypeIndicator"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FeeTypeIndicatorRelationships"
               }
            }
         },
         "FhAdditionalEntranceCriteriaItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FhAdditionalEntranceCriteria"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FhAdditionalEntranceCriteriaRelationships"
               }
            }
         },
         "FhBasisForAdmissionItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FhBasisForAdmission"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FhBasisForAdmissionRelationships"
               }
            }
         },
         "FhCitizenResidentItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FhCitizenResident"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FhCitizenResidentRelationships"
               }
            }
         },
         "FhFieldOfEducationItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FhFieldOfEducation"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FhFieldOfEducationRelationships"
               }
            }
         },
         "FhHighestEducationLevelItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FhHighestEducationLevel"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FhHighestEducationLevelRelationships"
               }
            }
         },
         "FhIndigenousStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FhIndigenousStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FhIndigenousStatusRelationships"
               }
            }
         },
         "FhParentEducationLevelItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FhParentEducationLevel"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FhParentEducationLevelRelationships"
               }
            }
         },
         "FhStudyReasonItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FhStudyReason"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FhStudyReasonRelationships"
               }
            }
         },
         "FpsStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FpsStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FpsStatusRelationships"
               }
            }
         },
         "FpsWaiverReasonItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FpsWaiverReason"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FpsWaiverReasonRelationships"
               }
            }
         },
         "FundSourceItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FundSource"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FundSourceRelationships"
               }
            }
         },
         "FundSourceNationalItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FundSourceNational"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FundSourceNationalRelationships"
               }
            }
         },
         "FundSourceStateItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/FundSourceState"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/FundSourceStateRelationships"
               }
            }
         },
         "GenderItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Gender"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/GenderRelationships"
               }
            }
         },
         "HighestSchoolLevelItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/HighestSchoolLevel"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/HighestSchoolLevelRelationships"
               }
            }
         },
         "IndigenousStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/IndigenousStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/IndigenousStatusRelationships"
               }
            }
         },
         "IndustryItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Industry"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/IndustryRelationships"
               }
            }
         },
         "IndustryOfEmploymentItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/IndustryOfEmployment"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/IndustryOfEmploymentRelationships"
               }
            }
         },
         "IndustrySizeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/IndustrySize"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/IndustrySizeRelationships"
               }
            }
         },
         "InternetBasedLearningItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/InternetBasedLearning"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/InternetBasedLearningRelationships"
               }
            }
         },
         "LanguageItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Language"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LanguageRelationships"
               }
            }
         },
         "LevelOfEducationItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LevelOfEducation"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LevelOfEducationRelationships"
               }
            }
         },
         "LlnBenefitItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LlnBenefit"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LlnBenefitRelationships"
               }
            }
         },
         "LlnLevelItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LlnLevel"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LlnLevelRelationships"
               }
            }
         },
         "LlnPostAssessItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LlnPostAssess"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LlnPostAssessRelationships"
               }
            }
         },
         "LlnPreAssessItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/LlnPreAssess"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/LlnPreAssessRelationships"
               }
            }
         },
         "MainSubjectItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/MainSubject"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/MainSubjectRelationships"
               }
            }
         },
         "ManagedApprenticeshipItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/ManagedApprenticeship"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/ManagedApprenticeshipRelationships"
               }
            }
         },
         "MaritalStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/MaritalStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/MaritalStatusRelationships"
               }
            }
         },
         "MuralAttendanceItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/MuralAttendance"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/MuralAttendanceRelationships"
               }
            }
         },
         "NextOfKinRelationshipItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NextOfKinRelationship"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NextOfKinRelationshipRelationships"
               }
            }
         },
         "NextOfKinRelationship": {
            "type": "object",
            "properties": {
               "NextOfKinRelationshipId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzCountryItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzCountry"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzCountryRelationships"
               }
            }
         },
         "NzDisabilityAccessedFlagItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzDisabilityAccessedFlag"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzDisabilityAccessedFlagRelationships"
               }
            }
         },
         "NzDisabilityFlagItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzDisabilityFlag"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzDisabilityFlagRelationships"
               }
            }
         },
         "NzEthnicityItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzEthnicity"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzEthnicityRelationships"
               }
            }
         },
         "NzGenderItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzGender"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzGenderRelationships"
               }
            }
         },
         "NzIwiAffiliationItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzIwiAffiliation"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzIwiAffiliationRelationships"
               }
            }
         },
         "NzLastSchoolAttendedItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzLastSchoolAttended"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzLastSchoolAttendedRelationships"
               }
            }
         },
         "NzEmploymentLocationCodeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzEmploymentLocationCode"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzEmploymentLocationCodeRelationships"
               }
            }
         },
         "NzMainActivityPriorToStudyItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzMainActivityPriorToStudy"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzMainActivityPriorToStudyRelationships"
               }
            }
         },
         "NzOutcomeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzOutcome"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzOutcomeRelationships"
               }
            }
         },
         "NzqaAwardingProviderItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzqaAwardingProvider"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzqaAwardingProviderRelationships"
               }
            }
         },
         "NzqaRequestTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzqaRequestType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzqaRequestTypeRelationships"
               }
            }
         },
         "NzqaResultItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzqaResult"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzqaResultRelationships"
               }
            }
         },
         "NzResidentialStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzResidentialStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzResidentialStatusRelationships"
               }
            }
         },
         "NzSecondaryQualificationItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzSecondaryQualification"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzSecondaryQualificationRelationships"
               }
            }
         },
         "NzVisaTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/NzVisaType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/NzVisaTypeRelationships"
               }
            }
         },
         "OccupationIdentifierItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/OccupationIdentifier"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/OccupationIdentifierRelationships"
               }
            }
         },
         "OffshoreDeliveryIndicatorItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/OffshoreDeliveryIndicator"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/OffshoreDeliveryIndicatorRelationships"
               }
            }
         },
         "OffshoreDeliveryModeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/OffshoreDeliveryMode"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/OffshoreDeliveryModeRelationships"
               }
            }
         },
         "OpportunitySourceItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/OpportunitySource"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/OpportunitySourceRelationships"
               }
            }
         },
         "OpportunityStageItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/OpportunityStage"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/OpportunityStageRelationships"
               }
            }
         },
         "OpportunityTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/OpportunityType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/OpportunityTypeRelationships"
               }
            }
         },
         "OutcomeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Outcome"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/OutcomeRelationships"
               }
            }
         },
         "PayLevelItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/PayLevel"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/PayLevelRelationships"
               }
            }
         },
         "PaymentTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/PaymentType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/PaymentTypeRelationships"
               }
            }
         },
         "PeriodTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/PeriodType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/PeriodTypeRelationships"
               }
            }
         },
         "PipelineItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Pipeline"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/PipelineRelationships"
               }
            }
         },
         "PositionItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Position"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/PositionRelationships"
               }
            }
         },
         "PredominantDeliveryModeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/PredominantDeliveryMode"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/PredominantDeliveryModeRelationships"
               }
            }
         },
         "PriorEducationFlagItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/PriorEducationFlag"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/PriorEducationFlagRelationships"
               }
            }
         },
         "PriorEducationItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/PriorEducation"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/PriorEducationRelationships"
               }
            }
         },
         "PriorEducationTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/PriorEducationType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/PriorEducationTypeRelationships"
               }
            }
         },
         "PublishTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/PublishType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/PublishTypeRelationships"
               }
            }
         },
         "ProgramItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Program"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/ProgramRelationships"
               }
            }
         },
         "ProgramStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/ProgramStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/ProgramStatusRelationships"
               }
            }
         },
         "QualificationFieldOfEducationItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/QualificationFieldOfEducation"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/QualificationFieldOfEducationRelationships"
               }
            }
         },
         "RecognitionStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/RecognitionStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/RecognitionStatusRelationships"
               }
            }
         },
         "RecipientTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/RecipientType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/RecipientTypeRelationships"
               }
            }
         },
         "RegionItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Region"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/RegionRelationships"
               }
            }
         },
         "ResultItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Result"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/ResultRelationships"
               }
            }
         },
         "RtoStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/RtoStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/RtoStatusRelationships"
               }
            }
         },
         "SaAlternativeIdentifierTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SaAlternativeIdentifierType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SaAlternativeIdentifierTypeRelationships"
               }
            }
         },
         "SaCitizenResidentStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SaCitizenResidentStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SaCitizenResidentStatusRelationships"
               }
            }
         },
         "SaEquityItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SaEquity"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SaEquityRelationships"
               }
            }
         },
         "SaHealthRatingItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SaHealthRating"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SaHealthRatingRelationships"
               }
            }
         },
         "SaHighestQualificationTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SaHighestQualificationType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SaHighestQualificationTypeRelationships"
               }
            }
         },
         "SaLanguageItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SaLanguage"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SaLanguageRelationships"
               }
            }
         },
         "SaNationalityItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SaNationality"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SaNationalityRelationships"
               }
            }
         },
         "SaProvinceItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SaProvince"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SaProvinceRelationships"
               }
            }
         },
         "SaSocioeconomicStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SaSocioeconomicStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SaSocioeconomicStatusRelationships"
               }
            }
         },
         "SalesContactStageItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SalesContactStage"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SalesContactStageRelationships"
               }
            }
         },
         "SalesContactTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SalesContactType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SalesContactTypeRelationships"
               }
            }
         },
         "ScholarshipTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/ScholarshipType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/ScholarshipTypeRelationships"
               }
            }
         },
         "SchoolTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SchoolType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SchoolTypeRelationships"
               }
            }
         },
         "SeparationStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SeparationStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SeparationStatusRelationships"
               }
            }
         },
         "SgNricTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SgNricType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SgNricTypeRelationships"
               }
            }
         },
         "SgPriorEducationItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SgPriorEducation"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SgPriorEducationRelationships"
               }
            }
         },
         "SgPriorEducationWsqItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SgPriorEducationWsq"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SgPriorEducationWsqRelationships"
               }
            }
         },
         "SgNationalityItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SgNationality"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SgNationalityRelationships"
               }
            }
         },
         "SgCitizenPrStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SgCitizenPrStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SgCitizenPrStatusRelationships"
               }
            }
         },
         "SgIdentityDocumentTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SgIdentityDocumentType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SgIdentityDocumentTypeRelationships"
               }
            }
         },
         "SgRaceItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SgRace"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SgRaceRelationships"
               }
            }
         },
         "SpecificProgramIdentifierItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SpecificProgramIdentifier"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SpecificProgramIdentifierRelationships"
               }
            }
         },
         "SpokenEnglishProficiencyItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SpokenEnglishProficiency"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SpokenEnglishProficiencyRelationships"
               }
            }
         },
         "StateItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/State"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/StateRelationships"
               }
            }
         },
         "StudentPassRequirementItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/StudentPassRequirement"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/StudentPassRequirementRelationships"
               }
            }
         },
         "StudylinkStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/StudylinkStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/StudylinkStatusRelationships"
               }
            }
         },
         "StudylinkStatusReasonItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/StudylinkStatusReason"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/StudylinkStatusReasonRelationships"
               }
            }
         },
         "StudyModeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/StudyMode"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/StudyModeRelationships"
               }
            }
         },
         "SurveyStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/SurveyStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/SurveyStatusRelationships"
               }
            }
         },
         "TargetGroupCourseEnrolmentItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/TargetGroupCourseEnrolment"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/TargetGroupCourseEnrolmentRelationships"
               }
            }
         },
         "TargetGroupClientItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/TargetGroupClient"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/TargetGroupClientRelationships"
               }
            }
         },
         "TaskCompletionStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/TaskCompletionStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/TaskCompletionStatusRelationships"
               }
            }
         },
         "TaskPriorityItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/TaskPriority"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/TaskPriorityRelationships"
               }
            }
         },
         "UnitFieldOfEducationItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/UnitFieldOfEducation"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/UnitFieldOfEducationRelationships"
               }
            }
         },
         "UnitOfCompetencyFlagItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/UnitOfCompetencyFlag"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/UnitOfCompetencyFlagRelationships"
               }
            }
         },
         "UnitTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/UnitType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/UnitTypeRelationships"
               }
            }
         },
         "VenueItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Venue"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/VenueRelationships"
               }
            }
         },
         "VaccineStatusItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/VaccineStatus"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/VaccineStatusRelationships"
               }
            }
         },
         "VisaTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/VisaType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/VisaTypeRelationships"
               }
            }
         },
         "VisaItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/Visa"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/VisaRelationships"
               }
            }
         },
         "Visa": {
            "type": "object",
            "properties": {
               "VisaId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               },
               "IsActive": {
                  "type": "boolean"
               }
            }
         },
         "UReportTemplateTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/UReportTemplateType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/UReportTemplateTypeRelationships"
               }
            }
         },
         "WinProbabilityItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/WinProbability"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/WinProbabilityRelationships"
               }
            }
         },
         "WorkplaceClassificationItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/WorkplaceClassification"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/WorkplaceClassificationRelationships"
               }
            }
         },
         "WorkplaceTypeItem": {
            "type": "object",
            "properties": {
               "Data": {
                  "$ref": "#/components/schemas/WorkplaceType"
               },
               "Relationships": {
                  "$ref": "#/components/schemas/WorkplaceTypeRelationships"
               }
            }
         },
         "Agent": {
            "type": "object",
            "properties": {
               "AgentId": {
                  "type": "integer",
                  "description": "Primary Id for Agent that is auto generated",
                  "format": "int32"
               },
               "Name": {
                  "type": "string",
                  "description": "Name used to identify the Agent",
                  "format": "100"
               },
               "Code": {
                  "type": "string",
                  "description": "Code used to identify the Agent",
                  "format": "50"
               },
               "AgentStatusId": {
                  "type": "integer",
                  "description": "See combo AgentStatuses",
                  "format": "int32"
               },
               "ArchivedFlag": {
                  "type": "boolean",
                  "description": "To indicate if Agent is Archived"
               },
               "AssignedToStaffId": {
                  "type": "integer",
                  "description": "See entity Staff",
                  "format": "int32"
               },
               "RegionId": {
                  "type": "integer",
                  "description": "See combo Regions",
                  "format": "int32"
               },
               "AgentAltNumber": {
                  "type": "string",
                  "description": "Alternative number to identify the Agent",
                  "format": "100"
               },
               "AgentClassificationId": {
                  "type": "integer",
                  "description": "See combo AgentClassifications",
                  "format": "int32"
               },
               "MainContactFirstName": {
                  "type": "string",
                  "description": "Main Contact First Name for Agent",
                  "format": "20"
               },
               "MainContactMiddleName": {
                  "type": "string",
                  "description": "Main Contact Middle Name for Agent",
                  "format": "20"
               },
               "MainContactLastName": {
                  "type": "string",
                  "description": "Main Contact Last Name for Agent",
                  "format": "50"
               },
               "Email": {
                  "type": "string",
                  "description": "Agent Email",
                  "format": "80"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Agent Mobile",
                  "format": "20"
               },
               "Phone": {
                  "type": "string",
                  "description": "Agent Phone",
                  "format": "20"
               },
               "PhoneOther": {
                  "type": "string",
                  "description": "Agent Phone Other",
                  "format": "20"
               },
               "Fax": {
                  "type": "string",
                  "description": "Agent Fax",
                  "format": "20"
               },
               "Website": {
                  "type": "string",
                  "description": "Agent Website",
                  "format": "100"
               },
               "BusinessNumber": {
                  "type": "string",
                  "description": "Agent Business Number",
                  "format": "50"
               },
               "CompanyNumber": {
                  "type": "string",
                  "description": "Agent Company Number",
                  "format": "50"
               },
               "RegistrationNumber": {
                  "type": "string",
                  "description": "Agent Registration Number",
                  "format": "50"
               },
               "StreetAddress": {
                  "$ref": "#/components/schemas/AgentStreetAddress"
               },
               "PostalAddress": {
                  "$ref": "#/components/schemas/AgentPostalAddress"
               },
               "VetCommission": {
                  "type": "integer",
                  "description": "Agent VET Commission rate as a percentage",
                  "format": "int32"
               },
               "ElicosCommission": {
                  "type": "integer",
                  "description": "Agent ELICOS Commission rate as a percentage",
                  "format": "int32"
               },
               "EnrolmentFeeFlag": {
                  "type": "boolean",
                  "description": "To indicate if Agent receives Enrolment Fee"
               },
               "RegionalScholarshipFlag": {
                  "type": "boolean",
                  "description": "To indicate if Agent receives Regional Scholarship"
               },
               "RegionalScholarshipCode": {
                  "type": "string",
                  "description": "Regional Scholarship Code",
                  "format": "50"
               },
               "LastVisitDate": {
                  "type": "string",
                  "description": "Date Agent was last visited",
                  "format": "date-time"
               },
               "AgentStartDate": {
                  "type": "string",
                  "description": "Date Agent Started",
                  "format": "date-time"
               },
               "AgreementSignDate": {
                  "type": "string",
                  "description": "Date last agreement was signed",
                  "format": "date-time"
               },
               "AgreementExpiryDate": {
                  "type": "string",
                  "description": "Date last agreement expires",
                  "format": "date-time"
               },
               "GeneralNotes": {
                  "type": "string",
                  "description": "Notes regarding the Agent",
                  "format": "1000"
               },
               "AgentAgreementStatusId": {
                  "type": "integer",
                  "description": "See combo AgentAgreementStatuses",
                  "format": "int32"
               },
               "PrimarySalesContactId": {
                  "type": "integer",
                  "description": "See entity SalesContacts. This allows a primary Sales Contact to be defined.",
                  "format": "int32"
               },
               "Promotions": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/PromotionBasic"
                  }
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the learner was last modified",
                  "format": "date-time"
               }
            }
         },
         "AgentRelationships": {
            "type": "object",
            "properties": {
               "AgentStatus": {
                  "$ref": "#/components/schemas/AgentStatus"
               },
               "AssignedToStaff": {
                  "$ref": "#/components/schemas/Staff"
               },
               "Region": {
                  "$ref": "#/components/schemas/Region"
               },
               "AgentClassification": {
                  "$ref": "#/components/schemas/AgentClassification"
               },
               "Countries": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Country"
                  }
               },
               "AgentAgreementStatus": {
                  "$ref": "#/components/schemas/AgentAgreementStatus"
               },
               "PrimarySalesContact": {
                  "$ref": "#/components/schemas/SalesContactShort"
               }
            }
         },
         "AgentStreetAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "AddressLine1 of the Agents Street Address",
                  "format": "50"
               },
               "AddressLine2": {
                  "type": "string",
                  "description": "AddressLine2 of the Agents Street Address",
                  "format": "50"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of the Agents Street Address",
                  "format": "50"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of the Agents Street Address",
                  "format": "20"
               },
               "City": {
                  "type": "string",
                  "description": "City of the Agents Street Address",
                  "format": "50"
               },
               "StateProvinceRegion": {
                  "type": "string",
                  "description": "StateProvinceRegion of the Agents Street Address",
                  "format": "70"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               }
            }
         },
         "AgentPostalAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "AddressLine1 of the Agents Postal Address",
                  "format": "50"
               },
               "AddressLine2": {
                  "type": "string",
                  "description": "AddressLine2 of the Agents Postal Address",
                  "format": "50"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of the Agents Postal Address",
                  "format": "50"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of the Agents Postal Address",
                  "format": "20"
               },
               "StateProvinceRegion": {
                  "type": "string",
                  "description": "StateProvinceRegion of the Agents Postal Address",
                  "format": "70"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               }
            }
         },
         "Assessor": {
            "type": "object",
            "properties": {
               "AssessorId": {
                  "type": "integer",
                  "description": "Primary Id of the Assessor that is auto generated",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First Name of Assessor",
                  "format": "50"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last Name of Assessor",
                  "format": "50"
               },
               "IsActive": {
                  "type": "boolean",
                  "description": "To indicate if Assessor is active or not"
               }
            }
         },
         "AssessorRelationships": {
            "type": "object"
         },
         "AuditLog": {
            "type": "object",
            "properties": {
               "AuditLogId": {
                  "type": "integer",
                  "description": "Primary Id of the Audit Log that is auto generated",
                  "format": "int32"
               },
               "RecordId": {
                  "type": "integer",
                  "description": "Id of the record Audit Log entry is for",
                  "format": "int32"
               },
               "EntityName": {
                  "type": "string",
                  "description": "Name of entity the Audit Log entry is for. See entities Entity for list of values"
               },
               "AuditAction": {
                  "type": "string",
                  "description": "Audit action of the Audit Log entry. I is for insert, U for update and D for delete.",
                  "format": "1"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the Audit Log entry was created",
                  "format": "date-time"
               }
            }
         },
         "AuditLogRelationships": {
            "type": "object"
         },
         "ChecklistRelationships": {
            "type": "object",
            "properties": {
               "ChecklistItem": {
                  "$ref": "#/components/schemas/ShortChecklistItem"
               }
            }
         },
         "ChecklistItem": {
            "type": "object",
            "properties": {
               "ChecklistItemId": {
                  "type": "integer",
                  "description": "Primary Id for checklist item that is auto generated",
                  "format": "int32"
               },
               "EntityName": {
                  "type": "string",
                  "description": "See entity Entities"
               },
               "Type": {
                  "type": "string",
                  "description": "Allows checklist items to be grouped by a type"
               },
               "Description": {
                  "type": "string",
                  "description": "Used to identify the checklist"
               },
               "IsActive": {
                  "type": "boolean",
                  "description": "To indicate if the checklist item is active or no"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the checklist item was last modified",
                  "format": "date-time"
               }
            }
         },
         "ChecklistItemRelationships": {
            "type": "object"
         },
         "Coordinator": {
            "type": "object",
            "properties": {
               "CoordinatorId": {
                  "type": "integer",
                  "description": "Primary Id of the Coordinator that is auto generated",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First Name of Coordinator",
                  "format": "50"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last Name of Coordinator",
                  "format": "50"
               },
               "IsActive": {
                  "type": "boolean",
                  "description": "To indicate if Coordinator is active or not"
               }
            }
         },
         "CoordinatorRelationships": {
            "type": "object"
         },
         "Course": {
            "type": "object",
            "properties": {
               "CourseId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CoordinatorId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CourseDesc": {
                  "type": "string"
               },
               "CourseCode": {
                  "type": "string"
               },
               "NominalHours": {
                  "type": "string"
               },
               "DurationTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "DurationFullTime": {
                  "type": "number",
                  "format": "double"
               },
               "DurationPartTime": {
                  "type": "number",
                  "format": "double"
               },
               "RecognitionStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "AscoId": {
                  "type": "integer",
                  "format": "int32"
               },
               "VetFlag": {
                  "type": "string"
               },
               "CoreBusinessFlag": {
                  "type": "boolean"
               },
               "Cooperation": {
                  "type": "string"
               },
               "Points": {
                  "type": "integer",
                  "format": "int32"
               },
               "EntryRequirements": {
                  "type": "string"
               },
               "LearningOutcomes": {
                  "type": "string"
               },
               "GeneralNotes": {
                  "type": "string"
               },
               "TargetGroupId": {
                  "type": "integer",
                  "format": "int32"
               },
               "BusinessAreaId": {
                  "type": "integer",
                  "format": "int32"
               },
               "InternalQualificationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "QualificationFieldOfEducationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "LevelOfEducationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "AnzscoId": {
                  "type": "integer",
                  "format": "int32"
               },
               "AssociatedCourseCode": {
                  "type": "string"
               },
               "CourseDesigner": {
                  "type": "string"
               },
               "AwardingProvider": {
                  "type": "string"
               },
               "SgQualificationCategoryId": {
                  "type": "integer",
                  "format": "int32"
               },
               "SgSchedule1": {
                  "type": "string"
               },
               "SgWsqFlag": {
                  "type": "boolean"
               },
               "SgCpeFlag": {
                  "type": "boolean"
               },
               "FhCourseTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "FhFieldOfEducationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "FhEligibilityTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "FhEftsl": {
                  "type": "string"
               },
               "EffectiveFromDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "EffectiveToDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "QualificationCategoryId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CourseCodeNzqaAlternative": {
                  "type": "string"
               },
               "NzQualificationAwardCategoryId": {
                  "type": "integer",
                  "format": "int32"
               },
               "FhCourseDuration": {
                  "type": "number",
                  "format": "double"
               },
               "IndustryId": {
                  "type": "integer",
                  "format": "int32"
               },
               "PublishDetails": {
                  "$ref": "#/components/schemas/PublishDetailsCourse"
               },
               "LastCustomerUserId": {
                  "type": "integer",
                  "format": "int32"
               },
               "LastAuditTimeStamp": {
                  "type": "string",
                  "format": "date-time"
               },
               "LastAuditAction": {
                  "type": "string"
               },
               "NzSourceId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CourseGuid": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
               }
            }
         },
         "CourseRelationships": {
            "type": "object",
            "properties": {
               "Anzsco": {
                  "$ref": "#/components/schemas/Anzsco"
               },
               "Asco": {
                  "$ref": "#/components/schemas/Asco"
               },
               "QualificationFieldOfEducation": {
                  "$ref": "#/components/schemas/QualificationFieldOfEducation"
               },
               "LevelOfEducation": {
                  "$ref": "#/components/schemas/LevelOfEducation"
               },
               "RecognitionStatus": {
                  "$ref": "#/components/schemas/RecognitionStatus"
               },
               "TargetGroupsCourse": {
                  "$ref": "#/components/schemas/TargetGroupsCourse"
               },
               "CourseInternalQualification": {
                  "$ref": "#/components/schemas/CourseInternalQualification"
               },
               "NzSource": {
                  "$ref": "#/components/schemas/NzSource"
               },
               "SgQualificationCategory": {
                  "$ref": "#/components/schemas/SgQualificationCategory"
               },
               "DurationType": {
                  "$ref": "#/components/schemas/DurationType"
               },
               "Industry": {
                  "$ref": "#/components/schemas/Industry"
               }
            }
         },
         "CourseEnrolmentRelationships": {
            "type": "object",
            "properties": {
               "Opportunity": {
                  "$ref": "#/components/schemas/OpportunityBasic"
               },
               "EnrolmentStatus": {
                  "$ref": "#/components/schemas/EnrolmentStatus"
               },
               "EnrolmentStatusReason": {
                  "$ref": "#/components/schemas/EnrolmentStatusReason"
               },
               "StudyMode": {
                  "$ref": "#/components/schemas/StudyMode"
               },
               "TargetGroup": {
                  "$ref": "#/components/schemas/TargetGroupCourseEnrolment"
               },
               "StudylinkStatus": {
                  "$ref": "#/components/schemas/StudylinkStatus"
               },
               "StudylinkStatusReason": {
                  "$ref": "#/components/schemas/StudylinkStatusReason"
               },
               "DurationType": {
                  "$ref": "#/components/schemas/DurationType"
               },
               "ProgramStatus": {
                  "$ref": "#/components/schemas/ProgramStatus"
               },
               "ContractType": {
                  "$ref": "#/components/schemas/ContractType"
               },
               "AvStudyReason": {
                  "$ref": "#/components/schemas/AvStudyReason"
               },
               "CommencingCourse": {
                  "$ref": "#/components/schemas/CommencingCourse"
               },
               "CommencingStudentIdentifier": {
                  "$ref": "#/components/schemas/CommencingStudentIdentifier"
               },
               "FeeTypeIndicator": {
                  "$ref": "#/components/schemas/FeeTypeIndicator"
               },
               "AdmissionBasis": {
                  "$ref": "#/components/schemas/AdmissionBasis"
               },
               "AttendanceType": {
                  "$ref": "#/components/schemas/AttendanceType"
               },
               "FhStudyReason": {
                  "$ref": "#/components/schemas/FhStudyReason"
               },
               "SpecialisationFieldOfEducation": {
                  "$ref": "#/components/schemas/FhFieldOfEducation"
               },
               "ScholarshipType": {
                  "$ref": "#/components/schemas/ScholarshipType"
               },
               "SeparationStatus": {
                  "$ref": "#/components/schemas/SeparationStatus"
               },
               "FundSource": {
                  "$ref": "#/components/schemas/FundSource"
               },
               "MainSubject1": {
                  "$ref": "#/components/schemas/MainSubject"
               },
               "MainSubject2": {
                  "$ref": "#/components/schemas/MainSubject"
               },
               "MainSubject3": {
                  "$ref": "#/components/schemas/MainSubject"
               },
               "NzqaAwardingProvider": {
                  "$ref": "#/components/schemas/NzqaAwardingProvider"
               },
               "NzqaRequestType": {
                  "$ref": "#/components/schemas/NzqaRequestType"
               },
               "ManagedApprenticeship": {
                  "$ref": "#/components/schemas/ManagedApprenticeship"
               },
               "Aac": {
                  "$ref": "#/components/schemas/Aac"
               },
               "RtoStatus": {
                  "$ref": "#/components/schemas/RtoStatus"
               },
               "PaymentType": {
                  "$ref": "#/components/schemas/PaymentType"
               },
               "StudentPassRequirement": {
                  "$ref": "#/components/schemas/StudentPassRequirement"
               },
               "FpsStatus": {
                  "$ref": "#/components/schemas/FpsStatus"
               },
               "FpsWaiverReason": {
                  "$ref": "#/components/schemas/FpsWaiverReason"
               },
               "Trainer": {
                  "$ref": "#/components/schemas/Trainer"
               },
               "Assessor": {
                  "$ref": "#/components/schemas/Assessor"
               },
               "Coordinator": {
                  "$ref": "#/components/schemas/Coordinator"
               },
               "SalesPerson": {
                  "$ref": "#/components/schemas/SalesPerson"
               },
               "Learner": {
                  "$ref": "#/components/schemas/LearnerBasic"
               },
               "CourseOffer": {
                  "$ref": "#/components/schemas/CourseOfferBasic"
               },
               "Agent": {
                  "$ref": "#/components/schemas/AgentBasic"
               },
               "Tags": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Tag"
                  }
               },
               "Promotion": {
                  "$ref": "#/components/schemas/PromotionBasic"
               },
               "SalesContact": {
                  "$ref": "#/components/schemas/SalesContactShort"
               },
               "ApplicationStatus": {
                  "$ref": "#/components/schemas/ApplicationStatus"
               },
               "ApplicationStatusReason": {
                  "$ref": "#/components/schemas/ApplicationStatusReason"
               },
               "CompletionPathway": {
                  "$ref": "#/components/schemas/CompletionPathway"
               },
               "CommencedAtSchoolFlag": {
                  "$ref": "#/components/schemas/CommencedAtSchoolFlag"
               },
               "CommencingProgramCohort1": {
                  "$ref": "#/components/schemas/CommencingProgramCohort"
               },
               "CommencingProgramCohort2": {
                  "$ref": "#/components/schemas/CommencingProgramCohort"
               },
               "CommencingProgramCohort3": {
                  "$ref": "#/components/schemas/CommencingProgramCohort"
               }
            }
         },
         "CourseEnrolmentAgent": {
            "type": "object",
            "properties": {
               "AgentId": {
                  "type": "integer",
                  "description": "See entity Agents",
                  "format": "int32"
               },
               "PromotionId": {
                  "type": "integer",
                  "description": "See entity Promotions",
                  "format": "int32"
               },
               "SignDate": {
                  "type": "string",
                  "description": "Agent Sign Date for this Course Enrolment",
                  "format": "date-time"
               },
               "VetCommission": {
                  "type": "integer",
                  "description": "Agent VET Commission rate as a percentage for this Course Enrolment",
                  "format": "int32"
               },
               "ElicosCommission": {
                  "type": "integer",
                  "description": "Agent ELICOS Commission rate as a percentage for this Course Enrolment",
                  "format": "int32"
               },
               "Rate": {
                  "type": "number",
                  "description": "Agent Rate as a dollar value for this Course Enrolment",
                  "format": "double"
               },
               "Notes": {
                  "type": "string",
                  "description": "Notes regarding the Agent relationship for this Course Enrolment",
                  "format": "1000"
               },
               "SalesContactId": {
                  "type": "integer",
                  "description": "See entity Sales Contacts",
                  "format": "int32"
               }
            }
         },
         "TagBasic": {
            "type": "object",
            "properties": {
               "TagId": {
                  "type": "integer",
                  "description": "Primary Id for Tag that is auto generated",
                  "format": "int32"
               }
            }
         },
         "CourseOffer": {
            "type": "object",
            "properties": {
               "CourseOfferId": {
                  "type": "integer",
                  "description": "Primary Id for course offer that is auto generated",
                  "format": "int32"
               },
               "CourseId": {
                  "type": "integer",
                  "description": "Associated Course Id",
                  "format": "int32"
               },
               "Code": {
                  "type": "string",
                  "description": "Code used to identify the Course Offer",
                  "format": "25"
               },
               "Description": {
                  "type": "string",
                  "description": "Description of the course offer",
                  "format": "100"
               },
               "CourseOfferStatusId": {
                  "type": "integer",
                  "description": "See combo CourseOfferStatuses",
                  "format": "int32"
               },
               "CourseOfferStartDate": {
                  "type": "string",
                  "description": "Date when the course offer starts",
                  "format": "date-time"
               },
               "CourseOfferEndDate": {
                  "type": "string",
                  "description": "Date when the course offer is closed",
                  "format": "date-time"
               },
               "ApplicationStartDate": {
                  "type": "string",
                  "description": "Date from which applications will be accepted",
                  "format": "date-time"
               },
               "ApplicationEndDate": {
                  "type": "string",
                  "description": "Date when applications will be closed",
                  "format": "date-time"
               },
               "ExpectedAwardDate": {
                  "type": "string",
                  "description": "Expected date of when the qualification will be awarded for the course offer",
                  "format": "date-time"
               },
               "OrientationDate": {
                  "type": "string",
                  "description": "Orientation Date for the course offer",
                  "format": "date-time"
               },
               "MaxRegistrations": {
                  "type": "integer",
                  "description": "Maximum number of enrolments that can be created against the course offer",
                  "format": "int32"
               },
               "MinRegistrations": {
                  "type": "integer",
                  "description": "Minimum number of enrolments that can be created against the course offer",
                  "format": "int32"
               },
               "PublishNumber": {
                  "type": "integer",
                  "description": "Publish Number of the course offer",
                  "format": "int32"
               },
               "PublishName": {
                  "type": "string",
                  "description": "The course offer description displayed on Online Enrolment",
                  "format": "200"
               },
               "PublishStartDate": {
                  "type": "string",
                  "description": "Date from which the course offer is visible on Online Enrolment",
                  "format": "date-time"
               },
               "PublishEndDate": {
                  "type": "string",
                  "description": "Date till when the course offer is visible on Online Enrolment",
                  "format": "date-time"
               },
               "PublishFlag": {
                  "type": "boolean",
                  "description": "To indicate if the course offer is visible on Online Enrolment or not"
               },
               "AcceptEnrolmentsFlag": {
                  "type": "boolean",
                  "description": "To indicate if this course offer accepts enrolments via Online Enrolment"
               },
               "CoordinatorId": {
                  "type": "integer",
                  "description": "See entity Coordinators",
                  "format": "int32"
               },
               "CourseOfferTypeId": {
                  "type": "integer",
                  "description": "See combo CourseOfferTypes",
                  "format": "int32"
               },
               "DeliveryLanguageId": {
                  "type": "integer",
                  "description": "See combo Languages",
                  "format": "int32"
               },
               "DurationTypeId": {
                  "type": "integer",
                  "description": "See combo DurationTypes",
                  "format": "int32"
               },
               "DurationFullTime": {
                  "type": "number",
                  "description": "The full time enrolment duration",
                  "format": "double"
               },
               "DurationPartTime": {
                  "type": "number",
                  "description": "The part time enrolment duration",
                  "format": "double"
               },
               "DeliveryWorkplaceId": {
                  "type": "integer",
                  "description": "See entity Workplaces",
                  "format": "int32"
               },
               "ForGovtReportingFlag": {
                  "type": "boolean",
                  "description": "For AVETMISS flag (AU), For SDR flag (NZ), For Reporting flag (SG)"
               },
               "ProgramStatusId": {
                  "type": "integer",
                  "description": "AU only. See combo ProgramStatuses",
                  "format": "int32"
               },
               "ContractTypeId": {
                  "type": "integer",
                  "description": "AU only. See combo ContractTypes",
                  "format": "int32"
               },
               "CommencingCourseId": {
                  "type": "integer",
                  "description": "AU only. See combo CommencingCourses",
                  "format": "int32"
               },
               "AvStudyReasonId": {
                  "type": "integer",
                  "description": "AU only. See combo AvStudyReasons",
                  "format": "int32"
               },
               "StudyModeId": {
                  "type": "integer",
                  "description": "AU only. See combo StudyModes",
                  "format": "int32"
               },
               "LocationId": {
                  "type": "integer",
                  "description": "See entity Location",
                  "format": "int32"
               },
               "DeliveryModeId": {
                  "type": "integer",
                  "description": "See combo DeliveryModes",
                  "format": "int32"
               },
               "DeliveryModeAv8Id": {
                  "type": "integer",
                  "description": "AU only. See combo DeliveryModesAv8",
                  "format": "int32"
               },
               "PredominantDeliveryModeId": {
                  "type": "integer",
                  "description": "AU only. See combo PredominantDeliveryModes",
                  "format": "int32"
               },
               "FundSourceNationalId": {
                  "type": "integer",
                  "description": "AU only. See combo FundSourceNationals",
                  "format": "int32"
               },
               "FundSourceStateId": {
                  "type": "integer",
                  "description": "AU only. See combo FundSourceStates",
                  "format": "int32"
               },
               "ContractId": {
                  "type": "integer",
                  "description": "See entity Contract",
                  "format": "int32"
               },
               "FeeExemptionId": {
                  "type": "integer",
                  "description": "AU only. See combo FeeExemptions",
                  "format": "int32"
               },
               "FeeExemptionWaiverId": {
                  "type": "integer",
                  "description": "See combo FeeExemptionWaivers",
                  "format": "int32"
               },
               "ConcessionFlag": {
                  "type": "boolean",
                  "description": "To indicate if the course offer is eligible for concession or not"
               },
               "VetInSchoolFlag": {
                  "type": "boolean",
                  "description": "AU only. To indicate if the course offer is part of VET in school program"
               },
               "InternetBasedLearningId": {
                  "type": "integer",
                  "description": "NZ only. See combo InternetBasedLearnings",
                  "format": "int32"
               },
               "MainSubject1Id": {
                  "type": "integer",
                  "description": "NZ only. See combo MainSubjects",
                  "format": "int32"
               },
               "MainSubject2Id": {
                  "type": "integer",
                  "description": "NZ only. See combo MainSubjects",
                  "format": "int32"
               },
               "MainSubject3Id": {
                  "type": "integer",
                  "description": "NZ only. See combo MainSubjects",
                  "format": "int32"
               },
               "FundSourceId": {
                  "type": "integer",
                  "description": "NZ only. See combo FundSources",
                  "format": "int32"
               },
               "FeeAssessmentCategoryId": {
                  "type": "integer",
                  "description": "NZ only. See combo FeeAssessmentCategories",
                  "format": "int32"
               },
               "MuralAttendanceId": {
                  "type": "integer",
                  "description": "NZ only. See combo MuralAttendances",
                  "format": "int32"
               },
               "DeliveryModeWa1Id": {
                  "type": "integer",
                  "description": "AU only. See combo DeliveryModesWa",
                  "format": "int32"
               },
               "DeliveryModeWa2Id": {
                  "type": "integer",
                  "description": "AU only. See combo DeliveryModesWa",
                  "format": "int32"
               },
               "DeliveryModeWa3Id": {
                  "type": "integer",
                  "description": "AU only. See combo DeliveryModesWa",
                  "format": "int32"
               },
               "DeliveryOptionIds": {
                  "type": "array",
                  "items": {
                     "type": "integer",
                     "format": "int32"
                  },
                  "description": "AU only. See combo DeliveryOptions"
               },
               "EmployerInvoicedFlag": {
                  "type": "string",
                  "description": "AU only. To indicate if the employer invoiced flag is given or not",
                  "format": "Y or N"
               },
               "FundingRemovedFlag": {
                  "type": "string",
                  "description": "AU only. To indicate if the funding removed flag is given or not",
                  "format": "Y or N"
               },
               "OverseasStudentFee": {
                  "type": "number",
                  "description": "AU FH only. The fees charged for overseas students.",
                  "format": "double"
               },
               "DomesticStudentFee": {
                  "type": "number",
                  "description": "AU FH only. The fees charged for domestic students.",
                  "format": "double"
               },
               "FeeTypeIndicatorId": {
                  "type": "integer",
                  "description": "AU FH only. See combo FeeTypeIndicators",
                  "format": "int32"
               },
               "OffshoreDeliveryIndicatorId": {
                  "type": "integer",
                  "description": "AU FH only. See combo OffshoreDeliveryIndicators",
                  "format": "int32"
               },
               "OffshoreDeliveryModeId": {
                  "type": "integer",
                  "description": "AU FH only. See combo OffshoreDeliveryModes",
                  "format": "int32"
               },
               "CampusOperationTypeId": {
                  "type": "integer",
                  "description": "AU FH only. See combo CampusOperationTypes",
                  "format": "int32"
               },
               "CommencingStudentIdentifierId": {
                  "type": "integer",
                  "description": "AU FH only. See combo CommencingStudentIdentifiers",
                  "format": "int32"
               },
               "EstimatedEftsl": {
                  "type": "string",
                  "description": "AU FH only. The estimated yearly EFTSL",
                  "format": "11"
               },
               "TrainerId": {
                  "type": "integer",
                  "description": "See entity Trainers",
                  "format": "int32"
               },
               "AssessorId": {
                  "type": "integer",
                  "description": "See entity Assessors",
                  "format": "int32"
               },
               "AssessmentMethodId": {
                  "type": "integer",
                  "description": "See combo AssessmentMethods",
                  "format": "int32"
               },
               "VenueId": {
                  "type": "integer",
                  "description": "See combo Venues",
                  "format": "int32"
               },
               "WhatToBring": {
                  "type": "string",
                  "description": "A description on what the learner is required to bring along to attend the course",
                  "format": "500"
               },
               "WhereToGo": {
                  "type": "string",
                  "description": "A description on where the course will be held",
                  "format": "500"
               },
               "UnitHourlyFee": {
                  "type": "number",
                  "description": "AU only. The fees charged for the unit per hour",
                  "format": "double"
               },
               "CourseFees": {
                  "type": "number",
                  "description": "The total course fees",
                  "format": "double"
               },
               "CourseConcessionFees": {
                  "type": "number",
                  "description": "The course fees after concession",
                  "format": "double"
               },
               "EcafCourseLoanCap": {
                  "type": "integer",
                  "description": "AU only. The eCAF Course Loan Cap",
                  "format": "int32"
               },
               "IsGstFreeFlag": {
                  "type": "boolean",
                  "description": "To indicate if the course fees specified is including GST or not"
               },
               "Deposit": {
                  "type": "number",
                  "description": "The deposit the learner needs to pay to attend the course",
                  "format": "double"
               },
               "FeesCode": {
                  "type": "string",
                  "description": "AU and NZ only."
               },
               "QtacFlag": {
                  "type": "boolean",
                  "description": "AU only. To indicate if course offer is affiliated with QTAC or not. QLD specific"
               },
               "DepartmentCodeId": {
                  "type": "integer",
                  "description": "AU only. See combo DepartmentCodes",
                  "format": "int32"
               },
               "Approve1Flag": {
                  "type": "boolean",
                  "description": "AU and NZ."
               },
               "Approve2Flag": {
                  "type": "boolean",
                  "description": "AU and NZ."
               },
               "Approve3Flag": {
                  "type": "boolean",
                  "description": "AU and NZ."
               },
               "Stage": {
                  "type": "string",
                  "description": "AU and NZ. Stage the course offer is delivered",
                  "format": "5"
               },
               "StudyCode": {
                  "type": "integer",
                  "description": "AU and NZ. Study Code of the course offer",
                  "format": "int32"
               },
               "NumberOfForms": {
                  "type": "integer",
                  "description": "AU and NZ only. The number of forms that are required",
                  "format": "int32"
               },
               "FundingCode": {
                  "type": "string",
                  "description": "AU and NZ only. Funding Code of the course offer",
                  "format": "50"
               },
               "ProgramId": {
                  "type": "integer",
                  "description": "AU and NZ only. See combos Programs",
                  "format": "int32"
               },
               "CricosCode": {
                  "type": "string",
                  "description": "AU and NZ only. Specify the applicable CRICOS number",
                  "format": "10"
               },
               "GeneralNotes": {
                  "type": "string",
                  "description": "Any further notes specific to the course offer",
                  "format": "4000"
               },
               "HdrEngagementCode": {
                  "type": "string",
                  "description": "AU FH only. Higher Degree Research Engagement Code",
                  "format": "10"
               },
               "SpecialisationName": {
                  "type": "string",
                  "description": "Specialisation name"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the course offer was last modified",
                  "format": "date-time"
               }
            }
         },
         "CourseOfferRelationships": {
            "type": "object",
            "properties": {
               "Course": {
                  "$ref": "#/components/schemas/CourseBasic"
               },
               "Coordinator": {
                  "$ref": "#/components/schemas/Coordinator"
               },
               "CourseOfferStatus": {
                  "$ref": "#/components/schemas/CourseOfferStatus"
               },
               "CourseOfferType": {
                  "$ref": "#/components/schemas/CourseOfferType"
               },
               "DeliveryLanguage": {
                  "$ref": "#/components/schemas/Language"
               },
               "DeliveryWorkplace": {
                  "$ref": "#/components/schemas/WorkplaceBasic"
               },
               "ProgramStatus": {
                  "$ref": "#/components/schemas/ProgramStatus"
               },
               "ContractType": {
                  "$ref": "#/components/schemas/ContractType"
               },
               "CommencingCourse": {
                  "$ref": "#/components/schemas/CommencingCourse"
               },
               "AvStudyReason": {
                  "$ref": "#/components/schemas/AvStudyReason"
               },
               "StudyMode": {
                  "$ref": "#/components/schemas/StudyMode"
               },
               "Location": {
                  "$ref": "#/components/schemas/LocationBasic"
               },
               "DeliveryMode": {
                  "$ref": "#/components/schemas/DeliveryMode"
               },
               "DeliveryModeAv8": {
                  "$ref": "#/components/schemas/DeliveryModeAv8"
               },
               "DeliveryOptions": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/DeliveryOption"
                  }
               },
               "PredominantDeliveryMode": {
                  "$ref": "#/components/schemas/PredominantDeliveryMode"
               },
               "FundSourceNational": {
                  "$ref": "#/components/schemas/FundSourceNational"
               },
               "FundSourceState": {
                  "$ref": "#/components/schemas/FundSourceState"
               },
               "Contract": {
                  "$ref": "#/components/schemas/Contract"
               },
               "FeeExemption": {
                  "$ref": "#/components/schemas/FeeExemption"
               },
               "FeeExemptionWaiver": {
                  "$ref": "#/components/schemas/FeeExemptionWaiver"
               },
               "InternetBasedLearning": {
                  "$ref": "#/components/schemas/InternetBasedLearning"
               },
               "MainSubject1": {
                  "$ref": "#/components/schemas/MainSubject"
               },
               "MainSubject2": {
                  "$ref": "#/components/schemas/MainSubject"
               },
               "MainSubject3": {
                  "$ref": "#/components/schemas/MainSubject"
               },
               "FundSource": {
                  "$ref": "#/components/schemas/FundSource"
               },
               "FeeAssessmentCategory": {
                  "$ref": "#/components/schemas/FeeAssessmentCategory"
               },
               "MuralAttendance": {
                  "$ref": "#/components/schemas/MuralAttendance"
               },
               "DeliveryModeWa1": {
                  "$ref": "#/components/schemas/DeliveryModeWa"
               },
               "DeliveryModeWa2": {
                  "$ref": "#/components/schemas/DeliveryModeWa"
               },
               "DeliveryModeWa3": {
                  "$ref": "#/components/schemas/DeliveryModeWa"
               },
               "FeeTypeIndicator": {
                  "$ref": "#/components/schemas/FeeTypeIndicator"
               },
               "OffshoreDeliveryIndicator": {
                  "$ref": "#/components/schemas/OffshoreDeliveryIndicator"
               },
               "OffshoreDeliveryMode": {
                  "$ref": "#/components/schemas/OffshoreDeliveryMode"
               },
               "CampusOperationType": {
                  "$ref": "#/components/schemas/CampusOperationType"
               },
               "CommencingStudentIdentifier": {
                  "$ref": "#/components/schemas/CommencingStudentIdentifier"
               },
               "Trainer": {
                  "$ref": "#/components/schemas/Trainer"
               },
               "Assessor": {
                  "$ref": "#/components/schemas/Assessor"
               },
               "AssessmentMethod": {
                  "$ref": "#/components/schemas/AssessmentMethod"
               },
               "Venue": {
                  "$ref": "#/components/schemas/VenueBasic"
               },
               "DurationType": {
                  "$ref": "#/components/schemas/DurationType"
               },
               "DepartmentCode": {
                  "$ref": "#/components/schemas/DepartmentCode"
               },
               "Program": {
                  "$ref": "#/components/schemas/Program"
               }
            }
         },
         "CourseOfferBasic": {
            "type": "object",
            "properties": {
               "CourseOfferId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "CourseId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               },
               "CourseOfferStartDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "CourseOfferEndDate": {
                  "type": "string",
                  "format": "date-time"
               }
            }
         },
         "CourseOfferBasicRelationships": {
            "type": "object",
            "properties": {
               "CourseOfferStatus": {
                  "$ref": "#/components/schemas/CourseOfferStatus"
               }
            }
         },
         "Credential": {
            "type": "object",
            "properties": {
               "CredentialId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CourseEnrolmentId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CredentialStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "IssuingOfficerId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CredentialNumber": {
                  "type": "string"
               },
               "CredentialDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "qReportNumber": {
                  "type": "string"
               },
               "qReportName": {
                  "type": "string"
               },
               "uReportTemplateId": {
                  "type": "integer",
                  "format": "int32"
               },
               "StatusChangeDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "CredentialStatusNotes": {
                  "type": "string"
               },
               "ExportDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "ExportNumber": {
                  "type": "string"
               },
               "DocumentId": {
                  "type": "integer",
                  "format": "int32"
               }
            }
         },
         "CredentialRelationships": {
            "type": "object",
            "properties": {
               "CourseEnrolment": {
                  "$ref": "#/components/schemas/CourseEnrolmentBasic"
               },
               "Learner": {
                  "$ref": "#/components/schemas/LearnerBasic"
               },
               "CourseOffer": {
                  "$ref": "#/components/schemas/CourseOfferBasic"
               },
               "CredentialStatus": {
                  "$ref": "#/components/schemas/CredentialStatus"
               },
               "Document": {
                  "$ref": "#/components/schemas/Document"
               }
            }
         },
         "ElementEnrolment": {
            "type": "object",
            "properties": {
               "ElementEnrolmentId": {
                  "type": "integer",
                  "description": "Primary Id for ElementEnrolment that is auto generated",
                  "format": "int32"
               },
               "ElementId": {
                  "type": "integer",
                  "description": "See entity Elements",
                  "format": "int32"
               },
               "UnitEnrolmentId": {
                  "type": "integer",
                  "description": "See entity UnitEnrolments",
                  "format": "int32"
               },
               "TrainerId": {
                  "type": "integer",
                  "description": "See entity Trainers",
                  "format": "int32"
               },
               "ElementEnrolmentStatusId": {
                  "type": "integer",
                  "description": "Element enrolment status",
                  "format": "int32"
               },
               "DateAssessed": {
                  "type": "string",
                  "description": "Date ElementEnrolment is Assessed",
                  "format": "date-time"
               },
               "Result": {
                  "type": "string",
                  "description": "Result of ElementEnrolment"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the ElementEnrolment was last modified",
                  "format": "date-time"
               }
            }
         },
         "ElementEnrolmentRelationships": {
            "type": "object",
            "properties": {
               "ElementEnrolmentStatus": {
                  "$ref": "#/components/schemas/ElementEnrolmentStatus"
               },
               "UnitEnrolment": {
                  "$ref": "#/components/schemas/UnitEnrolmentShort"
               },
               "Element": {
                  "$ref": "#/components/schemas/ElementBasic"
               },
               "Trainer": {
                  "$ref": "#/components/schemas/Trainer"
               }
            }
         },
         "Entity": {
            "type": "object",
            "properties": {
               "EntityId": {
                  "type": "integer",
                  "description": "Primary Id for Entity that is auto generated",
                  "format": "int32"
               },
               "EntityName": {
                  "type": "string",
                  "description": "Name of Entity to be used as input in other endpoints"
               },
               "DisplayName": {
                  "type": "string",
                  "description": "UI friendly name of the Entity"
               }
            }
         },
         "EntityRelationships": {
            "type": "object"
         },
         "FilenoteRelationships": {
            "type": "object",
            "properties": {
               "CreatedByUser": {
                  "$ref": "#/components/schemas/CreatedByUser"
               },
               "LastModifiedUser": {
                  "$ref": "#/components/schemas/LastModifiedUser"
               }
            }
         },
         "AssignedToFilenote": {
            "type": "object",
            "properties": {
               "AssignedId": {
                  "type": "integer",
                  "description": "Id for assigned relationship. This is auto generated.",
                  "format": "int32"
               },
               "EntityName": {
                  "type": "string",
                  "description": "See entity Entities. Only 'Staff' value allowed. Required if AssignedTo is not null."
               },
               "RecordId": {
                  "type": "integer",
                  "description": "Id of Staff record assigned to Filenote. Required if AssignedTo is not null.",
                  "format": "int32"
               },
               "RecordInfo": {
                  "$ref": "#/components/schemas/RecordInfo"
               }
            }
         },
         "LearnerVisibilityFilenote": {
            "type": "object",
            "properties": {
               "Enabled": {
                  "type": "boolean",
                  "description": "Allows Learners to see Filenote in Learner App. Available for EntityName 'Learner', 'CourseEnrolment' or 'UnitEnrolment'."
               },
               "StartDate": {
                  "type": "string",
                  "description": "Filenote visibile from date. Leave empty for no restriction.",
                  "format": "date-time"
               },
               "EndDate": {
                  "type": "string",
                  "description": "Filenote visibile to date. Leave empty for no restriction.",
                  "format": "date-time"
               }
            }
         },
         "TrainerVisibilityFilenote": {
            "type": "object",
            "properties": {
               "Enabled": {
                  "type": "boolean",
                  "description": "Allows Trainers to see Filenote in Trainer App. Available for EntityName 'Learner', 'CourseEnrolment' or 'UnitEnrolment'."
               }
            }
         },
         "OnlineEnrolmentVisibilityFilenote": {
            "type": "object",
            "properties": {
               "Enabled": {
                  "type": "boolean",
                  "description": "Only available in EntityName Organisation. Not available via Public API."
               },
               "StartDate": {
                  "type": "string",
                  "description": "Filenote visibile from date. Leave empty for no restriction.",
                  "format": "date-time"
               },
               "EndDate": {
                  "type": "string",
                  "description": "Filenote visibile to date. Leave empty for no restriction.",
                  "format": "date-time"
               }
            }
         },
         "Document": {
            "type": "object",
            "properties": {
               "DocumentId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Filepath": {
                  "type": "string"
               },
               "Filename": {
                  "type": "string"
               },
               "Size": {
                  "type": "integer",
                  "format": "int32"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the document was last modified",
                  "format": "date-time"
               },
               "LastModifiedUserId": {
                  "type": "integer",
                  "description": "The UserId of the user who last modified the document",
                  "format": "int32"
               }
            }
         },
         "InvoiceRelationships": {
            "type": "object"
         },
         "LineItem": {
            "type": "object",
            "properties": {
               "ItemCode": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               },
               "Quantity": {
                  "type": "integer",
                  "format": "int32"
               },
               "UnitAmount": {
                  "type": "number",
                  "format": "double"
               },
               "AccountCode": {
                  "type": "string"
               },
               "TaxType": {
                  "type": "string"
               },
               "TaxAmount": {
                  "type": "number",
                  "format": "double"
               },
               "LineAmount": {
                  "type": "number",
                  "format": "double"
               }
            }
         },
         "Payment": {
            "type": "object",
            "properties": {
               "Type": {
                  "type": "string"
               },
               "Date": {
                  "type": "string",
                  "format": "date-time"
               },
               "Amount": {
                  "type": "number",
                  "format": "double"
               }
            }
         },
         "LanguageLiteracyNumeracyRelationships": {
            "type": "object",
            "properties": {
               "CourseEnrolment": {
                  "$ref": "#/components/schemas/CourseEnrolmentBasic"
               },
               "LlnBenefit": {
                  "$ref": "#/components/schemas/LlnBenefit"
               },
               "LlnLevel": {
                  "$ref": "#/components/schemas/LlnLevel"
               },
               "LlnPostAssessment": {
                  "$ref": "#/components/schemas/LlnPostAssess"
               },
               "LlnPreAssessment": {
                  "$ref": "#/components/schemas/LlnPreAssess"
               }
            }
         },
         "LearnerAuRelationships": {
            "type": "object",
            "properties": {
               "Gender": {
                  "$ref": "#/components/schemas/Gender"
               },
               "AgeCategory": {
                  "$ref": "#/components/schemas/AgeCategory"
               },
               "TargetGroup": {
                  "$ref": "#/components/schemas/TargetGroupClient"
               },
               "EmploymentStatus": {
                  "$ref": "#/components/schemas/EmploymentStatus"
               },
               "OccupationIdentifier": {
                  "$ref": "#/components/schemas/OccupationIdentifier"
               },
               "IndustryOfEmployment": {
                  "$ref": "#/components/schemas/IndustryOfEmployment"
               },
               "HighestSchoolLevelCompleted": {
                  "$ref": "#/components/schemas/HighestSchoolLevel"
               },
               "PrimaryLanguage": {
                  "$ref": "#/components/schemas/Language"
               },
               "SpokenEnglishProficiency": {
                  "$ref": "#/components/schemas/SpokenEnglishProficiency"
               },
               "IndigenousStatus": {
                  "$ref": "#/components/schemas/IndigenousStatus"
               },
               "PriorEducationFlag": {
                  "$ref": "#/components/schemas/PriorEducationFlag"
               },
               "PriorEducations": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/PriorEducation"
                  }
               },
               "PriorEducationTypes": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/PriorEducationType"
                  }
               },
               "DisabilityFlag": {
                  "$ref": "#/components/schemas/DisabilityFlag"
               },
               "Disabilities": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Disability"
                  }
               },
               "EnglishTestScoreType": {
                  "$ref": "#/components/schemas/EnglishTestScoreType"
               },
               "SurveyStatus": {
                  "$ref": "#/components/schemas/SurveyStatus"
               },
               "FhCitizenResident": {
                  "$ref": "#/components/schemas/FhCitizenResident"
               },
               "CitizenResidents": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/FhCitizenResident"
                  }
               },
               "FhHighestEducationLevel": {
                  "$ref": "#/components/schemas/FhHighestEducationLevel"
               },
               "FhIndigenousStatus": {
                  "$ref": "#/components/schemas/FhIndigenousStatus"
               },
               "FhParentEducationLevel1": {
                  "$ref": "#/components/schemas/FhParentEducationLevel"
               },
               "FhParentEducationLevel2": {
                  "$ref": "#/components/schemas/FhParentEducationLevel"
               },
               "FhAdditionalEntranceCriteria": {
                  "$ref": "#/components/schemas/FhAdditionalEntranceCriteria"
               },
               "FhBasisForAdmission": {
                  "$ref": "#/components/schemas/FhBasisForAdmission"
               },
               "VisaType": {
                  "$ref": "#/components/schemas/VisaType"
               },
               "Countries": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Country"
                  }
               },
               "States": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/State"
                  }
               },
               "NextOfKinRelationships": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/NextOfKinRelationship"
                  }
               },
               "VaccineStatus": {
                  "$ref": "#/components/schemas/VaccineStatus"
               }
            }
         },
         "LearnerAuDemographics": {
            "type": "object",
            "properties": {
               "EmploymentStatusId": {
                  "type": "integer",
                  "description": "See combo EmploymentStatuses",
                  "format": "int32"
               },
               "OccupationIdentifierId": {
                  "type": "integer",
                  "description": "See combo OccupationIdentifiers",
                  "format": "int32"
               },
               "IndustryOfEmploymentId": {
                  "type": "integer",
                  "description": "See combo IndustriesOfEmployment",
                  "format": "int32"
               },
               "IsStillAtSchool": {
                  "type": "string",
                  "description": "To indicate if the learner is at secondary school or not",
                  "format": "Y or N"
               },
               "HighestSchoolLevelCompletedId": {
                  "type": "integer",
                  "description": "See combo HighestSchoolLevelCompleted",
                  "format": "int32"
               },
               "HighestSchoolLevelCompletedYear": {
                  "type": "string",
                  "description": "The year the highest school level was completed",
                  "format": "Year value"
               },
               "CountryOfBirthId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               },
               "HasPriorEducationalAchievementId": {
                  "type": "integer",
                  "description": "See combo PriorEducationFlags",
                  "format": "int32"
               },
               "PriorEducationAchievements": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/LearnerAuDemographicsPriorEducationAchievement"
                  }
               },
               "PrimaryLanguageId": {
                  "type": "integer",
                  "description": "See combo Languages",
                  "format": "int32"
               },
               "SpokenEnglishProficiencyId": {
                  "type": "integer",
                  "description": "See combo SpokenEnglishProficiencies",
                  "format": "int32"
               },
               "EnglishTestScore": {
                  "$ref": "#/components/schemas/LearnerAuDemographicsEnglishTestScore"
               },
               "DisabilityFlagId": {
                  "type": "integer",
                  "description": "See combo DisabilityFlags",
                  "format": "int32"
               },
               "DisabilityIds": {
                  "type": "array",
                  "items": {
                     "type": "integer",
                     "format": "int32"
                  },
                  "description": "Obsolete. Use Disabilities instead"
               },
               "Disabilities": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/LearnerAuDemographicsDisability"
                  }
               },
               "DisabilityAdviceRequired": {
                  "type": "boolean",
                  "description": "To indicate if the learner opted for advice on support services, equipment and facilities"
               },
               "IndigenousStatusId": {
                  "type": "integer",
                  "description": "See combo FhIndigenousStatuses",
                  "format": "int32"
               },
               "FeeHelp": {
                  "$ref": "#/components/schemas/LearnerAuDemographicsFeeHelp"
               },
               "Citizenships": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/LearnerAuDemographicsCitizenship"
                  }
               }
            }
         },
         "LearnerAuInternational": {
            "type": "object",
            "properties": {
               "PassportNumber": {
                  "type": "string",
                  "description": "Passport number of the learner",
                  "format": "20"
               },
               "PassportExpiryDate": {
                  "type": "string",
                  "description": "Learner passport expiry date",
                  "format": "date-time"
               },
               "PassportCountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               },
               "VisaNumber": {
                  "type": "string",
                  "description": "Visa Number of the learner",
                  "format": "50"
               },
               "VisaTypeId": {
                  "type": "integer",
                  "description": "See combo VisaTypes",
                  "format": "int32"
               },
               "VisaExpiryDate": {
                  "type": "string",
                  "description": "Expiry Date of learner's visa",
                  "format": "date-time"
               },
               "NationalityId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               },
               "Address": {
                  "$ref": "#/components/schemas/LearnerAuInternationalAddress"
               },
               "PhoneHome": {
                  "type": "string",
                  "description": "International Home phone number",
                  "format": "20"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "International Work phone number",
                  "format": "20"
               }
            }
         },
         "LearnerAuNextOfKin": {
            "type": "object",
            "properties": {
               "LocalNextOfKin": {
                  "$ref": "#/components/schemas/LearnerAuNextOfKinLocalNextOfKin"
               },
               "InternationalNextOfKin": {
                  "$ref": "#/components/schemas/LearnerAuNextOfKinInternationalNextOfKin"
               }
            }
         },
         "LearnerAuLearnerAccess": {
            "type": "object",
            "properties": {
               "Username": {
                  "type": "string",
                  "description": "Username to log into Learner App",
                  "format": "150"
               },
               "AccessEnabledLearnerApp": {
                  "type": "boolean",
                  "description": "To indicate if access to Learner App is given or not"
               },
               "AccessEnabledElearning": {
                  "type": "boolean",
                  "description": "To indicate if access to eLearning is given or not"
               },
               "AccessEnabledKliq": {
                  "type": "boolean",
                  "description": "To indicate if access to Kliq is given or not"
               },
               "AccessExpiryDate": {
                  "type": "string",
                  "description": "Date when Learner App and eLearning access expires",
                  "format": "date-time"
               },
               "PasswordForceChange": {
                  "type": "boolean",
                  "description": "Forces a password change prompt upon learner login when value is set to 1"
               }
            }
         },
         "LearnerAuPersonalRelationships": {
            "type": "object",
            "properties": {
               "Gender": {
                  "$ref": "#/components/schemas/Gender"
               },
               "AgeCategory": {
                  "$ref": "#/components/schemas/AgeCategory"
               },
               "TargetGroup": {
                  "$ref": "#/components/schemas/TargetGroupClient"
               },
               "VaccineStatus": {
                  "$ref": "#/components/schemas/VaccineStatus"
               },
               "Countries": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Country"
                  }
               },
               "States": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/State"
                  }
               }
            }
         },
         "LearnerAuPersonalPhoneNumbers": {
            "type": "object",
            "properties": {
               "PhoneHome": {
                  "type": "string",
                  "description": "Home phone number of the learner",
                  "format": "15"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "Work phone number of the learner",
                  "format": "15"
               },
               "FaxHome": {
                  "type": "string",
                  "description": "Home fax number of the learner",
                  "format": "15"
               },
               "FaxWork": {
                  "type": "string",
                  "description": "Work fax number of the learner",
                  "format": "15"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Mobile number of the learner. Accepts numbers only. International format is preferable eg. +614xxxxxxxxx\".",
                  "format": "20"
               }
            }
         },
         "LearnerAuPersonalEmailAddresses": {
            "type": "object",
            "properties": {
               "Email": {
                  "type": "string",
                  "description": "Email address of the learner",
                  "format": "80"
               },
               "AlternativeEmail": {
                  "type": "string",
                  "description": "Alternative email address of the learner",
                  "format": "80"
               }
            }
         },
         "LearnerAuPersonalStreetAddress": {
            "type": "object",
            "properties": {
               "BuildingName": {
                  "type": "string",
                  "description": "Building name of learner's street address",
                  "format": "50"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit details of learner's street address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street number of learner's street address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street name of learner's street address",
                  "format": "70"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Additional address details of learner's street address",
                  "format": "50"
               },
               "SuburbTownCity": {
                  "type": "string",
                  "description": "Suburb of learner's street address",
                  "format": "50"
               },
               "StateId": {
                  "type": "integer",
                  "description": "See combo States",
                  "format": "int32"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's street address",
                  "format": "20"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               },
               "StreetAddress": {
                  "type": "string",
                  "description": "Read only. Address Line1 of learner's street address"
               }
            }
         },
         "LearnerAuPersonalPostalAddress": {
            "type": "object",
            "properties": {
               "BuildingName": {
                  "type": "string",
                  "description": "Building name of learner's postal address",
                  "format": "50"
               },
               "PoBox": {
                  "type": "string",
                  "description": "PO Box number of learner's postal address",
                  "format": "22"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit details of learner's postal address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street number of learner's postal address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street name of learner's postal address",
                  "format": "70"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Additional address details of learner's postal address",
                  "format": "50"
               },
               "SuburbTownCity": {
                  "type": "string",
                  "description": "Suburb of learner's postal address",
                  "format": "50"
               },
               "StateId": {
                  "type": "integer",
                  "description": "See combo States",
                  "format": "int32"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's postal address",
                  "format": "20"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               },
               "PostalAddress": {
                  "type": "string",
                  "description": "Read only. Address Line1 of learner's postal address"
               }
            }
         },
         "LearnerAuPersonalPermanentAddress": {
            "type": "object",
            "properties": {
               "BuildingName": {
                  "type": "string",
                  "description": "Building name of learner's permanent address",
                  "format": "50"
               },
               "PoBox": {
                  "type": "string",
                  "description": "PO Box number of learner's permanent address",
                  "format": "22"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit details of learner's permanent address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street number of learner's permanent address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street name of learner's permanent address",
                  "format": "70"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Additional address details of learner's permanent address",
                  "format": "50"
               },
               "SuburbTownCity": {
                  "type": "string",
                  "description": "Suburb of learner's permanent address",
                  "format": "50"
               },
               "StateId": {
                  "type": "integer",
                  "description": "See combo States",
                  "format": "int32"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's permanent address",
                  "format": "20"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               },
               "PermanentAddress": {
                  "type": "string",
                  "description": "Read only. Address Line1 of learner's permanent address"
               }
            }
         },
         "LearnerNzRelationships": {
            "type": "object",
            "properties": {
               "Gender": {
                  "$ref": "#/components/schemas/NzGender"
               },
               "TargetGroup": {
                  "$ref": "#/components/schemas/TargetGroupClient"
               },
               "FeesFreeEligile": {
                  "$ref": "#/components/schemas/FeesFreeEligible"
               },
               "EmploymentStatus": {
                  "$ref": "#/components/schemas/EmploymentStatus"
               },
               "LastSchoolAttended": {
                  "$ref": "#/components/schemas/NzLastSchoolAttended"
               },
               "SecondaryQualification": {
                  "$ref": "#/components/schemas/NzSecondaryQualification"
               },
               "MainActivityPriorToStudy": {
                  "$ref": "#/components/schemas/NzMainActivityPriorToStudy"
               },
               "PriorEducationFlag": {
                  "$ref": "#/components/schemas/PriorEducationFlag"
               },
               "PriorEducations": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/PriorEducation"
                  }
               },
               "PrimaryLanguage": {
                  "$ref": "#/components/schemas/Language"
               },
               "SpokenEnglishProficiency": {
                  "$ref": "#/components/schemas/SpokenEnglishProficiency"
               },
               "EnglishTestScoreType": {
                  "$ref": "#/components/schemas/EnglishTestScoreType"
               },
               "ResidentialStatus": {
                  "$ref": "#/components/schemas/NzResidentialStatus"
               },
               "IwiAffiliation1": {
                  "$ref": "#/components/schemas/NzIwiAffiliation"
               },
               "IwiAffiliation2": {
                  "$ref": "#/components/schemas/NzIwiAffiliation"
               },
               "IwiAffiliation3": {
                  "$ref": "#/components/schemas/NzIwiAffiliation"
               },
               "Ethnicity1": {
                  "$ref": "#/components/schemas/NzEthnicity"
               },
               "Ethnicity2": {
                  "$ref": "#/components/schemas/NzEthnicity"
               },
               "Ethnicity3": {
                  "$ref": "#/components/schemas/NzEthnicity"
               },
               "DisabilityFlag": {
                  "$ref": "#/components/schemas/NzDisabilityFlag"
               },
               "DisabilityAccessed": {
                  "$ref": "#/components/schemas/NzDisabilityAccessedFlag"
               },
               "Disabilities": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Disability"
                  }
               },
               "LastSchoolAttendedCountry": {
                  "$ref": "#/components/schemas/NzStandardCodeCountry"
               },
               "VisaType": {
                  "$ref": "#/components/schemas/NzVisaType"
               },
               "Countries": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/NzCountry"
                  }
               },
               "NextOfKinRelationships": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/NextOfKinRelationship"
                  }
               },
               "VaccineStatus": {
                  "$ref": "#/components/schemas/VaccineStatus"
               }
            }
         },
         "LearnerNzDemographics": {
            "type": "object",
            "properties": {
               "EmploymentStatusId": {
                  "type": "integer",
                  "description": "See combo EmploymentStatuses",
                  "format": "int32"
               },
               "IsStillAtSchool": {
                  "type": "string",
                  "description": "To indicate if the learner is at secondary school or not",
                  "format": "Y or N"
               },
               "LastSchoolAttendedId": {
                  "type": "integer",
                  "description": "See combo NzLastSchoolsAttended",
                  "format": "int32"
               },
               "LastYearAtSecondarySchool": {
                  "type": "string",
                  "description": "Year the learner last attended secondary school",
                  "format": "Year value"
               },
               "LastSchoolAttendedCountryId": {
                  "type": "integer",
                  "description": "NZSC Country",
                  "format": "int32"
               },
               "SecondaryQualificationId": {
                  "type": "integer",
                  "description": "See combo NzSecondaryQualifications",
                  "format": "int32"
               },
               "FirstYearOfFormalEducation": {
                  "type": "string",
                  "description": "Year of the learner's first formal education",
                  "format": "Year value"
               },
               "MainActivityPriorToStudyId": {
                  "type": "integer",
                  "description": "See combo NzMainActivitiesPriorToStudy",
                  "format": "int32"
               },
               "HasPriorEducationalAchievementId": {
                  "type": "integer",
                  "description": "See combo PriorEducationFlags",
                  "format": "int32"
               },
               "PriorEducationAchievements": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/LearnerNzDemographicsPriorEducationAchievement"
                  }
               },
               "PrimaryLanguageId": {
                  "type": "integer",
                  "description": "See combo Languages",
                  "format": "int32"
               },
               "SpokenEnglishProficiencyId": {
                  "type": "integer",
                  "description": "See combo SpokenEnglishProficiencies",
                  "format": "int32"
               },
               "EnglishTestScore": {
                  "$ref": "#/components/schemas/LearnerNzDemographicsEnglishTestScore"
               },
               "CitizenshipCountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "ResidentialStatusId": {
                  "type": "integer",
                  "description": "See combo NzResidentialStatuses",
                  "format": "int32"
               },
               "AustralianResidentialStatus": {
                  "type": "string",
                  "description": "To indicate if the learner has a residential status or not",
                  "format": "Y or N"
               },
               "IwiAffiliation1Id": {
                  "type": "integer",
                  "description": "See combo NzIwiAffiliations",
                  "format": "int32"
               },
               "IwiAffiliation2Id": {
                  "type": "integer",
                  "description": "See combo NzIwiAffiliations",
                  "format": "int32"
               },
               "IwiAffiliation3Id": {
                  "type": "integer",
                  "description": "See combo NzIwiAffiliations",
                  "format": "int32"
               },
               "Ethnicity1Id": {
                  "type": "integer",
                  "description": "See combo NzEthnicities",
                  "format": "int32"
               },
               "Ethnicity2Id": {
                  "type": "integer",
                  "description": "See combo NzEthnicities",
                  "format": "int32"
               },
               "Ethnicity3Id": {
                  "type": "integer",
                  "description": "See combo NzEthnicities",
                  "format": "int32"
               },
               "DisabilityFlagId": {
                  "type": "integer",
                  "description": "See combo NzDisabilityFlags",
                  "format": "int32"
               },
               "DisabilityIds": {
                  "type": "array",
                  "items": {
                     "type": "integer",
                     "format": "int32"
                  },
                  "description": "Obsolete. Use Disabilities instead"
               },
               "Disabilities": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/LearnerNzDemographicsDisability"
                  },
                  "description": "See combo Disabilities"
               },
               "DisabilityAccessedId": {
                  "type": "integer",
                  "description": "See combo NzDisabilityAccessed",
                  "format": "int32"
               }
            }
         },
         "LearnerNzInternational": {
            "type": "object",
            "properties": {
               "PassportNumber": {
                  "type": "string",
                  "description": "Passport number of the learner",
                  "format": "20"
               },
               "PassportExpiryDate": {
                  "type": "string",
                  "description": "Learner passport expiry date",
                  "format": "date-time"
               },
               "PassportCountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "VisaNumber": {
                  "type": "string",
                  "description": "Visa Number of the learner",
                  "format": "50"
               },
               "VisaTypeId": {
                  "type": "integer",
                  "description": "See combo NzVisaTypes",
                  "format": "int32"
               },
               "VisaExpiryDate": {
                  "type": "string",
                  "description": "Expiry Date of learner's visa",
                  "format": "date-time"
               },
               "NationalityId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "Address": {
                  "$ref": "#/components/schemas/LearnerNzInternationalAddress"
               },
               "PhoneHome": {
                  "type": "string",
                  "description": "International Home phone number",
                  "format": "20"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "International Work phone number",
                  "format": "20"
               }
            }
         },
         "LearnerNzNextOfKin": {
            "type": "object",
            "properties": {
               "LocalNextOfKin": {
                  "$ref": "#/components/schemas/LearnerNzNextOfKinLocalNextOfKin"
               },
               "InternationalNextOfKin": {
                  "$ref": "#/components/schemas/LearnerNzNextOfKinInternationalNextOfKin"
               }
            }
         },
         "LearnerNzLearnerAccess": {
            "type": "object",
            "properties": {
               "Username": {
                  "type": "string",
                  "description": "Username to log into Learner App",
                  "format": "150"
               },
               "AccessEnabledLearnerApp": {
                  "type": "boolean",
                  "description": "To indicate if access to Learner App is given or not"
               },
               "AccessEnabledElearning": {
                  "type": "boolean",
                  "description": "To indicate if access to eLearning is given or not"
               },
               "AccessEnabledKliq": {
                  "type": "boolean",
                  "description": "To indicate if access to Kliq is given or not"
               },
               "AccessExpiryDate": {
                  "type": "string",
                  "description": "Date when Learner App and eLearning access expires",
                  "format": "date-time"
               },
               "PasswordForceChange": {
                  "type": "boolean",
                  "description": "Forces a password change prompt upon learner login when value is set to 1"
               }
            }
         },
         "LearnerNzPersonalPhoneNumbers": {
            "type": "object",
            "properties": {
               "PhoneHome": {
                  "type": "string",
                  "description": "Home phone number of the learner",
                  "format": "15"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "Work phone number of the learner",
                  "format": "15"
               },
               "FaxHome": {
                  "type": "string",
                  "description": "Home fax number of the learner",
                  "format": "15"
               },
               "FaxWork": {
                  "type": "string",
                  "description": "Work fax number of the learner",
                  "format": "15"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Mobile number of the learner. Accepts numbers only. International format is preferable eg. +614xxxxxxxxx\".",
                  "format": "20"
               }
            }
         },
         "LearnerNzPersonalEmailAddresses": {
            "type": "object",
            "properties": {
               "Email": {
                  "type": "string",
                  "description": "Email address of the learner",
                  "format": "80"
               },
               "AlternativeEmail": {
                  "type": "string",
                  "description": "Alternative email address of the learner",
                  "format": "80"
               }
            }
         },
         "LearnerNzPersonalStreetAddress": {
            "type": "object",
            "properties": {
               "BuildingName": {
                  "type": "string",
                  "description": "Building name of learner's street address",
                  "format": "50"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit details of learner's street address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street number of learner's street address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street name of learner's street address",
                  "format": "70"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Suburb/Town of learner's street address",
                  "format": "50"
               },
               "SuburbTownCity": {
                  "type": "string",
                  "description": "City/Region of learner's street address",
                  "format": "50"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's street address",
                  "format": "20"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "StreetAddress": {
                  "type": "string",
                  "description": "Read only. Address Line1 of learner's street address"
               }
            }
         },
         "LearnerNzPersonalPostalAddress": {
            "type": "object",
            "properties": {
               "BuildingName": {
                  "type": "string",
                  "description": "Building name of learner's postal address",
                  "format": "50"
               },
               "PoBox": {
                  "type": "string",
                  "description": "PO Box number of learner's postal address",
                  "format": "22"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit details of learner's postal address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street number of learner's postal address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street name of learner's postal address",
                  "format": "70"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Suburb/Town of learner's postal address",
                  "format": "50"
               },
               "SuburbTownCity": {
                  "type": "string",
                  "description": "City/Region of learner's postal address",
                  "format": "50"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's postal address",
                  "format": "20"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "PostalAddress": {
                  "type": "string",
                  "description": "Read only. Address Line1 of learner's postal address"
               }
            }
         },
         "LearnerNzPersonalPermanentAddress": {
            "type": "object",
            "properties": {
               "BuildingName": {
                  "type": "string",
                  "description": "Building name of learner's permanent address",
                  "format": "50"
               },
               "PoBox": {
                  "type": "string",
                  "description": "PO Box number of learner's permanent address",
                  "format": "22"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit details of learner's permanent address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street number of learner's permanent address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street name of learner's permanent address",
                  "format": "70"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Suburb/Town of learner's permanent address",
                  "format": "50"
               },
               "SuburbTownCity": {
                  "type": "string",
                  "description": "City/Region of learner's permanent address",
                  "format": "50"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's permanent address",
                  "format": "20"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "PermanentAddress": {
                  "type": "string",
                  "description": "Read only. Address Line1 of learner's permanent address"
               }
            }
         },
         "LearnerNzPersonalRelationships": {
            "type": "object",
            "properties": {
               "Gender": {
                  "$ref": "#/components/schemas/NzGender"
               },
               "TargetGroup": {
                  "$ref": "#/components/schemas/TargetGroupClient"
               },
               "VaccineStatus": {
                  "$ref": "#/components/schemas/VaccineStatus"
               },
               "Countries": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/NzCountry"
                  }
               }
            }
         },
         "LearnerSaRelationships": {
            "type": "object",
            "properties": {
               "Gender": {
                  "$ref": "#/components/schemas/Gender"
               },
               "TargetGroup": {
                  "$ref": "#/components/schemas/TargetGroupClient"
               },
               "SpokenEnglishProficiency": {
                  "$ref": "#/components/schemas/SpokenEnglishProficiency"
               },
               "EnglishTestScoreType": {
                  "$ref": "#/components/schemas/EnglishTestScoreType"
               },
               "HomeLanguage": {
                  "$ref": "#/components/schemas/SaLanguage"
               },
               "AlternativeIdentifierType": {
                  "$ref": "#/components/schemas/SaAlternativeIdentifierType"
               },
               "PreviousAlternativeIdentifierType": {
                  "$ref": "#/components/schemas/SaAlternativeIdentifierType"
               },
               "SeeingHealthRating": {
                  "$ref": "#/components/schemas/SaHealthRating"
               },
               "HearingHealthRating": {
                  "$ref": "#/components/schemas/SaHealthRating"
               },
               "CommunicatingHealthRating": {
                  "$ref": "#/components/schemas/SaHealthRating"
               },
               "WalkingHealthRating": {
                  "$ref": "#/components/schemas/SaHealthRating"
               },
               "RememberingHealthRating": {
                  "$ref": "#/components/schemas/SaHealthRating"
               },
               "SelfcareHealthRating": {
                  "$ref": "#/components/schemas/SaHealthRating"
               },
               "Equity": {
                  "$ref": "#/components/schemas/SaEquity"
               },
               "Nationality": {
                  "$ref": "#/components/schemas/SaNationality"
               },
               "CitizenResidentStatus": {
                  "$ref": "#/components/schemas/SaCitizenResidentStatus"
               },
               "Province": {
                  "$ref": "#/components/schemas/SaProvince"
               },
               "SocioeconomicStatus": {
                  "$ref": "#/components/schemas/SaSocioeconomicStatus"
               },
               "Visa": {
                  "$ref": "#/components/schemas/Visa"
               },
               "VisaType": {
                  "$ref": "#/components/schemas/NzVisaType"
               },
               "Countries": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Country"
                  }
               },
               "NextOfKinRelationships": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/NextOfKinRelationship"
                  }
               },
               "VaccineStatus": {
                  "$ref": "#/components/schemas/VaccineStatus"
               }
            }
         },
         "LearnerSaDemographics": {
            "type": "object",
            "properties": {
               "HomeLanguageId": {
                  "type": "integer",
                  "description": "See combo SaLanguages",
                  "format": "int32"
               },
               "SpokenEnglishProficiencyId": {
                  "type": "integer",
                  "description": "See combo SpokenEnglishProficiencies",
                  "format": "int32"
               },
               "EnglishTestScore": {
                  "$ref": "#/components/schemas/LearnerSgDemographicsEnglishTestScore"
               },
               "DisabilityInfo": {
                  "$ref": "#/components/schemas/LearnerSaDemographicsDisabilityInfo"
               },
               "EquityId": {
                  "type": "integer",
                  "description": "See combo SaEquities",
                  "format": "int32"
               },
               "NationalityId": {
                  "type": "integer",
                  "description": "See combo SaNationalities",
                  "format": "int32"
               },
               "CitizenResidentStatusId": {
                  "type": "integer",
                  "description": "See combo SaCitizenResidentStatuses",
                  "format": "int32"
               },
               "ProvinceId": {
                  "type": "integer",
                  "description": "See combo SaProvinces",
                  "format": "int32"
               },
               "SocioeconomicStatusId": {
                  "type": "integer",
                  "description": "See combo SaSocioeconomicStatuses",
                  "format": "int32"
               }
            }
         },
         "LearnerSaInternational": {
            "type": "object",
            "properties": {
               "PassportNumber": {
                  "type": "string",
                  "description": "Passport number of the learner",
                  "format": "20"
               },
               "PassportExpiryDate": {
                  "type": "string",
                  "description": "Learner passport expiry date",
                  "format": "date-time"
               },
               "PassportCountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               },
               "VisaNumber": {
                  "type": "string",
                  "description": "Visa Number of the learner",
                  "format": "50"
               },
               "VisaId": {
                  "type": "integer",
                  "description": "See combo Visas",
                  "format": "int32"
               },
               "VisaTypeId": {
                  "type": "integer",
                  "description": "See combo NzVisaTypes",
                  "format": "int32"
               },
               "VisaExpiryDate": {
                  "type": "string",
                  "description": "Expiry Date of learner's visa",
                  "format": "date-time"
               },
               "Address": {
                  "$ref": "#/components/schemas/LearnerSaInternationalAddress"
               },
               "PhoneHome": {
                  "type": "string",
                  "description": "International Home phone number",
                  "format": "20"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "International Work phone number",
                  "format": "20"
               }
            }
         },
         "LearnerSaNextOfKin": {
            "type": "object",
            "properties": {
               "LocalNextOfKin": {
                  "$ref": "#/components/schemas/LearnerSaNextOfKinLocalNextOfKin"
               },
               "InternationalNextOfKin": {
                  "$ref": "#/components/schemas/LearnerSaNextOfKinInternationalNextOfKin"
               }
            }
         },
         "LearnerSaLearnerAccess": {
            "type": "object",
            "properties": {
               "Username": {
                  "type": "string",
                  "description": "Username to log into Learner App",
                  "format": "150"
               },
               "AccessEnabledLearnerApp": {
                  "type": "boolean",
                  "description": "To indicate if access to Learner App is given or not"
               },
               "AccessEnabledElearning": {
                  "type": "boolean",
                  "description": "To indicate if access to eLearning is given or not"
               },
               "AccessEnabledKliq": {
                  "type": "boolean",
                  "description": "To indicate if access to Kliq is given or not"
               },
               "AccessExpiryDate": {
                  "type": "string",
                  "description": "Date when Learner App and eLearning access expires",
                  "format": "date-time"
               },
               "PasswordForceChange": {
                  "type": "boolean",
                  "description": "Forces a password change prompt upon learner login when value is set to 1"
               }
            }
         },
         "LearnerSaPersonalPreviousInfo": {
            "type": "object",
            "properties": {
               "PreviousLastName": {
                  "type": "string",
                  "description": "Previous last name of the learner",
                  "format": "45"
               },
               "PreviousAlternateIdentifier": {
                  "type": "string",
                  "description": "Previous alternative identifier of the learner",
                  "format": "20"
               },
               "PreviousAlternateIdentifierTypeId": {
                  "type": "integer",
                  "description": "See combo SaAlternateIdentifierTypes",
                  "format": "int32"
               },
               "PreviousProviderCode": {
                  "type": "string",
                  "description": "Previous provider code of the learner",
                  "format": "20"
               },
               "PreviousProviderEtqaIdentifier": {
                  "type": "string",
                  "description": "Previous provider ETQA of the learner",
                  "format": "10"
               }
            }
         },
         "LearnerSaPersonalPhoneNumbers": {
            "type": "object",
            "properties": {
               "PhoneHome": {
                  "type": "string",
                  "description": "Home phone number of the learner",
                  "format": "15"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "Work phone number of the learner",
                  "format": "15"
               },
               "FaxHome": {
                  "type": "string",
                  "description": "Home fax number of the learner",
                  "format": "15"
               },
               "FaxWork": {
                  "type": "string",
                  "description": "Work fax number of the learner",
                  "format": "15"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Mobile number of the learner. Accepts numbers only. International format is preferable eg. +614xxxxxxxxx\".",
                  "format": "20"
               }
            }
         },
         "LearnerSaPersonalEmailAddresses": {
            "type": "object",
            "properties": {
               "Email": {
                  "type": "string",
                  "description": "Email address of the learner",
                  "format": "80"
               },
               "AlternativeEmail": {
                  "type": "string",
                  "description": "Alternative email address of the learner",
                  "format": "80"
               }
            }
         },
         "LearnerSaPersonalStreetAddress": {
            "type": "object",
            "properties": {
               "BuildingName": {
                  "type": "string",
                  "description": "Building name of learner's street address",
                  "format": "50"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit details of learner's street address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street number of learner's street address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street name of learner's street address",
                  "format": "70"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Suburb/Town of learner's street address",
                  "format": "50"
               },
               "SuburbTownCity": {
                  "type": "string",
                  "description": "City/Region of learner's street address",
                  "format": "50"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's street address",
                  "format": "20"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               },
               "StreetAddress": {
                  "type": "string",
                  "description": "Read only. Address Line1 of learner's street address"
               }
            }
         },
         "LearnerSaPersonalPostalAddress": {
            "type": "object",
            "properties": {
               "BuildingName": {
                  "type": "string",
                  "description": "Building name of learner's postal address",
                  "format": "50"
               },
               "PoBox": {
                  "type": "string",
                  "description": "PO Box number of learner's postal address",
                  "format": "22"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit details of learner's postal address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street number of learner's postal address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street name of learner's postal address",
                  "format": "70"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Suburb/Town of learner's postal address",
                  "format": "50"
               },
               "SuburbTownCity": {
                  "type": "string",
                  "description": "City/Region of learner's postal address",
                  "format": "50"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's postal address",
                  "format": "20"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "PostalAddress": {
                  "type": "string",
                  "description": "Read only. Address Line1 of learner's postal address"
               }
            }
         },
         "LearnerSaPersonalPermanentAddress": {
            "type": "object",
            "properties": {
               "BuildingName": {
                  "type": "string",
                  "description": "Building name of learner's permanent address",
                  "format": "50"
               },
               "PoBox": {
                  "type": "string",
                  "description": "PO Box number of learner's permanent address",
                  "format": "22"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit details of learner's permanent address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street number of learner's permanent address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street name of learner's permanent address",
                  "format": "70"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Suburb/Town of learner's permanent address",
                  "format": "50"
               },
               "SuburbTownCity": {
                  "type": "string",
                  "description": "City/Region of learner's permanent address",
                  "format": "50"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's permanent address",
                  "format": "20"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               },
               "PermanentAddress": {
                  "type": "string",
                  "description": "Read only. Address Line1 of learner's permanent address"
               }
            }
         },
         "LearnerSaPersonalRelationships": {
            "type": "object",
            "properties": {
               "Gender": {
                  "$ref": "#/components/schemas/Gender"
               },
               "TargetGroup": {
                  "$ref": "#/components/schemas/TargetGroupClient"
               },
               "VaccineStatus": {
                  "$ref": "#/components/schemas/VaccineStatus"
               },
               "Countries": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Country"
                  }
               }
            }
         },
         "LearnerSgRelationships": {
            "type": "object",
            "properties": {
               "Gender": {
                  "$ref": "#/components/schemas/NzGender"
               },
               "TargetGroup": {
                  "$ref": "#/components/schemas/TargetGroupClient"
               },
               "NRICType": {
                  "$ref": "#/components/schemas/SgNricType"
               },
               "PriorEducation": {
                  "$ref": "#/components/schemas/SgPriorEducation"
               },
               "PriorEducationWsq": {
                  "$ref": "#/components/schemas/SgPriorEducationWsq"
               },
               "PrimaryLanguage": {
                  "$ref": "#/components/schemas/Language"
               },
               "SpokenEnglishProficiency": {
                  "$ref": "#/components/schemas/SpokenEnglishProficiency"
               },
               "EnglishTestScoreType": {
                  "$ref": "#/components/schemas/EnglishTestScoreType"
               },
               "Race": {
                  "$ref": "#/components/schemas/SgRace"
               },
               "Nationality": {
                  "$ref": "#/components/schemas/SgNationality"
               },
               "ResidentialStatus": {
                  "$ref": "#/components/schemas/SgCitizenPrStatus"
               },
               "IdentityDocumentType": {
                  "$ref": "#/components/schemas/SgIdentityDocumentType"
               },
               "VisaType": {
                  "$ref": "#/components/schemas/NzVisaType"
               },
               "Countries": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/NzCountry"
                  }
               },
               "NextOfKinRelationships": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/NextOfKinRelationship"
                  }
               },
               "VaccineStatus": {
                  "$ref": "#/components/schemas/VaccineStatus"
               }
            }
         },
         "LearnerSgDemographics": {
            "type": "object",
            "properties": {
               "PriorEducationId": {
                  "type": "integer",
                  "description": "See combo SgPriorEducations",
                  "format": "int32"
               },
               "PriorEducationWSQId": {
                  "type": "integer",
                  "description": "See combo SgWsqPriorEducations",
                  "format": "int32"
               },
               "PrimaryLanguageId": {
                  "type": "integer",
                  "description": "See combo Languages",
                  "format": "int32"
               },
               "SpokenEnglishProficiencyId": {
                  "type": "integer",
                  "description": "See combo SpokenEnglishProficiencies",
                  "format": "int32"
               },
               "EnglishTestScore": {
                  "$ref": "#/components/schemas/LearnerSgDemographicsEnglishTestScore"
               },
               "RaceId": {
                  "type": "integer",
                  "description": "See combo SgRaces",
                  "format": "int32"
               },
               "CountryOfNationalityId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "NationalityId": {
                  "type": "integer",
                  "description": "See combo SgNationalities",
                  "format": "int32"
               },
               "ResidentialStatusId": {
                  "type": "integer",
                  "description": "See combo SgResidentialStatuses",
                  "format": "int32"
               },
               "IdentityDocumentTypeId": {
                  "type": "integer",
                  "description": "See combo SgIdentityDocumentTypes",
                  "format": "int32"
               }
            }
         },
         "LearnerSgInternational": {
            "type": "object",
            "properties": {
               "PassportNumber": {
                  "type": "string",
                  "description": "Passport number of the learner",
                  "format": "20"
               },
               "PassportExpiryDate": {
                  "type": "string",
                  "description": "Learner passport expiry date",
                  "format": "date-time"
               },
               "PassportCountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "VisaNumber": {
                  "type": "string",
                  "description": "Visa Number of the learner",
                  "format": "50"
               },
               "VisaTypeId": {
                  "type": "integer",
                  "description": "See combo NzVisaTypes",
                  "format": "int32"
               },
               "VisaExpiryDate": {
                  "type": "string",
                  "description": "Expiry Date of learner's visa",
                  "format": "date-time"
               },
               "NationalityId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "Address": {
                  "$ref": "#/components/schemas/LearnerSgInternationalAddress"
               },
               "PhoneHome": {
                  "type": "string",
                  "description": "International Home phone number",
                  "format": "20"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "International Work phone number",
                  "format": "20"
               }
            }
         },
         "LearnerSgNextOfKin": {
            "type": "object",
            "properties": {
               "LocalNextOfKin": {
                  "$ref": "#/components/schemas/LearnerSgNextOfKinLocalNextOfKin"
               },
               "InternationalNextOfKin": {
                  "$ref": "#/components/schemas/LearnerSgNextOfKinInternationalNextOfKin"
               }
            }
         },
         "LearnerSgLearnerAccess": {
            "type": "object",
            "properties": {
               "Username": {
                  "type": "string",
                  "description": "Username to log into Learner App",
                  "format": "150"
               },
               "AccessEnabledLearnerApp": {
                  "type": "boolean",
                  "description": "To indicate if access to Learner App is given or not"
               },
               "AccessEnabledElearning": {
                  "type": "boolean",
                  "description": "To indicate if access to eLearning is given or not"
               },
               "AccessEnabledKliq": {
                  "type": "boolean",
                  "description": "To indicate if access to Kliq is given or not"
               },
               "AccessExpiryDate": {
                  "type": "string",
                  "description": "Date when Learner App and eLearning access expires",
                  "format": "date-time"
               },
               "PasswordForceChange": {
                  "type": "boolean",
                  "description": "Forces a password change prompt upon learner login when value is set to 1"
               }
            }
         },
         "LearnerSgPersonalPhoneNumbers": {
            "type": "object",
            "properties": {
               "PhoneHome": {
                  "type": "string",
                  "description": "Home phone number of the learner",
                  "format": "15"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "Work phone number of the learner",
                  "format": "15"
               },
               "FaxHome": {
                  "type": "string",
                  "description": "Home fax number of the learner",
                  "format": "15"
               },
               "FaxWork": {
                  "type": "string",
                  "description": "Work fax number of the learner",
                  "format": "15"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Mobile number of the learner. Accepts numbers only. International format is preferable eg. +614xxxxxxxxx\".",
                  "format": "20"
               }
            }
         },
         "LearnerSgPersonalEmailAddresses": {
            "type": "object",
            "properties": {
               "Email": {
                  "type": "string",
                  "description": "Email address of the learner",
                  "format": "80"
               },
               "AlternativeEmail": {
                  "type": "string",
                  "description": "Alternative email address of the learner",
                  "format": "80"
               }
            }
         },
         "LearnerSgPersonalStreetAddress": {
            "type": "object",
            "properties": {
               "BuildingName": {
                  "type": "string",
                  "description": "Building name of learner's street address",
                  "format": "50"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit details of learner's street address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street number of learner's street address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street name of learner's street address",
                  "format": "70"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Suburb/Town of learner's street address",
                  "format": "50"
               },
               "SuburbTownCity": {
                  "type": "string",
                  "description": "City/Region of learner's street address",
                  "format": "50"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's street address",
                  "format": "20"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "StreetAddress": {
                  "type": "string",
                  "description": "Read only. Address Line1 of learner's street address"
               }
            }
         },
         "LearnerSgPersonalPostalAddress": {
            "type": "object",
            "properties": {
               "BuildingName": {
                  "type": "string",
                  "description": "Building name of learner's postal address",
                  "format": "50"
               },
               "PoBox": {
                  "type": "string",
                  "description": "PO Box number of learner's postal address",
                  "format": "22"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit details of learner's postal address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street number of learner's postal address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street name of learner's postal address",
                  "format": "70"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Suburb/Town of learner's postal address",
                  "format": "50"
               },
               "SuburbTownCity": {
                  "type": "string",
                  "description": "City/Region of learner's postal address",
                  "format": "50"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's postal address",
                  "format": "20"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "PostalAddress": {
                  "type": "string",
                  "description": "Read only. Address Line1 of learner's postal address"
               }
            }
         },
         "LearnerSgPersonalPermanentAddress": {
            "type": "object",
            "properties": {
               "BuildingName": {
                  "type": "string",
                  "description": "Building name of learner's permanent address",
                  "format": "50"
               },
               "PoBox": {
                  "type": "string",
                  "description": "PO Box number of learner's permanent address",
                  "format": "22"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit details of learner's permanent address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street number of learner's permanent address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street name of learner's permanent address",
                  "format": "70"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Suburb/Town of learner's permanent address",
                  "format": "50"
               },
               "SuburbTownCity": {
                  "type": "string",
                  "description": "City/Region of learner's permanent address",
                  "format": "50"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's permanent address",
                  "format": "20"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "PermanentAddress": {
                  "type": "string",
                  "description": "Read only. Address Line1 of learner's permanent address"
               }
            }
         },
         "LearnerSgPersonalRelationships": {
            "type": "object",
            "properties": {
               "Gender": {
                  "$ref": "#/components/schemas/NzGender"
               },
               "TargetGroup": {
                  "$ref": "#/components/schemas/TargetGroupClient"
               },
               "VaccineStatus": {
                  "$ref": "#/components/schemas/VaccineStatus"
               },
               "NRICType": {
                  "$ref": "#/components/schemas/SgNricType"
               },
               "Countries": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/NzCountry"
                  }
               }
            }
         },
         "LearnerPositionRelationships": {
            "type": "object",
            "properties": {
               "Learner": {
                  "$ref": "#/components/schemas/LearnerBasic"
               },
               "Workplace": {
                  "$ref": "#/components/schemas/WorkplaceBasic"
               },
               "Position": {
                  "$ref": "#/components/schemas/Position"
               },
               "SalesContact": {
                  "$ref": "#/components/schemas/SalesContactShort"
               },
               "WorkplaceType": {
                  "$ref": "#/components/schemas/WorkplaceType"
               },
               "PayLevel": {
                  "$ref": "#/components/schemas/PayLevel"
               }
            }
         },
         "LocationFullRelationships": {
            "type": "object",
            "properties": {
               "State": {
                  "$ref": "#/components/schemas/State"
               },
               "Country": {
                  "$ref": "#/components/schemas/Country"
               },
               "ReferenceWorkplace": {
                  "$ref": "#/components/schemas/WorkplaceBasic"
               }
            }
         },
         "LocationBasic": {
            "type": "object",
            "properties": {
               "LocationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "LocationBasicRelationships": {
            "type": "object"
         },
         "OpportunityRelationships": {
            "type": "object",
            "properties": {
               "SalesContact": {
                  "$ref": "#/components/schemas/SalesContactShort"
               },
               "OpportunityStage": {
                  "$ref": "#/components/schemas/OpportunityStage"
               },
               "Owner": {
                  "$ref": "#/components/schemas/SalesPerson"
               },
               "OpportunitySource": {
                  "$ref": "#/components/schemas/OpportunitySource"
               },
               "OpportunityType": {
                  "$ref": "#/components/schemas/OpportunityType"
               },
               "CloseLostReason": {
                  "$ref": "#/components/schemas/CloseLostReason"
               },
               "ReferringSalesContact": {
                  "$ref": "#/components/schemas/SalesContactShort"
               },
               "Pipeline": {
                  "$ref": "#/components/schemas/Pipeline"
               },
               "Tags": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Tag"
                  }
               },
               "SalesContactTypes": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/SalesContactType"
                  }
               }
            }
         },
         "PromotionRelationships": {
            "type": "object"
         },
         "SalesContactRelationships": {
            "type": "object",
            "properties": {
               "Owner": {
                  "$ref": "#/components/schemas/SalesPerson"
               },
               "SalesContactStage": {
                  "$ref": "#/components/schemas/SalesContactStage"
               },
               "SalesContactType": {
                  "$ref": "#/components/schemas/SalesContactType"
               }
            }
         },
         "SalesContactRelationship": {
            "type": "object",
            "properties": {
               "SalesContactRelationshipId": {
                  "type": "integer",
                  "format": "int32"
               },
               "EntityName": {
                  "type": "string"
               },
               "RecordId": {
                  "type": "integer",
                  "format": "int32"
               },
               "IsActive": {
                  "type": "boolean"
               }
            }
         },
         "SalesPerson": {
            "type": "object",
            "properties": {
               "SalesPersonId": {
                  "type": "integer",
                  "description": "Primary Id for SalesPerson that is auto generated",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First Name of the sales person",
                  "format": "100"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last Name of the sales person",
                  "format": "100"
               },
               "IsActive": {
                  "type": "boolean",
                  "description": "To indicate if the sales person is active or not"
               }
            }
         },
         "SalesPersonRelationships": {
            "type": "object"
         },
         "Staff": {
            "type": "object",
            "properties": {
               "StaffId": {
                  "type": "integer",
                  "description": "Primary Id for Staff that is auto generated",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First Name of the Staff"
               },
               "MiddleName": {
                  "type": "string",
                  "description": "Middle Name of the Staff"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last Name of the Staff"
               },
               "StartDate": {
                  "type": "string",
                  "description": "Active Start Date of the Staff",
                  "format": "date-time"
               },
               "EndDate": {
                  "type": "string",
                  "description": "Active End Date of the Staff",
                  "format": "date-time"
               },
               "ArchivedFlag": {
                  "type": "boolean",
                  "description": "To indicate if Staff is Archived"
               },
               "Title": {
                  "type": "string",
                  "description": "Title of the staff"
               },
               "DateOfBirth": {
                  "type": "string",
                  "description": "Date of Birth of the Staff",
                  "format": "date-time"
               },
               "GenderId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Mobile number of the Staff. Accepts numbers only. International format is preferable eg. +614xxxxxxxxx\"."
               },
               "Email": {
                  "type": "string",
                  "description": "Email address of the Staff"
               },
               "Phone": {
                  "type": "string",
                  "description": "Phone Number of the Staff"
               },
               "Fax": {
                  "type": "string",
                  "description": "Fax Number of the Staff"
               },
               "AccreditationNumber": {
                  "type": "string",
                  "description": "Accreditation Number of theStaff"
               },
               "RegistrationNumber": {
                  "type": "string",
                  "description": "Registration Number of the Staff"
               },
               "Workplace": {
                  "type": "string",
                  "description": "Workplace of the Staff"
               },
               "Profile": {
                  "type": "string",
                  "description": "Profile information of the Staff"
               },
               "StreetAddress": {
                  "$ref": "#/components/schemas/StaffStreetAddress"
               },
               "PostalAddress": {
                  "$ref": "#/components/schemas/StaffPostalAddress"
               },
               "AssessorFlag": {
                  "type": "boolean",
                  "description": ""
               },
               "AssessorId": {
                  "type": "integer",
                  "format": "int32"
               },
               "TrainerFlag": {
                  "type": "boolean",
                  "description": "To indicate if Staff is Trainer"
               },
               "TrainerId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CoordinatorFlag": {
                  "type": "boolean",
                  "description": "To indicate if Staff is Coordinator"
               },
               "CoordinatorId": {
                  "type": "integer",
                  "format": "int32"
               },
               "SalesPersonFlag": {
                  "type": "boolean",
                  "description": "To indicate if Staff is Sales Person"
               },
               "SalesPersonId": {
                  "type": "integer",
                  "format": "int32"
               },
               "IssuingOfficerFlag": {
                  "type": "boolean",
                  "description": "To indicate if Staff is Issuing Officer"
               },
               "ContractFlag": {
                  "type": "boolean",
                  "description": "To indicate if Staff has Contract"
               },
               "SaHighestQualificationTypeId": {
                  "type": "integer",
                  "description": "South Africa only. See SaHighestQualificationTypes",
                  "format": "int32"
               },
               "VaccineStatusId": {
                  "type": "integer",
                  "description": "Vaccine Status Id",
                  "format": "int32"
               },
               "VaccineStatusNotes": {
                  "type": "string",
                  "description": "Vaccination notes",
                  "format": "1000"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the Staff was last modified",
                  "format": "date-time"
               }
            }
         },
         "StaffRelationships": {
            "type": "object",
            "properties": {
               "Gender": {
                  "$ref": "#/components/schemas/Gender"
               },
               "Assessor": {
                  "$ref": "#/components/schemas/Assessor"
               },
               "Trainer": {
                  "$ref": "#/components/schemas/Trainer"
               },
               "Coordinator": {
                  "$ref": "#/components/schemas/Coordinator"
               },
               "SalesPerson": {
                  "$ref": "#/components/schemas/SalesPerson"
               },
               "StreetAddressState": {
                  "$ref": "#/components/schemas/State"
               },
               "PostalAddressState": {
                  "$ref": "#/components/schemas/State"
               },
               "StreetAddressCountry": {
                  "$ref": "#/components/schemas/Country"
               },
               "PostalAddressCountry": {
                  "$ref": "#/components/schemas/Country"
               },
               "SaHighestQualificationType": {
                  "$ref": "#/components/schemas/SaHighestQualificationType"
               },
               "VaccineStatus": {
                  "$ref": "#/components/schemas/VaccineStatus"
               }
            }
         },
         "TagRelationships": {
            "type": "object"
         },
         "Trainer": {
            "type": "object",
            "properties": {
               "TrainerId": {
                  "type": "integer",
                  "description": "Primary Id for Trainer that is auto generated",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First Name of the trainer",
                  "format": "100"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last Name of the trainer",
                  "format": "100"
               },
               "IsActive": {
                  "type": "boolean",
                  "description": "To indicate if the trainer is active or not"
               }
            }
         },
         "TrainerRelationships": {
            "type": "object"
         },
         "Unit": {
            "type": "object",
            "properties": {
               "UnitId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CourseId": {
                  "type": "integer",
                  "format": "int32"
               },
               "UnitTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "UnitCode": {
                  "type": "string"
               },
               "UnitDesc": {
                  "type": "string"
               },
               "UnitOfCompetencyId": {
                  "type": "integer",
                  "format": "int32"
               },
               "VetFlag": {
                  "type": "string"
               },
               "Stage": {
                  "type": "integer",
                  "format": "int32"
               },
               "Points": {
                  "type": "integer",
                  "format": "int32"
               },
               "PreReq": {
                  "type": "string"
               },
               "TuitionWeeks": {
                  "type": "number",
                  "format": "double"
               },
               "Comments": {
                  "type": "string"
               },
               "Outline": {
                  "type": "string"
               },
               "UnitFieldOfEducationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "NominalHoursSupervised": {
                  "type": "integer",
                  "format": "int32"
               },
               "NominalHoursUnsupervised": {
                  "type": "integer",
                  "format": "int32"
               },
               "NzFundingCatId": {
                  "type": "integer",
                  "format": "int32"
               },
               "NzDegreeResearchStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "NzUnitClassificationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "NzScedFieldOfStudyId": {
                  "type": "integer",
                  "format": "int32"
               },
               "NzEftsFactor": {
                  "type": "string"
               },
               "NzCredit": {
                  "type": "string"
               },
               "NzRegisterLevelId": {
                  "type": "integer",
                  "format": "int32"
               },
               "NzResearchLevelId": {
                  "type": "integer",
                  "format": "int32"
               },
               "NzUnitExemptionFccmid": {
                  "type": "integer",
                  "format": "int32"
               },
               "NzEmbeddedLitNumId": {
                  "type": "integer",
                  "format": "int32"
               },
               "NzStandardTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "NzForNzqa": {
                  "type": "boolean"
               },
               "LastCustomerUserId": {
                  "type": "integer",
                  "format": "int32"
               },
               "LastAuditTimeStamp": {
                  "type": "string",
                  "format": "date-time"
               },
               "LastAuditAction": {
                  "type": "string"
               },
               "ActiveStartDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "ActiveEndDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "UnitGuid": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
               },
               "IsUip": {
                  "type": "boolean"
               }
            }
         },
         "UnitRelationships": {
            "type": "object",
            "properties": {
               "UnitType": {
                  "$ref": "#/components/schemas/UnitType"
               },
               "UnitOfCompetencyFlag": {
                  "$ref": "#/components/schemas/UnitOfCompetencyFlag"
               },
               "UnitFieldOfEducation": {
                  "$ref": "#/components/schemas/UnitFieldOfEducation"
               }
            }
         },
         "UnitOffer": {
            "type": "object",
            "properties": {
               "UnitOfferId": {
                  "type": "integer",
                  "description": "Primary Id for unit offer that is auto generated",
                  "format": "int32"
               },
               "CourseOfferId": {
                  "type": "integer",
                  "description": "See entity CourseOffers",
                  "format": "int32"
               },
               "UnitId": {
                  "type": "integer",
                  "description": "See entity Units",
                  "format": "int32"
               },
               "UnitOfferCode": {
                  "type": "string",
                  "description": "Code used to identify the Unit Offer",
                  "format": "50"
               },
               "StartDate": {
                  "type": "string",
                  "description": "Date when the unit offer starts",
                  "format": "date-time"
               },
               "EndDate": {
                  "type": "string",
                  "description": "Date when the unit offer is closed",
                  "format": "date-time"
               },
               "CensusDate": {
                  "type": "string",
                  "description": "AU only. Census Date of the unit offer",
                  "format": "date-time"
               },
               "PeriodFromStartDate": {
                  "type": "number",
                  "description": "Start Date used for the calculation of the associated unit enrolments",
                  "format": "double"
               },
               "PeriodTypeId": {
                  "type": "integer",
                  "description": "See combo PeriodTypes",
                  "format": "int32"
               },
               "Duration": {
                  "type": "number",
                  "description": "Duration for the calculation of the associated unit enrolments",
                  "format": "double"
               },
               "DurationTypeId": {
                  "type": "integer",
                  "description": "See combo DurationTypes",
                  "format": "int32"
               },
               "DaysToCensusDate": {
                  "type": "integer",
                  "description": "Used to calculate Census Date based on days from Unit Enrolment Start Date",
                  "format": "int32"
               },
               "Day": {
                  "type": "string",
                  "description": "Day the unit is offered within the unit offer",
                  "format": "50"
               },
               "StartTime": {
                  "type": "string",
                  "description": "Start Time of the unit offer",
                  "format": "date-time"
               },
               "EndTime": {
                  "type": "string",
                  "description": "End Time of the unit offer",
                  "format": "date-time"
               },
               "MaxRegistrations": {
                  "type": "integer",
                  "description": "Maximum Number of registrations allowed within the unit offer",
                  "format": "int32"
               },
               "MinRegistrations": {
                  "type": "integer",
                  "description": "Minimum Number of registrations allowed within the unit offer",
                  "format": "int32"
               },
               "LocationId": {
                  "type": "integer",
                  "description": "See entity Location",
                  "format": "int32"
               },
               "UnitFees": {
                  "type": "number",
                  "description": "Total Fees charged for the unit offer",
                  "format": "double"
               },
               "UnitConcessionFees": {
                  "type": "number",
                  "description": "AU only. Concession Fees charged for the unit offer",
                  "format": "double"
               },
               "UnitHourlyFee": {
                  "type": "number",
                  "description": "AU only. Unit hourly fee of the unit offer",
                  "format": "double"
               },
               "ResourceFee": {
                  "type": "number",
                  "description": "AU only. Non tuition fee charged for the unit offer",
                  "format": "double"
               },
               "LoanLiability": {
                  "type": "number",
                  "description": "AU only. Loan Liability for enrolments this unit offer would incur",
                  "format": "double"
               },
               "ContractId": {
                  "type": "integer",
                  "description": "AU only. See entity Contracts",
                  "format": "int32"
               },
               "TrainerId": {
                  "type": "integer",
                  "description": "See entity Trainers",
                  "format": "int32"
               },
               "WhatToBring": {
                  "type": "string",
                  "description": "Details for learner outlining what to bring",
                  "format": "1000"
               },
               "WhereToGo": {
                  "type": "string",
                  "description": "Details for learner outlining where to go",
                  "format": "1000"
               },
               "Notes": {
                  "type": "string",
                  "description": "Additional notes related to the unit offer",
                  "format": "1000"
               },
               "CurrentFlag": {
                  "type": "boolean",
                  "description": "AU and NZ only. To indicate if the unit offer is currently being taught or not"
               },
               "FeeStatus": {
                  "type": "string",
                  "description": "AU only. Fee Status of the unit offer",
                  "format": "50"
               },
               "IsGstFreeFlag": {
                  "type": "boolean",
                  "description": "AU only. To indicate if the unit offer fees are GST free or not"
               },
               "VenueId": {
                  "type": "integer",
                  "description": "See combo Venues",
                  "format": "int32"
               },
               "HoursSupervised": {
                  "type": "integer",
                  "description": "Supervised Nominal Hours of the unit offer",
                  "format": "int32"
               },
               "HoursUnsupervised": {
                  "type": "integer",
                  "description": "Unsupervised Nominal Hours of the unit offer",
                  "format": "int32"
               },
               "ForGovtReportingFlag": {
                  "type": "boolean",
                  "description": "For AVETMISS flag (AU), For SDR flag (NZ), For Reporting flag (SG)"
               },
               "Stage": {
                  "type": "integer",
                  "description": "Stage the unit offer is delivered",
                  "format": "int32"
               },
               "Points": {
                  "type": "integer",
                  "description": "Points achieved in the unit offer",
                  "format": "int32"
               },
               "PreviousIdentifier": {
                  "type": "string",
                  "description": "The previous identifier associated with the unit offer"
               },
               "ProgramId": {
                  "type": "integer",
                  "description": "AU and NZ only. See combo Programs",
                  "format": "int32"
               },
               "AssessmentMethodId": {
                  "type": "integer",
                  "description": "See combo AssessmentMethods",
                  "format": "int32"
               },
               "ConcessionFlag": {
                  "type": "boolean",
                  "description": "AU only. To indicate if the unit offer is eligible for concession or not"
               },
               "FeeExemptionId": {
                  "type": "integer",
                  "description": "AU only. See combo FeeExemptions",
                  "format": "int32"
               },
               "FeeExemptionWaiverId": {
                  "type": "integer",
                  "description": "AU only. See combo FeeExemptionWaivers",
                  "format": "int32"
               },
               "AssessorId": {
                  "type": "integer",
                  "description": "See entity Assessors",
                  "format": "int32"
               },
               "DepartmentCodeId": {
                  "type": "integer",
                  "description": "AU and NZ only. See combo DepartmentCodes",
                  "format": "int32"
               },
               "BudgetedIncome": {
                  "type": "number",
                  "description": "AU and NZ only. Budgted Income of the unit offer",
                  "format": "double"
               },
               "BudgetCost": {
                  "type": "number",
                  "description": "AU and NZ only. Budgted Cost of the unit offer",
                  "format": "double"
               },
               "ActualCost": {
                  "type": "number",
                  "description": "AU and NZ only. Actual Cose of the unit offer",
                  "format": "double"
               },
               "VetInSchoolFlag": {
                  "type": "boolean",
                  "description": "AU only. To indicate if the learner is completing this unit through a school"
               },
               "DeliveryModeId": {
                  "type": "integer",
                  "description": "AU only. See combo DeliveryModes",
                  "format": "int32"
               },
               "FundSourceNationalId": {
                  "type": "integer",
                  "description": "AU only. See combo FundSourceNationals",
                  "format": "int32"
               },
               "FundSourceStateId": {
                  "type": "integer",
                  "description": "AU only. See combo FundSourceStates",
                  "format": "int32"
               },
               "SpecificProgramId": {
                  "type": "integer",
                  "description": "AU only. See combo SpecificPrograms",
                  "format": "int32"
               },
               "DeliveryWorkplaceId": {
                  "type": "integer",
                  "description": "AU only. See entity Workplaces",
                  "format": "int32"
               },
               "EftsFactor": {
                  "type": "string",
                  "description": "NZ only. EFTS Factor which should be between 0.0000 and 1.0000",
                  "format": "6"
               },
               "InternetBasedLearningId": {
                  "type": "integer",
                  "description": "NZ only. See combo InternetBasedLearnings",
                  "format": "int32"
               },
               "ComplusoryUnitCostsFee": {
                  "type": "number",
                  "description": "NZ only. Compulsory costs fee associated with the unit offer",
                  "format": "double"
               },
               "ForeignFee": {
                  "type": "number",
                  "description": "NZ only. Tuition Fees paid by international fee-paying student",
                  "format": "double"
               },
               "MaximaExemptFee": {
                  "type": "number",
                  "description": "NZ only. Sum of all non maxima fees charged to the learner",
                  "format": "double"
               },
               "FeeAssessmentCategoryId": {
                  "type": "integer",
                  "description": "NZ only. See combo FeeAssessmentCategories",
                  "format": "int32"
               },
               "MuralAttendanceId": {
                  "type": "integer",
                  "description": "NZ only. See combo MuralAttendances",
                  "format": "int32"
               },
               "TuitionWeeks": {
                  "type": "number",
                  "description": "NZ only. Number of weeks for this unit enrolment",
                  "format": "double"
               },
               "DeliveryModeAV8Id": {
                  "type": "integer",
                  "description": "AU only. See combo DeliveryModesAv8",
                  "format": "int32"
               },
               "PredominantDeliveryModeId": {
                  "type": "integer",
                  "description": "AU only. See combo PredominantDeliveryModes",
                  "format": "int32"
               },
               "DeliveryModeWa1Id": {
                  "type": "integer",
                  "description": "AU only. See combo DeliveryModesWa",
                  "format": "int32"
               },
               "DeliveryModeWa2Id": {
                  "type": "integer",
                  "description": "AU only. See combo DeliveryModesWa",
                  "format": "int32"
               },
               "DeliveryModeWa3Id": {
                  "type": "integer",
                  "description": "AU only. See combo DeliveryModesWa",
                  "format": "int32"
               },
               "EmployerInvoicedFlag": {
                  "type": "string",
                  "description": "AU only. To indicate if the employer is invoiced for the unit offer",
                  "format": "Y or N"
               },
               "FundingRemovedFlag": {
                  "type": "string",
                  "description": "AU only. To indicate if the funding is removed for the unit offer",
                  "format": "Y or N"
               },
               "LastModifiedTimeStamp": {
                  "type": "string",
                  "description": "Date when the unit offer was last modified",
                  "format": "date-time"
               },
               "CourseOfferCode": {
                  "type": "string",
                  "description": "See entity CourseOffer"
               },
               "AutoGradeRuleId": {
                  "type": "integer",
                  "description": "Course Offer Code",
                  "format": "int32"
               },
               "CourseOfferDescription": {
                  "type": "string",
                  "description": "Course Offer Description"
               },
               "UnitDescription": {
                  "type": "string",
                  "description": "Unit Description"
               }
            }
         },
         "UnitOfferRelationships": {
            "type": "object",
            "properties": {
               "CourseOffer": {
                  "$ref": "#/components/schemas/CourseOfferBasic"
               },
               "Assessor": {
                  "$ref": "#/components/schemas/Assessor"
               },
               "Unit": {
                  "$ref": "#/components/schemas/UnitBasic"
               },
               "Location": {
                  "$ref": "#/components/schemas/LocationBasic"
               },
               "Contract": {
                  "$ref": "#/components/schemas/Contract"
               },
               "Trainer": {
                  "$ref": "#/components/schemas/Trainer"
               },
               "Venue": {
                  "$ref": "#/components/schemas/VenueBasic"
               },
               "Program": {
                  "$ref": "#/components/schemas/Program"
               },
               "AssessmentMethod": {
                  "$ref": "#/components/schemas/AssessmentMethod"
               },
               "FeeExemption": {
                  "$ref": "#/components/schemas/FeeExemption"
               },
               "FeeExemptionWaiver": {
                  "$ref": "#/components/schemas/FeeExemptionWaiver"
               },
               "DepartmentCode": {
                  "$ref": "#/components/schemas/DepartmentCode"
               },
               "DeliveryMode": {
                  "$ref": "#/components/schemas/DeliveryMode"
               },
               "FundSourceNational": {
                  "$ref": "#/components/schemas/FundSourceNational"
               },
               "FundSourceState": {
                  "$ref": "#/components/schemas/FundSourceState"
               },
               "PeriodType": {
                  "$ref": "#/components/schemas/PeriodType"
               },
               "DurationType": {
                  "$ref": "#/components/schemas/DurationType"
               },
               "Workplace": {
                  "$ref": "#/components/schemas/WorkplaceBasic"
               },
               "InternetBasedLearning": {
                  "$ref": "#/components/schemas/InternetBasedLearning"
               },
               "NzFeeAssessmentCategory": {
                  "$ref": "#/components/schemas/FeeAssessmentCategory"
               },
               "NzMurualAttendance": {
                  "$ref": "#/components/schemas/MuralAttendance"
               },
               "DeliveryModeAv8": {
                  "$ref": "#/components/schemas/DeliveryModeAv8"
               },
               "PredominantDeliveryMode": {
                  "$ref": "#/components/schemas/PredominantDeliveryMode"
               },
               "DeliveryModeWa1": {
                  "$ref": "#/components/schemas/DeliveryModeWa"
               },
               "DeliveryModeWa2": {
                  "$ref": "#/components/schemas/DeliveryModeWa"
               },
               "DeliveryModeWa3": {
                  "$ref": "#/components/schemas/DeliveryModeWa"
               }
            }
         },
         "UnitEnrolmentRelationships": {
            "type": "object",
            "properties": {
               "AssessmentMethod": {
                  "$ref": "#/components/schemas/AssessmentMethod"
               },
               "Unit": {
                  "$ref": "#/components/schemas/UnitBasic"
               },
               "UnitOffer": {
                  "$ref": "#/components/schemas/UnitOfferBasic"
               },
               "CourseEnrolment": {
                  "$ref": "#/components/schemas/CourseEnrolmentBasic"
               },
               "Learner": {
                  "$ref": "#/components/schemas/LearnerBasic"
               },
               "CourseOffer": {
                  "$ref": "#/components/schemas/CourseOfferBasic"
               },
               "Contract": {
                  "$ref": "#/components/schemas/Contract"
               },
               "Location": {
                  "$ref": "#/components/schemas/LocationBasic"
               },
               "Assessor": {
                  "$ref": "#/components/schemas/Assessor"
               },
               "Trainer": {
                  "$ref": "#/components/schemas/Trainer"
               },
               "SpecificProgramIdentifier": {
                  "$ref": "#/components/schemas/SpecificProgramIdentifier"
               },
               "FeeExemption": {
                  "$ref": "#/components/schemas/FeeExemption"
               },
               "FeeExemptionWaiver": {
                  "$ref": "#/components/schemas/FeeExemptionWaiver"
               },
               "Result": {
                  "$ref": "#/components/schemas/Result"
               },
               "Outcome": {
                  "$ref": "#/components/schemas/Outcome"
               },
               "DeliveryMode": {
                  "$ref": "#/components/schemas/DeliveryMode"
               },
               "FundSourceNational": {
                  "$ref": "#/components/schemas/FundSourceNational"
               },
               "FundSourceState": {
                  "$ref": "#/components/schemas/FundSourceState"
               },
               "NzFeeAssessmentCategory": {
                  "$ref": "#/components/schemas/FeeAssessmentCategory"
               },
               "NzMurualAttendance": {
                  "$ref": "#/components/schemas/MuralAttendance"
               },
               "NzOutcome": {
                  "$ref": "#/components/schemas/NzOutcome"
               },
               "NzResult": {
                  "$ref": "#/components/schemas/NzqaResult"
               },
               "NzFundSource": {
                  "$ref": "#/components/schemas/NzFundSource"
               },
               "WorkPlace": {
                  "$ref": "#/components/schemas/WorkplaceBasic"
               },
               "DeliveryModeAv8": {
                  "$ref": "#/components/schemas/DeliveryModeAv8"
               },
               "PredominantDeliveryMode": {
                  "$ref": "#/components/schemas/PredominantDeliveryMode"
               },
               "DeliveryModeWa1": {
                  "$ref": "#/components/schemas/DeliveryModeWa"
               },
               "DeliveryModeWa2": {
                  "$ref": "#/components/schemas/DeliveryModeWa"
               },
               "DeliveryModeWa3": {
                  "$ref": "#/components/schemas/DeliveryModeWa"
               }
            }
         },
         "WorkplaceRelationships": {
            "type": "object",
            "properties": {
               "Anzsic": {
                  "$ref": "#/components/schemas/Anzsic"
               },
               "States": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/State"
                  }
               },
               "Countries": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/Country"
                  }
               },
               "Location": {
                  "$ref": "#/components/schemas/Location"
               },
               "SchoolType": {
                  "$ref": "#/components/schemas/SchoolType"
               },
               "WorkplaceClassification": {
                  "$ref": "#/components/schemas/WorkplaceClassification"
               },
               "IndustrySize": {
                  "$ref": "#/components/schemas/IndustrySize"
               },
               "AccreditationType": {
                  "$ref": "#/components/schemas/AccreditationType"
               },
               "HeadOfficeWorkplace": {
                  "$ref": "#/components/schemas/WorkplaceBasic"
               },
               "NzEmploymentLocationCode": {
                  "$ref": "#/components/schemas/NzEmploymentLocationCode"
               }
            }
         },
         "WorkplaceStreetAddress": {
            "type": "object",
            "properties": {
               "BuildingName": {
                  "type": "string",
                  "description": "Building Name of the Workplace Street Address",
                  "format": "50"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit Details of the Workplace Street Address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street Number of the Workplace Street Address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street Name of the Workplace Street Address",
                  "format": "70"
               },
               "AddressLine1": {
                  "type": "string",
                  "description": "Address Line of the Workplace Street Address",
                  "format": "100"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Additional address details of the Workplace Street Address",
                  "format": "100"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of the Workplace Street Address",
                  "format": "100"
               },
               "StateId": {
                  "type": "string",
                  "description": "See combo States. State of the Workplace Street Address",
                  "format": "50"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of the Workplace Street Address",
                  "format": "20"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries. Country of the Workplace Street Address",
                  "format": "int32"
               }
            }
         },
         "WorkplacePostalAddress": {
            "type": "object",
            "properties": {
               "BuildingName": {
                  "type": "string",
                  "description": "Building Name of the Workplace Postal Address",
                  "format": "50"
               },
               "PoBox": {
                  "type": "string",
                  "description": "PO Box Number of the Workplace Postal Address",
                  "format": "22"
               },
               "UnitDetails": {
                  "type": "string",
                  "description": "Unit Details of the Workplace Postal Address",
                  "format": "30"
               },
               "StreetNumber": {
                  "type": "string",
                  "description": "Street Number of the Workplace Postal Address",
                  "format": "15"
               },
               "StreetName": {
                  "type": "string",
                  "description": "Street Name of the Workplace Postal Address",
                  "format": "100"
               },
               "AddressLine1": {
                  "type": "string",
                  "description": "Address Line of the Workplace Postal Address",
                  "format": "100"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Additional address details of the Workplace Postal Address",
                  "format": "100"
               },
               "SuburbTownCity": {
                  "type": "string",
                  "description": "Suburb of the Workplace Postal Address",
                  "format": "70"
               },
               "StateId": {
                  "type": "string",
                  "description": "See combo States. State of the Workplace Postal Address",
                  "format": "20"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of the Workplace Postal Address",
                  "format": "20"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries. Country of the Workplace Postal Address",
                  "format": "int32"
               }
            }
         },
         "Aac": {
            "type": "object",
            "properties": {
               "AacId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               },
               "IsActive": {
                  "type": "boolean"
               }
            }
         },
         "AacRelationships": {
            "type": "object"
         },
         "AccreditationType": {
            "type": "object",
            "properties": {
               "AccreditationTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "AccreditationTypeRelationships": {
            "type": "object"
         },
         "AdmissionBasis": {
            "type": "object",
            "properties": {
               "AdmissionBasisId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "AdmissionBasisRelationships": {
            "type": "object"
         },
         "AgeCategory": {
            "type": "object",
            "properties": {
               "AgeCategoryId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "AgeCategoryRelationships": {
            "type": "object"
         },
         "AgentAgreementStatus": {
            "type": "object",
            "properties": {
               "AgentAgreementStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "AgentAgreementStatusRelationships": {
            "type": "object"
         },
         "AgentClassification": {
            "type": "object",
            "properties": {
               "AgentClassificationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               },
               "IsActive": {
                  "type": "boolean"
               }
            }
         },
         "AgentClassificationRelationships": {
            "type": "object"
         },
         "AgentStatus": {
            "type": "object",
            "properties": {
               "AgentStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "AgentStatusRelationships": {
            "type": "object"
         },
         "AlertType": {
            "type": "object",
            "properties": {
               "AlertTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "EventTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "AlertTypeRelationships": {
            "type": "object",
            "properties": {
               "EventType": {
                  "$ref": "#/components/schemas/EventType"
               }
            }
         },
         "Anzsco": {
            "type": "object",
            "properties": {
               "AnzscoId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "AnzscoRelationships": {
            "type": "object"
         },
         "Anzsic": {
            "type": "object",
            "properties": {
               "AnzsicId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "AnzsicRelationships": {
            "type": "object"
         },
         "ApplicationPaymentType": {
            "type": "object",
            "properties": {
               "PaymentTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Name": {
                  "type": "string"
               }
            }
         },
         "ApplicationPaymentTypeRelationships": {
            "type": "object"
         },
         "ApplicationStatus": {
            "type": "object",
            "properties": {
               "ApplicationStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "ApplicationStatusRelationships": {
            "type": "object"
         },
         "ApplicationStatusReason": {
            "type": "object",
            "properties": {
               "ApplicationStatusReasonId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "ApplicationStatusReasonRelationships": {
            "type": "object"
         },
         "Asco": {
            "type": "object",
            "properties": {
               "AscoId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "AscoRelationships": {
            "type": "object"
         },
         "AssessmentMethod": {
            "type": "object",
            "properties": {
               "AssessmentMethodId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               },
               "IsActive": {
                  "type": "boolean"
               }
            }
         },
         "AssessmentMethodRelationships": {
            "type": "object"
         },
         "AttendanceType": {
            "type": "object",
            "properties": {
               "AttendanceTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "AttendanceTypeRelationships": {
            "type": "object"
         },
         "AutoGradeRuleType": {
            "type": "object",
            "properties": {
               "AutoGradeRuleTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "AutoGradeRuleTypeRelationships": {
            "type": "object"
         },
         "AutoGradeStatus": {
            "type": "object",
            "properties": {
               "AutoGradeActivityStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "AutoGradeStatusRelationships": {
            "type": "object"
         },
         "AvStudyReason": {
            "type": "object",
            "properties": {
               "AvStudyReasonId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               },
               "Delimiters": {
                  "type": "string"
               }
            }
         },
         "AvStudyReasonRelationships": {
            "type": "object"
         },
         "CampusOperationType": {
            "type": "object",
            "properties": {
               "CampusOperationTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "CampusOperationTypeRelationships": {
            "type": "object"
         },
         "CloseLostReason": {
            "type": "object",
            "properties": {
               "CloseLostReasonId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "CloseLostReasonRelationships": {
            "type": "object"
         },
         "CommencingProgramCohort": {
            "type": "object",
            "properties": {
               "CommencingProgramCohortId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "CommencingProgramCohortRelationships": {
            "type": "object"
         },
         "CommencedAtSchoolFlag": {
            "type": "object",
            "properties": {
               "CommencedAtSchoolFlagId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "CommencedAtSchoolFlagRelationships": {
            "type": "object"
         },
         "CommencingCourse": {
            "type": "object",
            "properties": {
               "CommencingCourseId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "CommencingCourseRelationships": {
            "type": "object"
         },
         "CommencingStudentIdentifier": {
            "type": "object",
            "properties": {
               "CommencingStudentIdentifierId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "CommencingStudentIdentifierRelationships": {
            "type": "object"
         },
         "CompletionPathway": {
            "type": "object",
            "properties": {
               "CompletionPathwayId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               },
               "IsActive": {
                  "type": "boolean"
               }
            }
         },
         "CompletionPathwayRelationships": {
            "type": "object"
         },
         "CourseOfferStatus": {
            "type": "object",
            "properties": {
               "CourseOfferStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "CourseOfferStatusRelationships": {
            "type": "object"
         },
         "CourseOfferType": {
            "type": "object",
            "properties": {
               "CourseOfferTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "CourseOfferTypeRelationships": {
            "type": "object"
         },
         "ContractType": {
            "type": "object",
            "properties": {
               "ContractTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "ContractTypeRelationships": {
            "type": "object"
         },
         "Country": {
            "type": "object",
            "properties": {
               "CountryId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "CountryRelationships": {
            "type": "object"
         },
         "CredentialStatus": {
            "type": "object",
            "properties": {
               "CredentialStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "CredentialStatusRelationships": {
            "type": "object"
         },
         "Currency": {
            "type": "object",
            "properties": {
               "CurrencyId": {
                  "type": "integer",
                  "description": "Currency identifier",
                  "format": "int32"
               },
               "Code": {
                  "type": "string",
                  "description": "Currency code"
               },
               "Symbol": {
                  "type": "string",
                  "description": "Currency symbol"
               },
               "Description": {
                  "type": "string",
                  "description": "Currency description"
               }
            }
         },
         "CurrencyRelationships": {
            "type": "object"
         },
         "ElearningCourseStatus": {
            "type": "object",
            "properties": {
               "ElearningCourseStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "ElearningCourseStatusRelationships": {
            "type": "object"
         },
         "ElearningEnrolmentStatus": {
            "type": "object",
            "properties": {
               "ElearningEnrolmentStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "ElearningEnrolmentStatusRelationships": {
            "type": "object"
         },
         "EventType": {
            "type": "object",
            "properties": {
               "EventTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "EventTypeRelationships": {
            "type": "object"
         },
         "DeliveryMode": {
            "type": "object",
            "properties": {
               "DeliveryModeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Delimiters": {
                  "type": "string"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "DeliveryModeRelationships": {
            "type": "object"
         },
         "DeliveryModeAv8": {
            "type": "object",
            "properties": {
               "DeliveryModeAv8Id": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "DeliveryModeAv8Relationships": {
            "type": "object"
         },
         "DeliveryModeWa": {
            "type": "object",
            "properties": {
               "DeliveryModeWaId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "DeliveryModeWaRelationships": {
            "type": "object"
         },
         "DeliveryOption": {
            "type": "object",
            "properties": {
               "DeliveryOptionId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Name": {
                  "type": "string"
               },
               "IsActive": {
                  "type": "boolean"
               }
            }
         },
         "DeliveryOptionRelationships": {
            "type": "object"
         },
         "DepartmentCode": {
            "type": "object",
            "properties": {
               "DepartmentCodeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "DepartmentCodeRelationships": {
            "type": "object"
         },
         "Disability": {
            "type": "object",
            "properties": {
               "DisabilityId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "DisabilityRelationships": {
            "type": "object"
         },
         "DisabilityFlag": {
            "type": "object",
            "properties": {
               "DisabilityFlagId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "DisabilityFlagRelationships": {
            "type": "object"
         },
         "DurationType": {
            "type": "object",
            "properties": {
               "DurationTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "DurationTypeRelationships": {
            "type": "object"
         },
         "EmploymentStatus": {
            "type": "object",
            "properties": {
               "EmploymentStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "EmploymentStatusRelationships": {
            "type": "object"
         },
         "EnglishTestScoreType": {
            "type": "object",
            "properties": {
               "EnglishTestScoreTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "EnglishTestScoreTypeRelationships": {
            "type": "object"
         },
         "EnrolmentStatus": {
            "type": "object",
            "properties": {
               "EnrolmentStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "EnrolmentStatusRelationships": {
            "type": "object"
         },
         "EnrolmentStatusReason": {
            "type": "object",
            "properties": {
               "EnrolmentStatusReasonId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "EnrolmentStatusReasonRelationships": {
            "type": "object"
         },
         "ElementEnrolmentStatus": {
            "type": "object",
            "properties": {
               "ElementEnrolmentStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FeeAssessmentCategory": {
            "type": "object",
            "properties": {
               "FeeAssessmentCategoryId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FeeAssessmentCategoryRelationships": {
            "type": "object"
         },
         "FeeExemption": {
            "type": "object",
            "properties": {
               "FeeExemptionId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Delimiters": {
                  "type": "string"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FeeExemptionRelationships": {
            "type": "object"
         },
         "FeeExemptionWaiver": {
            "type": "object",
            "properties": {
               "FeeExemptionWaiverId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FeeExemptionWaiverRelationships": {
            "type": "object"
         },
         "FeesFreeEligible": {
            "type": "object",
            "properties": {
               "FeesFreeEligibleId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FeesFreeEligibleRelationships": {
            "type": "object"
         },
         "FeeTypeIndicator": {
            "type": "object",
            "properties": {
               "FeeTypeIndicatorId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FeeTypeIndicatorRelationships": {
            "type": "object"
         },
         "FhAdditionalEntranceCriteria": {
            "type": "object",
            "properties": {
               "FhAdditionalEntranceCriteriaId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FhAdditionalEntranceCriteriaRelationships": {
            "type": "object"
         },
         "FhBasisForAdmission": {
            "type": "object",
            "properties": {
               "FhBasisForAdmissionId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FhBasisForAdmissionRelationships": {
            "type": "object"
         },
         "FhCitizenResident": {
            "type": "object",
            "properties": {
               "FhCitizenResidentId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FhCitizenResidentRelationships": {
            "type": "object"
         },
         "FhFieldOfEducation": {
            "type": "object",
            "properties": {
               "FhFieldOfEducationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FhFieldOfEducationRelationships": {
            "type": "object"
         },
         "FhHighestEducationLevel": {
            "type": "object",
            "properties": {
               "FhHighestEducationLevelId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FhHighestEducationLevelRelationships": {
            "type": "object"
         },
         "FhIndigenousStatus": {
            "type": "object",
            "properties": {
               "FhIndigenousStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FhIndigenousStatusRelationships": {
            "type": "object"
         },
         "FhParentEducationLevel": {
            "type": "object",
            "properties": {
               "FhParentEducationLevelId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FhParentEducationLevelRelationships": {
            "type": "object"
         },
         "FhStudyReason": {
            "type": "object",
            "properties": {
               "FhStudyReasonId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FhStudyReasonRelationships": {
            "type": "object"
         },
         "FpsStatus": {
            "type": "object",
            "properties": {
               "FpsStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FpsStatusRelationships": {
            "type": "object"
         },
         "FpsWaiverReason": {
            "type": "object",
            "properties": {
               "FpsWaiverReasonId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FpsWaiverReasonRelationships": {
            "type": "object"
         },
         "FundSource": {
            "type": "object",
            "properties": {
               "FundSourceId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FundSourceRelationships": {
            "type": "object"
         },
         "FundSourceNational": {
            "type": "object",
            "properties": {
               "FundSourceNationalId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Delimiters": {
                  "type": "string"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FundSourceNationalRelationships": {
            "type": "object"
         },
         "FundSourceState": {
            "type": "object",
            "properties": {
               "FundSourceStateId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Delimiters": {
                  "type": "string"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "FundSourceStateRelationships": {
            "type": "object"
         },
         "Gender": {
            "type": "object",
            "properties": {
               "GenderId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "GenderRelationships": {
            "type": "object"
         },
         "HighestSchoolLevel": {
            "type": "object",
            "properties": {
               "HighestSchoolLevelCompletedId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "HighestSchoolLevelRelationships": {
            "type": "object"
         },
         "IndigenousStatus": {
            "type": "object",
            "properties": {
               "IndigenousStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "IndigenousStatusRelationships": {
            "type": "object"
         },
         "Industry": {
            "type": "object",
            "properties": {
               "IndustryId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               },
               "IsActive": {
                  "type": "boolean"
               }
            }
         },
         "IndustryRelationships": {
            "type": "object"
         },
         "IndustryOfEmployment": {
            "type": "object",
            "properties": {
               "IndustryOfEmploymentId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "IndustryOfEmploymentRelationships": {
            "type": "object"
         },
         "IndustrySize": {
            "type": "object",
            "properties": {
               "IndustrySizeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "IndustrySizeRelationships": {
            "type": "object"
         },
         "InternetBasedLearning": {
            "type": "object",
            "properties": {
               "InternetBasedLearningId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "InternetBasedLearningRelationships": {
            "type": "object"
         },
         "Language": {
            "type": "object",
            "properties": {
               "LanguageId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "LanguageRelationships": {
            "type": "object"
         },
         "LevelOfEducation": {
            "type": "object",
            "properties": {
               "LevelOfEducationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "LevelOfEducationRelationships": {
            "type": "object"
         },
         "LlnBenefit": {
            "type": "object",
            "properties": {
               "LlnBenefitId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               },
               "IsActive": {
                  "type": "boolean"
               }
            }
         },
         "LlnBenefitRelationships": {
            "type": "object"
         },
         "LlnLevel": {
            "type": "object",
            "properties": {
               "LlnLevelId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "LlnLevelRelationships": {
            "type": "object"
         },
         "LlnPostAssess": {
            "type": "object",
            "properties": {
               "LlnPostAssessId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "LlnPostAssessRelationships": {
            "type": "object"
         },
         "LlnPreAssess": {
            "type": "object",
            "properties": {
               "LlnPreAssessId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "LlnPreAssessRelationships": {
            "type": "object"
         },
         "MainSubject": {
            "type": "object",
            "properties": {
               "MainSubjectId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "MainSubjectRelationships": {
            "type": "object"
         },
         "ManagedApprenticeship": {
            "type": "object",
            "properties": {
               "ManagedApprenticeshipId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "ManagedApprenticeshipRelationships": {
            "type": "object"
         },
         "MaritalStatus": {
            "type": "object",
            "properties": {
               "MaritalStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "MaritalStatusRelationships": {
            "type": "object"
         },
         "MuralAttendance": {
            "type": "object",
            "properties": {
               "MuralAttendanceId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "MuralAttendanceRelationships": {
            "type": "object"
         },
         "NextOfKinRelationshipRelationships": {
            "type": "object"
         },
         "NzCountry": {
            "type": "object",
            "properties": {
               "NzCountryId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzCountryRelationships": {
            "type": "object"
         },
         "NzDisabilityAccessedFlag": {
            "type": "object",
            "properties": {
               "NzDisabilityAccessedId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzDisabilityAccessedFlagRelationships": {
            "type": "object"
         },
         "NzDisabilityFlag": {
            "type": "object",
            "properties": {
               "NzDisabilityFlagId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzDisabilityFlagRelationships": {
            "type": "object"
         },
         "NzEthnicity": {
            "type": "object",
            "properties": {
               "NzEthnicityId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzEthnicityRelationships": {
            "type": "object"
         },
         "NzGender": {
            "type": "object",
            "properties": {
               "NzGenderId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzGenderRelationships": {
            "type": "object"
         },
         "NzIwiAffiliation": {
            "type": "object",
            "properties": {
               "NzIwiAffiliationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzIwiAffiliationRelationships": {
            "type": "object"
         },
         "NzLastSchoolAttended": {
            "type": "object",
            "properties": {
               "NzLastSchoolAttendedId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzLastSchoolAttendedRelationships": {
            "type": "object"
         },
         "NzEmploymentLocationCode": {
            "type": "object",
            "properties": {
               "NzEmploymentLocationCodeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzEmploymentLocationCodeRelationships": {
            "type": "object"
         },
         "NzMainActivityPriorToStudy": {
            "type": "object",
            "properties": {
               "NzMainActivityPriorToStudyId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzMainActivityPriorToStudyRelationships": {
            "type": "object"
         },
         "NzOutcome": {
            "type": "object",
            "properties": {
               "NzOutcomeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzOutcomeRelationships": {
            "type": "object"
         },
         "NzqaAwardingProvider": {
            "type": "object",
            "properties": {
               "NzqaAwardingProviderId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               },
               "Location": {
                  "type": "string"
               }
            }
         },
         "NzqaAwardingProviderRelationships": {
            "type": "object"
         },
         "NzqaRequestType": {
            "type": "object",
            "properties": {
               "NzqaRequestTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzqaRequestTypeRelationships": {
            "type": "object"
         },
         "NzqaResult": {
            "type": "object",
            "properties": {
               "NzqaResultId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzqaResultRelationships": {
            "type": "object"
         },
         "NzResidentialStatus": {
            "type": "object",
            "properties": {
               "NzResidentialStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzResidentialStatusRelationships": {
            "type": "object"
         },
         "NzSecondaryQualification": {
            "type": "object",
            "properties": {
               "NzSecondaryQualificationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzSecondaryQualificationRelationships": {
            "type": "object"
         },
         "NzVisaType": {
            "type": "object",
            "properties": {
               "NzVisaTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "NzVisaTypeRelationships": {
            "type": "object"
         },
         "OccupationIdentifier": {
            "type": "object",
            "properties": {
               "OccupationIdentifierId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "OccupationIdentifierRelationships": {
            "type": "object"
         },
         "OffshoreDeliveryIndicator": {
            "type": "object",
            "properties": {
               "OffshoreDeliveryIndicatorId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "OffshoreDeliveryIndicatorRelationships": {
            "type": "object"
         },
         "OffshoreDeliveryMode": {
            "type": "object",
            "properties": {
               "OffshoreDeliveryModeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "OffshoreDeliveryModeRelationships": {
            "type": "object"
         },
         "OpportunitySource": {
            "type": "object",
            "properties": {
               "OpportunitySourceId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "OpportunitySourceRelationships": {
            "type": "object"
         },
         "OpportunityStage": {
            "type": "object",
            "properties": {
               "OpportunityStageId": {
                  "type": "integer",
                  "description": "Primary Id for Opportunity Stage that is auto generated",
                  "format": "int32"
               },
               "Description": {
                  "type": "string",
                  "description": "Description used to identify the Opportunity Stage"
               },
               "WinProbablityId": {
                  "type": "integer",
                  "description": "See combos WinProbabilities",
                  "format": "int32"
               },
               "OrderNumber": {
                  "type": "integer",
                  "description": "Unique, sequential number beginning with 1",
                  "format": "int32"
               }
            }
         },
         "OpportunityStageRelationships": {
            "type": "object",
            "properties": {
               "WinProbability": {
                  "$ref": "#/components/schemas/WinProbability"
               }
            }
         },
         "OpportunityType": {
            "type": "object",
            "properties": {
               "OpportunityTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "OpportunityTypeRelationships": {
            "type": "object"
         },
         "Outcome": {
            "type": "object",
            "properties": {
               "OutcomeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               },
               "Delimiters": {
                  "type": "string"
               }
            }
         },
         "OutcomeRelationships": {
            "type": "object"
         },
         "PayLevel": {
            "type": "object",
            "properties": {
               "PayLevelId": {
                  "type": "integer",
                  "format": "int32"
               },
               "IsActive": {
                  "type": "boolean"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "PayLevelRelationships": {
            "type": "object"
         },
         "PaymentType": {
            "type": "object",
            "properties": {
               "PaymentTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               },
               "IsActive": {
                  "type": "boolean"
               }
            }
         },
         "PaymentTypeRelationships": {
            "type": "object"
         },
         "PeriodType": {
            "type": "object",
            "properties": {
               "PeriodTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "PeriodTypeRelationships": {
            "type": "object"
         },
         "Pipeline": {
            "type": "object",
            "properties": {
               "PipelineId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               },
               "IsActive": {
                  "type": "boolean"
               }
            }
         },
         "PipelineRelationships": {
            "type": "object"
         },
         "Position": {
            "type": "object",
            "properties": {
               "PositionId": {
                  "type": "integer",
                  "format": "int32"
               },
               "IsActive": {
                  "type": "boolean"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "PositionRelationships": {
            "type": "object"
         },
         "PredominantDeliveryMode": {
            "type": "object",
            "properties": {
               "PredominantDeliveryModeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "PredominantDeliveryModeRelationships": {
            "type": "object"
         },
         "PriorEducationFlag": {
            "type": "object",
            "properties": {
               "PriorEducationFlagId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "PriorEducationFlagRelationships": {
            "type": "object"
         },
         "PriorEducation": {
            "type": "object",
            "properties": {
               "PriorEducationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "PriorEducationRelationships": {
            "type": "object"
         },
         "PriorEducationType": {
            "type": "object",
            "properties": {
               "PriorEducationTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "PriorEducationTypeRelationships": {
            "type": "object"
         },
         "PublishType": {
            "type": "object",
            "properties": {
               "PublishTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Name": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "PublishTypeRelationships": {
            "type": "object"
         },
         "Program": {
            "type": "object",
            "properties": {
               "ProgramId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Name": {
                  "type": "string"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "ProgramRelationships": {
            "type": "object"
         },
         "ProgramStatus": {
            "type": "object",
            "properties": {
               "ProgramStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "ProgramStatusRelationships": {
            "type": "object"
         },
         "QualificationFieldOfEducation": {
            "type": "object",
            "properties": {
               "QualificationFieldOfEducationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "QualificationFieldOfEducationRelationships": {
            "type": "object"
         },
         "RecognitionStatus": {
            "type": "object",
            "properties": {
               "RecognitionStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "RecognitionStatusRelationships": {
            "type": "object"
         },
         "RecipientType": {
            "type": "object",
            "properties": {
               "RecipientTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Type": {
                  "type": "string",
                  "description": "The type of recipient. Valid values are 'Email' and 'Sms'"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "RecipientTypeRelationships": {
            "type": "object"
         },
         "Region": {
            "type": "object",
            "properties": {
               "RegionId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               },
               "IsActive": {
                  "type": "boolean"
               }
            }
         },
         "RegionRelationships": {
            "type": "object"
         },
         "Result": {
            "type": "object",
            "properties": {
               "ResultId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "ResultRelationships": {
            "type": "object"
         },
         "RtoStatus": {
            "type": "object",
            "properties": {
               "RtoStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "RtoStatusRelationships": {
            "type": "object"
         },
         "SaAlternativeIdentifierType": {
            "type": "object",
            "properties": {
               "SaAlternativeIdTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SaAlternativeIdentifierTypeRelationships": {
            "type": "object"
         },
         "SaCitizenResidentStatus": {
            "type": "object",
            "properties": {
               "SaCitizenResidentStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SaCitizenResidentStatusRelationships": {
            "type": "object"
         },
         "SaEquity": {
            "type": "object",
            "properties": {
               "SaEquityId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SaEquityRelationships": {
            "type": "object"
         },
         "SaHealthRating": {
            "type": "object",
            "properties": {
               "SaHealthRatingId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SaHealthRatingRelationships": {
            "type": "object"
         },
         "SaHighestQualificationType": {
            "type": "object",
            "properties": {
               "SaHighestQualificationTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SaHighestQualificationTypeRelationships": {
            "type": "object"
         },
         "SaLanguage": {
            "type": "object",
            "properties": {
               "SaLanguageId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SaLanguageRelationships": {
            "type": "object"
         },
         "SaNationality": {
            "type": "object",
            "properties": {
               "SaNationalityId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SaNationalityRelationships": {
            "type": "object"
         },
         "SaProvince": {
            "type": "object",
            "properties": {
               "SaProvinceId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SaProvinceRelationships": {
            "type": "object"
         },
         "SaSocioeconomicStatus": {
            "type": "object",
            "properties": {
               "SaSocioeconomicStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SaSocioeconomicStatusRelationships": {
            "type": "object"
         },
         "SalesContactStage": {
            "type": "object",
            "properties": {
               "SalesContactStageId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SalesContactStageRelationships": {
            "type": "object"
         },
         "SalesContactType": {
            "type": "object",
            "properties": {
               "SalesContactTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SalesContactTypeRelationships": {
            "type": "object"
         },
         "ScholarshipType": {
            "type": "object",
            "properties": {
               "ScholarshipTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "ScholarshipTypeRelationships": {
            "type": "object"
         },
         "SchoolType": {
            "type": "object",
            "properties": {
               "SchoolTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SchoolTypeRelationships": {
            "type": "object"
         },
         "SeparationStatus": {
            "type": "object",
            "properties": {
               "SeparationStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SeparationStatusRelationships": {
            "type": "object"
         },
         "SgNricType": {
            "type": "object",
            "properties": {
               "SgNRICTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SgNricTypeRelationships": {
            "type": "object"
         },
         "SgPriorEducation": {
            "type": "object",
            "properties": {
               "SgPriorEducationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SgPriorEducationRelationships": {
            "type": "object"
         },
         "SgPriorEducationWsq": {
            "type": "object",
            "properties": {
               "SgPriorEducationWSQId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SgPriorEducationWsqRelationships": {
            "type": "object"
         },
         "SgNationality": {
            "type": "object",
            "properties": {
               "SgNationalityId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SgNationalityRelationships": {
            "type": "object"
         },
         "SgCitizenPrStatus": {
            "type": "object",
            "properties": {
               "SgResidentialStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SgCitizenPrStatusRelationships": {
            "type": "object"
         },
         "SgIdentityDocumentType": {
            "type": "object",
            "properties": {
               "SgIdentityDocumentTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SgIdentityDocumentTypeRelationships": {
            "type": "object"
         },
         "SgRace": {
            "type": "object",
            "properties": {
               "SgRaceId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SgRaceRelationships": {
            "type": "object"
         },
         "SpecificProgramIdentifier": {
            "type": "object",
            "properties": {
               "SpecificProgramIdentifierId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SpecificProgramIdentifierRelationships": {
            "type": "object"
         },
         "SpokenEnglishProficiency": {
            "type": "object",
            "properties": {
               "SpokenEnglishProficiencyId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SpokenEnglishProficiencyRelationships": {
            "type": "object"
         },
         "State": {
            "type": "object",
            "properties": {
               "StateId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "ShortDescription": {
                  "type": "string"
               },
               "LongDescription": {
                  "type": "string"
               }
            }
         },
         "StateRelationships": {
            "type": "object"
         },
         "StudentPassRequirement": {
            "type": "object",
            "properties": {
               "StudentPassRequirementId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "StudentPassRequirementRelationships": {
            "type": "object"
         },
         "StudylinkStatus": {
            "type": "object",
            "properties": {
               "StudylinkStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "StudylinkStatusRelationships": {
            "type": "object"
         },
         "StudylinkStatusReason": {
            "type": "object",
            "properties": {
               "StudylinkStatusReasonId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "StudylinkStatusReasonRelationships": {
            "type": "object"
         },
         "StudyMode": {
            "type": "object",
            "properties": {
               "StudyModeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "StudyModeRelationships": {
            "type": "object"
         },
         "SurveyStatus": {
            "type": "object",
            "properties": {
               "SurveyStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SurveyStatusRelationships": {
            "type": "object"
         },
         "TargetGroupCourseEnrolment": {
            "type": "object",
            "properties": {
               "TargetGroupCourseEnrolmentId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "TargetGroupCourseEnrolmentRelationships": {
            "type": "object"
         },
         "TargetGroupClient": {
            "type": "object",
            "properties": {
               "TargetGroupLearnerId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "TargetGroupClientRelationships": {
            "type": "object"
         },
         "TaskCompletionStatus": {
            "type": "object",
            "properties": {
               "TaskCompletionStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "TaskCompletionStatusRelationships": {
            "type": "object"
         },
         "TaskPriority": {
            "type": "object",
            "properties": {
               "TaskPriorityId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "TaskPriorityRelationships": {
            "type": "object"
         },
         "UnitFieldOfEducation": {
            "type": "object",
            "properties": {
               "UnitFieldOfEducationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "UnitFieldOfEducationRelationships": {
            "type": "object"
         },
         "UnitOfCompetencyFlag": {
            "type": "object",
            "properties": {
               "UnitOfCompetencyFlagId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "UnitOfCompetencyFlagRelationships": {
            "type": "object"
         },
         "UnitType": {
            "type": "object",
            "properties": {
               "UnitTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "UnitTypeRelationships": {
            "type": "object"
         },
         "Venue": {
            "type": "object",
            "properties": {
               "VenueId": {
                  "type": "integer",
                  "format": "int32"
               },
               "IsActive": {
                  "type": "boolean"
               },
               "Description": {
                  "type": "string"
               },
               "Address1": {
                  "type": "string"
               },
               "Address2": {
                  "type": "string"
               },
               "Address3": {
                  "type": "string"
               },
               "Capacity": {
                  "type": "integer",
                  "format": "int32"
               },
               "ContactName": {
                  "type": "string"
               },
               "Telephone": {
                  "type": "string"
               },
               "RoomNumber": {
                  "type": "string"
               },
               "Notes": {
                  "type": "string"
               },
               "HowToGetThere": {
                  "type": "string"
               },
               "Fee": {
                  "type": "number",
                  "format": "double"
               }
            }
         },
         "VenueRelationships": {
            "type": "object"
         },
         "VaccineStatus": {
            "type": "object",
            "properties": {
               "VaccineStatusId": {
                  "type": "integer",
                  "description": "Vaccine status Id",
                  "format": "int32"
               },
               "Description": {
                  "type": "string",
                  "description": "Vaccine status description"
               },
               "IsActive": {
                  "type": "boolean",
                  "description": "Whether vaccine status is active"
               }
            }
         },
         "VaccineStatusRelationships": {
            "type": "object"
         },
         "VisaType": {
            "type": "object",
            "properties": {
               "VisaTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "VisaTypeRelationships": {
            "type": "object"
         },
         "VisaRelationships": {
            "type": "object"
         },
         "UReportTemplateType": {
            "type": "object",
            "properties": {
               "TemplateTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Name": {
                  "type": "string"
               },
               "EntityName": {
                  "type": "string"
               }
            }
         },
         "UReportTemplateTypeRelationships": {
            "type": "object"
         },
         "WinProbability": {
            "type": "object",
            "properties": {
               "WinProbabilityId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               },
               "Value": {
                  "type": "integer",
                  "format": "int32"
               }
            }
         },
         "WinProbabilityRelationships": {
            "type": "object"
         },
         "WorkplaceClassification": {
            "type": "object",
            "properties": {
               "WorkplaceClassificationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "IsActive": {
                  "type": "boolean"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "WorkplaceClassificationRelationships": {
            "type": "object"
         },
         "WorkplaceType": {
            "type": "object",
            "properties": {
               "WorkplaceTypeId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "WorkplaceTypeRelationships": {
            "type": "object"
         },
         "PromotionBasic": {
            "type": "object",
            "properties": {
               "PromotionId": {
                  "type": "integer",
                  "description": "Primary Id for Promotion that is auto generated",
                  "format": "int32"
               },
               "Code": {
                  "type": "string",
                  "description": "Code used to identify the Promotion"
               },
               "Description": {
                  "type": "string",
                  "description": "Description used to identify the Promotion"
               },
               "StartDate": {
                  "type": "string",
                  "description": "Date Promotion starts",
                  "format": "date-time"
               },
               "EndDate": {
                  "type": "string",
                  "description": "Date Promotion ends",
                  "format": "date-time"
               }
            }
         },
         "SalesContactShort": {
            "properties": {
               "SalesContactId": {
                  "type": "integer",
                  "format": "int32"
               },
               "SalesContactGuid": {
                  "type": "string",
                  "format": "uuid"
               },
               "FirstName": {
                  "type": "string"
               },
               "LastName": {
                  "type": "string"
               },
               "Email": {
                  "type": "string"
               },
               "SalesContactTypeId": {
                  "type": "integer",
                  "format": "int32"
               }
            }
         },
         "ShortChecklistItem": {
            "type": "object",
            "properties": {
               "ChecklistItemId": {
                  "type": "integer",
                  "description": "Primary Id for checklist item that is auto generated",
                  "format": "int32"
               },
               "Type": {
                  "type": "string",
                  "description": "Allows checklist items to be grouped by a type"
               },
               "Description": {
                  "type": "string",
                  "description": "Used to identify the checklist"
               },
               "IsActive": {
                  "type": "boolean",
                  "description": "To indicate if the checklist item is active or no"
               }
            }
         },
         "PublishDetailsCourse": {
            "type": "object",
            "properties": {
               "PublishFlag": {
                  "type": "boolean"
               },
               "PublishCode": {
                  "type": "string"
               },
               "PublishName": {
                  "type": "string"
               },
               "PublishShortInfo": {
                  "type": "string"
               },
               "PublishInfo": {
                  "type": "string"
               },
               "PublishCalendarViewFlag": {
                  "type": "boolean"
               },
               "PublishImageFlag": {
                  "type": "boolean"
               },
               "PublishSites": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/PublishSitesCourse"
                  }
               }
            }
         },
         "TargetGroupsCourse": {
            "type": "object",
            "properties": {
               "TargetGroupCourseId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               },
               "IsActive": {
                  "type": "boolean"
               }
            }
         },
         "CourseInternalQualification": {
            "type": "object",
            "properties": {
               "CourseInternalQualificationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               },
               "IsActive": {
                  "type": "boolean"
               }
            }
         },
         "NzSource": {
            "type": "object",
            "properties": {
               "NzSourceId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "SgQualificationCategory": {
            "type": "object",
            "properties": {
               "SgQualificationCategoryId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "OpportunityBasic": {
            "properties": {
               "OpportunityId": {
                  "type": "integer",
                  "description": "Primary Id for opportunity that is auto generated",
                  "format": "int32"
               },
               "Description": {
                  "type": "string",
                  "description": "Brief description of the opportunity",
                  "format": "150"
               }
            }
         },
         "AgentBasic": {
            "type": "object",
            "properties": {
               "AgentId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "CourseBasic": {
            "type": "object",
            "properties": {
               "CourseId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CourseCode": {
                  "type": "string"
               },
               "CourseDesc": {
                  "type": "string"
               }
            }
         },
         "WorkplaceBasic": {
            "type": "object",
            "properties": {
               "WorkplaceId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "Contract": {
            "type": "object",
            "properties": {
               "ContractId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               },
               "StateId": {
                  "type": "integer",
                  "format": "int32"
               },
               "StartDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "EndDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "TrainingScheduleCode": {
                  "type": "string"
               },
               "TrainingScheduleDescription": {
                  "type": "string"
               }
            }
         },
         "VenueBasic": {
            "type": "object",
            "properties": {
               "VenueId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "CourseEnrolmentBasic": {
            "type": "object",
            "properties": {
               "CourseEnrolmentId": {
                  "type": "integer",
                  "format": "int32"
               },
               "LearnerId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CourseOfferId": {
                  "type": "integer",
                  "format": "int32"
               },
               "StartDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "EndDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "ActualEndDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "EnrolmentStatusId": {
                  "type": "integer",
                  "format": "int32"
               },
               "EnrolmentStatusDescription": {
                  "type": "string"
               }
            }
         },
         "UnitEnrolmentShort": {
            "type": "object",
            "properties": {
               "UnitEnrolmentId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CourseEnrolmentId": {
                  "type": "integer",
                  "format": "int32"
               },
               "LearnerId": {
                  "type": "integer",
                  "format": "int32"
               }
            }
         },
         "ElementBasic": {
            "type": "object",
            "properties": {
               "ElementId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "CreatedByUser": {
            "type": "object",
            "properties": {
               "UserId": {
                  "type": "integer",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string"
               },
               "LastName": {
                  "type": "string"
               }
            }
         },
         "LastModifiedUser": {
            "type": "object",
            "properties": {
               "UserId": {
                  "type": "integer",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string"
               },
               "LastName": {
                  "type": "string"
               }
            }
         },
         "RecordInfo": {
            "type": "object",
            "properties": {
               "Name": {
                  "type": "string",
                  "description": "Read only field. Returns name of the record where applicable."
               },
               "Email": {
                  "type": "string",
                  "description": "Read only field. Returns email of the record where applicable."
               },
               "Mobile": {
                  "type": "string",
                  "description": "Read only field. Returns mobile of the record where applicable."
               }
            }
         },
         "LearnerAuDemographicsPriorEducationAchievement": {
            "type": "object",
            "properties": {
               "PriorEducationId": {
                  "type": "integer",
                  "description": "See combo PriorEducations",
                  "format": "int32"
               },
               "PriorEducationTypeId": {
                  "type": "integer",
                  "description": "See combo PriorEducationTypes",
                  "format": "int32"
               }
            }
         },
         "LearnerAuDemographicsEnglishTestScore": {
            "type": "object",
            "properties": {
               "Overall": {
                  "type": "integer",
                  "description": "The overall english score achieved",
                  "format": "int32"
               },
               "OverallDecimal": {
                  "type": "number",
                  "description": "The overall english score achieved (decimal)"
               },
               "TypeId": {
                  "type": "integer",
                  "description": "See combo EnglishTestScoreTypes",
                  "format": "int32"
               },
               "Listening": {
                  "type": "integer",
                  "description": "Listening score",
                  "format": "int32"
               },
               "ListeningDecimal": {
                  "type": "number",
                  "description": "Listening score  (decimal)"
               },
               "Speaking": {
                  "type": "integer",
                  "description": "Speaking score",
                  "format": "int32"
               },
               "SpeakingDecimal": {
                  "type": "number",
                  "description": "Speaking score (decimal)"
               },
               "Reading": {
                  "type": "integer",
                  "description": "Reading score",
                  "format": "int32"
               },
               "ReadingDecimal": {
                  "type": "number",
                  "description": "Reading score (decimal)"
               },
               "Writing": {
                  "type": "integer",
                  "description": "Writing score",
                  "format": "int32"
               },
               "WritingDecimal": {
                  "type": "number",
                  "description": "Writing score (decimal)"
               },
               "ExpiryDate": {
                  "type": "string",
                  "description": "Expiry Date of the english test scores",
                  "format": "date-time"
               }
            }
         },
         "LearnerAuDemographicsDisability": {
            "type": "object",
            "properties": {
               "DisabilityId": {
                  "type": "integer",
                  "description": "See combo Disabilities",
                  "format": "int32"
               },
               "EffectiveFromDate": {
                  "type": "string",
                  "description": "Date Disability is effective from",
                  "format": "date-time"
               },
               "EffectiveToDate": {
                  "type": "string",
                  "description": "Date Disability is effective to",
                  "format": "date-time"
               }
            }
         },
         "LearnerAuDemographicsFeeHelp": {
            "type": "object",
            "properties": {
               "TertiaryEntranceScore": {
                  "type": "integer",
                  "description": "Code that indicates the tertiary entrance score",
                  "format": "int32"
               },
               "Year12Postcode": {
                  "type": "string",
                  "description": "Year 12 Postcode",
                  "format": "20"
               },
               "Year12Suburb": {
                  "type": "string",
                  "description": "Year 12 Suburb",
                  "format": "50"
               },
               "YearLeftSchool": {
                  "type": "string",
                  "description": "Year learner left school",
                  "format": "4"
               },
               "IndigenousStatusId": {
                  "type": "integer",
                  "description": "See combo IndigenousStatuses",
                  "format": "int32"
               },
               "CitizenResidentId": {
                  "type": "integer",
                  "description": "Obsolete. Use Citizenships instead",
                  "format": "int32"
               },
               "YearArrivedInAustralia": {
                  "type": "integer",
                  "description": "Year learner arrived in Australia",
                  "format": "int32"
               },
               "HighestEducationLevelId": {
                  "type": "integer",
                  "description": "See combo FhHighestEducationLevels",
                  "format": "int32"
               },
               "HighestEducationLevelYear": {
                  "type": "integer",
                  "description": "Year the highest education level was completed",
                  "format": "int32"
               },
               "ParentEducationLevelId1": {
                  "type": "integer",
                  "description": "See combo FhParentEducationLevels",
                  "format": "int32"
               },
               "ParentEducationLevelId2": {
                  "type": "integer",
                  "description": "See combo FhParentEducationLevels",
                  "format": "int32"
               },
               "AdditionalEntranceCriteriaId": {
                  "type": "integer",
                  "description": "See combo FhAdditionalEntranceCriteria",
                  "format": "int32"
               },
               "Atar": {
                  "type": "number",
                  "description": "Value that indicates Atar. Between 0 and 99.99",
                  "format": "double"
               },
               "SelectionRank": {
                  "type": "number",
                  "description": "Value that indicates Selection Rank. Between 0 and 99.99",
                  "format": "double"
               },
               "BasisForAdmissionId": {
                  "type": "integer",
                  "description": "See combo FhBasisForAdmission",
                  "format": "int32"
               }
            }
         },
         "LearnerAuDemographicsCitizenship": {
            "type": "object",
            "properties": {
               "CitizenResidentId": {
                  "type": "integer",
                  "description": "See combo FhCitizenResident",
                  "format": "int32"
               },
               "EffectiveFromDate": {
                  "type": "string",
                  "description": "Date Citizenship is effective from",
                  "format": "date-time"
               }
            }
         },
         "LearnerAuInternationalAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "International address of the learner",
                  "format": "50"
               },
               "AddressLine2": {
                  "type": "string",
                  "description": "International address details of the learner continued",
                  "format": "50"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of learner's international address",
                  "format": "50"
               },
               "State": {
                  "type": "string",
                  "description": "State of learner's international address",
                  "format": "70"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's international address",
                  "format": "30"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               }
            }
         },
         "LearnerAuNextOfKinLocalNextOfKin": {
            "type": "object",
            "properties": {
               "RelationshipId": {
                  "type": "integer",
                  "description": "See combo NextOfKinRelationships",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First Name of local next of kin",
                  "format": "20"
               },
               "MiddleName": {
                  "type": "string",
                  "description": "Middle Name of local next of kin",
                  "format": "20"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last Name of local next of kin",
                  "format": "40"
               },
               "Address": {
                  "$ref": "#/components/schemas/LearnerAuNextOfKinLocalNextOfKinAddress"
               },
               "Occupation": {
                  "type": "string",
                  "description": "Occupation of local next of kin",
                  "format": "100"
               },
               "PassportNumber": {
                  "type": "string",
                  "description": "Passport number of local next of kin",
                  "format": "20"
               },
               "PassportCountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               },
               "PhoneHome": {
                  "type": "string",
                  "description": "Home Number of local next of kin",
                  "format": "20"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "Work Number of local next of kin",
                  "format": "20"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Mobile Number of local next of kin. Accepts numbers only. International format is preferable eg. +614xxxxxxxxx\".",
                  "format": "20"
               },
               "Email": {
                  "type": "string",
                  "description": "Email Address of local next of kin",
                  "format": "100"
               }
            }
         },
         "LearnerAuNextOfKinInternationalNextOfKin": {
            "type": "object",
            "properties": {
               "RelationshipId": {
                  "type": "integer",
                  "description": "See combo NextOfKinRelationships",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First Name of international next of kin",
                  "format": "50"
               },
               "MiddleName": {
                  "type": "string",
                  "description": "Middle Name of international next of kin",
                  "format": "20"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last Name of international next of kin",
                  "format": "50"
               },
               "Address": {
                  "$ref": "#/components/schemas/LearnerAuNextOfKinInternationalNextOfKinAddress"
               },
               "PhoneHome": {
                  "type": "string",
                  "description": "Home Number of international next of kin",
                  "format": "20"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "Work Number of international next of kin",
                  "format": "20"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Mobile Number of international next of kin. Accepts numbers only. International format is preferable eg. +614xxxxxxxxx\".",
                  "format": "20"
               },
               "Email": {
                  "type": "string",
                  "description": "Email Address of international next of kin",
                  "format": "100"
               }
            }
         },
         "NzStandardCodeCountry": {
            "type": "object",
            "properties": {
               "NzStandardCodeCountryId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "LearnerNzDemographicsPriorEducationAchievement": {
            "type": "object",
            "properties": {
               "PriorEducationId": {
                  "type": "integer",
                  "description": "See combo PriorEducations",
                  "format": "int32"
               }
            }
         },
         "LearnerNzDemographicsEnglishTestScore": {
            "type": "object",
            "properties": {
               "Overall": {
                  "type": "integer",
                  "description": "The overall english score achieved",
                  "format": "int32"
               },
               "OverallDecimal": {
                  "type": "number",
                  "description": "The overall english score achieved (decimal)"
               },
               "TypeId": {
                  "type": "integer",
                  "description": "See combo EnglishTestScoreTypes",
                  "format": "int32"
               },
               "Listening": {
                  "type": "integer",
                  "description": "Listening score",
                  "format": "int32"
               },
               "ListeningDecimal": {
                  "type": "number",
                  "description": "Listening score  (decimal)"
               },
               "Speaking": {
                  "type": "integer",
                  "description": "Speaking score",
                  "format": "int32"
               },
               "SpeakingDecimal": {
                  "type": "number",
                  "description": "Speaking score (decimal)"
               },
               "Reading": {
                  "type": "integer",
                  "description": "Reading score",
                  "format": "int32"
               },
               "ReadingDecimal": {
                  "type": "number",
                  "description": "Reading score (decimal)"
               },
               "Writing": {
                  "type": "integer",
                  "description": "Writing score",
                  "format": "int32"
               },
               "WritingDecimal": {
                  "type": "number",
                  "description": "Writing score (decimal)"
               },
               "ExpiryDate": {
                  "type": "string",
                  "description": "Expiry Date of the english test scores",
                  "format": "date-time"
               }
            }
         },
         "LearnerNzDemographicsDisability": {
            "type": "object",
            "properties": {
               "DisabilityId": {
                  "type": "integer",
                  "description": "See combo Disabilities",
                  "format": "int32"
               },
               "EffectiveFromDate": {
                  "type": "string",
                  "description": "Date Disability is effective from",
                  "format": "date-time"
               },
               "EffectiveToDate": {
                  "type": "string",
                  "description": "Date Disability is effective to",
                  "format": "date-time"
               }
            }
         },
         "LearnerNzInternationalAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "International address of the learner",
                  "format": "50"
               },
               "AddressLine2": {
                  "type": "string",
                  "description": "International address details of the learner continued",
                  "format": "50"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of learner's international address",
                  "format": "50"
               },
               "State": {
                  "type": "string",
                  "description": "State of learner's international address",
                  "format": "70"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's international address",
                  "format": "30"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               }
            }
         },
         "LearnerNzNextOfKinLocalNextOfKin": {
            "type": "object",
            "properties": {
               "RelationshipId": {
                  "type": "integer",
                  "description": "See combo NextOfKinRelationships",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First Name of local next of kin",
                  "format": "20"
               },
               "MiddleName": {
                  "type": "string",
                  "description": "Middle Name of local next of kin",
                  "format": "20"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last Name of local next of kin",
                  "format": "40"
               },
               "Address": {
                  "$ref": "#/components/schemas/LearnerNzNextOfKinLocalNextOfKinAddress"
               },
               "Occupation": {
                  "type": "string",
                  "description": "Occupation of local next of kin",
                  "format": "100"
               },
               "PassportNumber": {
                  "type": "string",
                  "description": "Passport number of local next of kin",
                  "format": "20"
               },
               "PassportCountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "PhoneHome": {
                  "type": "string",
                  "description": "Home Number of local next of kin",
                  "format": "20"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "Work Number of local next of kin",
                  "format": "20"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Mobile Number of local next of kin. Accepts numbers only. International format is preferable eg. +614xxxxxxxxx\".",
                  "format": "20"
               },
               "Email": {
                  "type": "string",
                  "description": "Email Address of local next of kin",
                  "format": "100"
               }
            }
         },
         "LearnerNzNextOfKinInternationalNextOfKin": {
            "type": "object",
            "properties": {
               "RelationshipId": {
                  "type": "integer",
                  "description": "See combo NextOfKinRelationships",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First Name of international next of kin",
                  "format": "50"
               },
               "MiddleName": {
                  "type": "string",
                  "description": "Middle Name of international next of kin",
                  "format": "20"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last Name of international next of kin",
                  "format": "50"
               },
               "Address": {
                  "$ref": "#/components/schemas/LearnerNzNextOfKinInternationalNextOfKinAddress"
               },
               "PhoneHome": {
                  "type": "string",
                  "description": "Home Number of international next of kin",
                  "format": "20"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "Work Number of international next of kin",
                  "format": "20"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Mobile Number of international next of kin. Accepts numbers only. International format is preferable eg. +614xxxxxxxxx\".",
                  "format": "20"
               },
               "Email": {
                  "type": "string",
                  "description": "Email Address of international next of kin",
                  "format": "100"
               }
            }
         },
         "LearnerSgDemographicsEnglishTestScore": {
            "type": "object",
            "properties": {
               "Overall": {
                  "type": "integer",
                  "description": "The overall english score achieved",
                  "format": "int32"
               },
               "OverallDecimal": {
                  "type": "number",
                  "description": "The overall english score achieved (decimal)"
               },
               "TypeId": {
                  "type": "integer",
                  "description": "See combo EnglishTestScoreTypes",
                  "format": "int32"
               },
               "Listening": {
                  "type": "integer",
                  "description": "Listening score",
                  "format": "int32"
               },
               "ListeningDecimal": {
                  "type": "number",
                  "description": "Listening score  (decimal)"
               },
               "Speaking": {
                  "type": "integer",
                  "description": "Speaking score",
                  "format": "int32"
               },
               "SpeakingDecimal": {
                  "type": "number",
                  "description": "Speaking score (decimal)"
               },
               "Reading": {
                  "type": "integer",
                  "description": "Reading score",
                  "format": "int32"
               },
               "ReadingDecimal": {
                  "type": "number",
                  "description": "Reading score (decimal)"
               },
               "Writing": {
                  "type": "integer",
                  "description": "Writing score",
                  "format": "int32"
               },
               "WritingDecimal": {
                  "type": "number",
                  "description": "Writing score (decimal)"
               },
               "ExpiryDate": {
                  "type": "string",
                  "description": "Expiry Date of the english test scores",
                  "format": "date-time"
               }
            }
         },
         "LearnerSaDemographicsDisabilityInfo": {
            "type": "object",
            "properties": {
               "SeeingHealthRatingId": {
                  "type": "integer",
                  "description": "See combo SaHealthRatings",
                  "format": "int32"
               },
               "HearingHealthRatingId": {
                  "type": "integer",
                  "description": "See combo SaHealthRatings",
                  "format": "int32"
               },
               "CommunicatingHealthRatingId": {
                  "type": "integer",
                  "description": "See combo SaHealthRatings",
                  "format": "int32"
               },
               "WalkingHealthRatingId": {
                  "type": "integer",
                  "description": "See combo SaHealthRatings",
                  "format": "int32"
               },
               "RememberingHealthRatingId": {
                  "type": "integer",
                  "description": "See combo SaHealthRatings",
                  "format": "int32"
               },
               "SelfcareHealthRatingId": {
                  "type": "integer",
                  "description": "See combo SaHealthRatings",
                  "format": "int32"
               },
               "DisabilityAdviceFlag": {
                  "type": "boolean",
                  "description": "Disability advice flag"
               }
            }
         },
         "LearnerSaInternationalAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "International address of the learner",
                  "format": "50"
               },
               "AddressLine2": {
                  "type": "string",
                  "description": "International address details of the learner continued",
                  "format": "50"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of learner's international address",
                  "format": "50"
               },
               "State": {
                  "type": "string",
                  "description": "State of learner's international address",
                  "format": "70"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's international address",
                  "format": "30"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               }
            }
         },
         "LearnerSaNextOfKinLocalNextOfKin": {
            "type": "object",
            "properties": {
               "RelationshipId": {
                  "type": "integer",
                  "description": "See combo NextOfKinRelationships",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First Name of local next of kin",
                  "format": "20"
               },
               "MiddleName": {
                  "type": "string",
                  "description": "Middle Name of local next of kin",
                  "format": "20"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last Name of local next of kin",
                  "format": "40"
               },
               "Address": {
                  "$ref": "#/components/schemas/LearnerSaNextOfKinLocalNextOfKinAddress"
               },
               "Occupation": {
                  "type": "string",
                  "description": "Occupation of local next of kin",
                  "format": "100"
               },
               "PassportNumber": {
                  "type": "string",
                  "description": "Passport number of local next of kin",
                  "format": "20"
               },
               "PassportCountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               },
               "PhoneHome": {
                  "type": "string",
                  "description": "Home Number of local next of kin",
                  "format": "20"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "Work Number of local next of kin",
                  "format": "20"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Mobile Number of local next of kin. Accepts numbers only. International format is preferable eg. +614xxxxxxxxx\".",
                  "format": "20"
               },
               "Email": {
                  "type": "string",
                  "description": "Email Address of local next of kin",
                  "format": "100"
               }
            }
         },
         "LearnerSaNextOfKinInternationalNextOfKin": {
            "type": "object",
            "properties": {
               "RelationshipId": {
                  "type": "integer",
                  "description": "See combo NextOfKinRelationships",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First Name of international next of kin",
                  "format": "50"
               },
               "MiddleName": {
                  "type": "string",
                  "description": "Middle Name of international next of kin",
                  "format": "20"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last Name of international next of kin",
                  "format": "50"
               },
               "Address": {
                  "$ref": "#/components/schemas/LearnerSaNextOfKinInternationalNextOfKinAddress"
               },
               "PhoneHome": {
                  "type": "string",
                  "description": "Home Number of international next of kin",
                  "format": "20"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "Work Number of international next of kin",
                  "format": "20"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Mobile Number of international next of kin. Accepts numbers only. International format is preferable eg. +614xxxxxxxxx\".",
                  "format": "20"
               },
               "Email": {
                  "type": "string",
                  "description": "Email Address of international next of kin",
                  "format": "100"
               }
            }
         },
         "LearnerSgInternationalAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "International address of the learner",
                  "format": "50"
               },
               "AddressLine2": {
                  "type": "string",
                  "description": "International address details of the learner continued",
                  "format": "50"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of learner's international address",
                  "format": "50"
               },
               "State": {
                  "type": "string",
                  "description": "State of learner's international address",
                  "format": "70"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of learner's international address",
                  "format": "30"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               }
            }
         },
         "LearnerSgNextOfKinLocalNextOfKin": {
            "type": "object",
            "properties": {
               "RelationshipId": {
                  "type": "integer",
                  "description": "See combo NextOfKinRelationships",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First Name of local next of kin",
                  "format": "20"
               },
               "MiddleName": {
                  "type": "string",
                  "description": "Middle Name of local next of kin",
                  "format": "20"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last Name of local next of kin",
                  "format": "40"
               },
               "Address": {
                  "$ref": "#/components/schemas/LearnerSgNextOfKinLocalNextOfKinAddress"
               },
               "Occupation": {
                  "type": "string",
                  "description": "Occupation of local next of kin",
                  "format": "100"
               },
               "PassportNumber": {
                  "type": "string",
                  "description": "Passport number of local next of kin",
                  "format": "20"
               },
               "PassportCountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               },
               "PhoneHome": {
                  "type": "string",
                  "description": "Home Number of local next of kin",
                  "format": "20"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "Work Number of local next of kin",
                  "format": "20"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Mobile Number of local next of kin. Accepts numbers only. International format is preferable eg. +614xxxxxxxxx\".",
                  "format": "20"
               },
               "Email": {
                  "type": "string",
                  "description": "Email Address of local next of kin",
                  "format": "100"
               }
            }
         },
         "LearnerSgNextOfKinInternationalNextOfKin": {
            "type": "object",
            "properties": {
               "RelationshipId": {
                  "type": "integer",
                  "description": "See combo NextOfKinRelationships",
                  "format": "int32"
               },
               "FirstName": {
                  "type": "string",
                  "description": "First Name of international next of kin",
                  "format": "50"
               },
               "MiddleName": {
                  "type": "string",
                  "description": "Middle Name of international next of kin",
                  "format": "20"
               },
               "LastName": {
                  "type": "string",
                  "description": "Last Name of international next of kin",
                  "format": "50"
               },
               "Address": {
                  "$ref": "#/components/schemas/LearnerSgNextOfKinInternationalNextOfKinAddress"
               },
               "PhoneHome": {
                  "type": "string",
                  "description": "Home Number of international next of kin",
                  "format": "20"
               },
               "PhoneWork": {
                  "type": "string",
                  "description": "Work Number of international next of kin",
                  "format": "20"
               },
               "Mobile": {
                  "type": "string",
                  "description": "Mobile Number of international next of kin. Accepts numbers only. International format is preferable eg. +614xxxxxxxxx\".",
                  "format": "20"
               },
               "Email": {
                  "type": "string",
                  "description": "Email Address of international next of kin",
                  "format": "100"
               }
            }
         },
         "StaffStreetAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "Address Line 1 of the Staff Street Address",
                  "format": "100"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Additional address details of the Staff Street Address",
                  "format": "100"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of the Staff Street Address",
                  "format": "100"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of the Staff Street Address",
                  "format": "20"
               },
               "StateId": {
                  "type": "integer",
                  "description": "Australia only. State of the Staff Street Address. See States",
                  "format": "int32"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "Country of the Staff Street Address. See Countries",
                  "format": "int32"
               }
            }
         },
         "StaffPostalAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "Address Line 1 of the Staff Postal Address",
                  "format": "100"
               },
               "ExtraAddressLine": {
                  "type": "string",
                  "description": "Additional address details of the Staff Postal Address",
                  "format": "100"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of the Staff Postal Address",
                  "format": "100"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of the Staff Postal Address",
                  "format": "20"
               },
               "StateId": {
                  "type": "integer",
                  "description": "Australia only. State of the Staff Postal Address. See States",
                  "format": "int32"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "Country of the Staff Postal Address. See Countries",
                  "format": "int32"
               }
            }
         },
         "UnitBasic": {
            "type": "object",
            "properties": {
               "UnitId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CourseId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "UnitOfferBasic": {
            "type": "object",
            "properties": {
               "UnitOfferId": {
                  "type": "integer",
                  "format": "int32"
               },
               "UnitId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CourseOfferId": {
                  "type": "integer",
                  "format": "int32"
               },
               "UnitOfferCode": {
                  "type": "string"
               },
               "StartDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "EndDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "UnitCode": {
                  "type": "string"
               },
               "AutoGradeRuleId": {
                  "type": "integer",
                  "format": "int32"
               },
               "CourseOfferCode": {
                  "type": "string",
                  "description": "See entity CourseOffer"
               },
               "CourseOfferDescription": {
                  "type": "string",
                  "description": "See entity CourseOffer"
               }
            }
         },
         "NzFundSource": {
            "type": "object",
            "properties": {
               "FundSourceId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "Location": {
            "type": "object",
            "properties": {
               "LocationId": {
                  "type": "integer",
                  "format": "int32"
               },
               "Code": {
                  "type": "string"
               },
               "Description": {
                  "type": "string"
               }
            }
         },
         "PublishSitesCourse": {
            "type": "object",
            "properties": {
               "SiteGuid": {
                  "type": "string",
                  "format": "uuid"
               }
            }
         },
         "LearnerAuNextOfKinLocalNextOfKinAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "Address Line 1 of local next of kin",
                  "format": "50"
               },
               "AddressLine2": {
                  "type": "string",
                  "description": "Address Line 2 of local next of kin",
                  "format": "50"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of local next of kin address",
                  "format": "50"
               },
               "StateId": {
                  "type": "integer",
                  "description": "See combo States",
                  "format": "int32"
               },
               "StateProvinceRegion": {
                  "type": "string",
                  "description": "State/Province/Region of local next of kin address",
                  "format": "70"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of local next of kin address",
                  "format": "30"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               }
            }
         },
         "LearnerAuNextOfKinInternationalNextOfKinAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "Address Line 1 of international next of kin",
                  "format": "50"
               },
               "AddressLine2": {
                  "type": "string",
                  "description": "Address Line 2 of international next of kin",
                  "format": "50"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of international next of kin address",
                  "format": "50"
               },
               "StateProvinceRegion": {
                  "type": "string",
                  "description": "State/Province/Region of international next of kin address",
                  "format": "70"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of international next of kin address",
                  "format": "30"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               }
            }
         },
         "LearnerNzNextOfKinLocalNextOfKinAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "Address Line 1 of local next of kin",
                  "format": "50"
               },
               "AddressLine2": {
                  "type": "string",
                  "description": "Address Line 2 of local next of kin",
                  "format": "50"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of local next of kin address",
                  "format": "50"
               },
               "StateProvinceRegion": {
                  "type": "string",
                  "description": "State/Province/Region of local next of kin address",
                  "format": "70"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of local next of kin address",
                  "format": "30"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               }
            }
         },
         "LearnerNzNextOfKinInternationalNextOfKinAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "Address Line 1 of international next of kin",
                  "format": "50"
               },
               "AddressLine2": {
                  "type": "string",
                  "description": "Address Line 2 of international next of kin",
                  "format": "50"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of international next of kin address",
                  "format": "50"
               },
               "StateProvinceRegion": {
                  "type": "string",
                  "description": "State/Province/Region of international next of kin address",
                  "format": "70"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of international next of kin address",
                  "format": "30"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               }
            }
         },
         "LearnerSaNextOfKinLocalNextOfKinAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "Address Line 1 of local next of kin",
                  "format": "50"
               },
               "AddressLine2": {
                  "type": "string",
                  "description": "Address Line 2 of local next of kin",
                  "format": "50"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of local next of kin address",
                  "format": "50"
               },
               "StateProvinceRegion": {
                  "type": "string",
                  "description": "State/Province/Region of local next of kin address",
                  "format": "70"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of local next of kin address",
                  "format": "30"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               }
            }
         },
         "LearnerSaNextOfKinInternationalNextOfKinAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "Address Line 1 of international next of kin",
                  "format": "50"
               },
               "AddressLine2": {
                  "type": "string",
                  "description": "Address Line 2 of international next of kin",
                  "format": "50"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of international next of kin address",
                  "format": "50"
               },
               "StateProvinceRegion": {
                  "type": "string",
                  "description": "State/Province/Region of international next of kin address",
                  "format": "70"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of international next of kin address",
                  "format": "30"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo Countries",
                  "format": "int32"
               }
            }
         },
         "LearnerSgNextOfKinLocalNextOfKinAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "Address Line 1 of local next of kin",
                  "format": "50"
               },
               "AddressLine2": {
                  "type": "string",
                  "description": "Address Line 2 of local next of kin",
                  "format": "50"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of local next of kin address",
                  "format": "50"
               },
               "StateProvinceRegion": {
                  "type": "string",
                  "description": "State/Province/Region of local next of kin address",
                  "format": "70"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of local next of kin address",
                  "format": "30"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               }
            }
         },
         "LearnerSgNextOfKinInternationalNextOfKinAddress": {
            "type": "object",
            "properties": {
               "AddressLine1": {
                  "type": "string",
                  "description": "Address Line 1 of international next of kin",
                  "format": "50"
               },
               "AddressLine2": {
                  "type": "string",
                  "description": "Address Line 2 of international next of kin",
                  "format": "50"
               },
               "Suburb": {
                  "type": "string",
                  "description": "Suburb of international next of kin address",
                  "format": "50"
               },
               "StateProvinceRegion": {
                  "type": "string",
                  "description": "State/Province/Region of international next of kin address",
                  "format": "70"
               },
               "Postcode": {
                  "type": "string",
                  "description": "Postcode of international next of kin address",
                  "format": "30"
               },
               "CountryId": {
                  "type": "integer",
                  "description": "See combo NzCountries",
                  "format": "int32"
               }
            }
         }
      },
      "securitySchemes": {
         "apiKey": {
            "type": "apiKey",
            "name": "x-api-key",
            "in": "header"
         }
      }
   },
   "security": [
      {
         "apiKey": []
      }
   ],
   "tags": [
      {
         "name": "Agent",
         "description": "An Agent is an Organisation that acts on behalf of a Learner to assist with Enrolments."
      },
      {
         "name": "Assessor",
         "description": "An Assessor is a Staff record that has Assessor Flag enabled. Used in Course Offer, Unit Offer, Course Enrolment and Unit Enrolment."
      },
      {
         "name": "AuditLog",
         "description": "An AuditLog is a record that has information about actions on entities such as insert, update and delete events."
      },
      {
         "name": "Checklist",
         "description": "Checklists can be added to all record types to collect additional data unique to your Education Provider's requirements."
      },
      {
         "name": "ChecklistItem",
         "description": "A Checklist Item is the available list of Checklists. Used in Checklists."
      },
      {
         "name": "Coordinator",
         "description": "A Coordinator is a Staff record that has Coordinator Flag enabled. Used in Course, Course Offer and Course Enrolment."
      },
      {
         "name": "Course",
         "description": "A Course is used to outline the certification being awarded."
      },
      {
         "name": "CourseEnrolment",
         "description": "A Course Enrolment is the relationship between a Learner and a Course Offer."
      },
      {
         "name": "CourseOffer",
         "description": "A Course Offer is an instance of a Course that is configured for specific delivery requirements (Locations, Dates, Funding). A Learner is added as a Course Enrolment against a Course Offer."
      },
      {
         "name": "Credential",
         "description": "Credentials refer to Certificates, Statements of Attainment etc. They are linked to Course Enrolments"
      },
      {
         "name": "DocumentFile",
         "description": "A DocumentFile provides a link to upload and download files."
      },
      {
         "name": "Entity",
         "description": "Entities are how Wisenet categorises its sections. They are used in other endpoints to define relationships between one Entity and another, e.g. File Notes or Audit Logs."
      },
      {
         "name": "ElementEnrolment",
         "description": "An Element Enrolment is the relationship between a UnitEnrolment and an Element."
      },
      {
         "name": "Filenote",
         "description": "A Filenote allows notes and documents to be stored against a record."
      },
      {
         "name": "Invoice",
         "description": "Invoices contain Invoice, LineItems and Payments information and is linked to a Learner."
      },
      {
         "name": "LanguageLiteracyNumeracy",
         "description": "Tracks Language Literacy Numeracy information and is linked to a Course Enrolment"
      },
      {
         "name": "LearnerAu",
         "description": "This is the Australian version of the Learner endpoint. It contains AU specific fields and logic."
      },
      {
         "name": "LearnerNz",
         "description": "This is the New Zealand version of the Learner endpoint. It contains NZ specific fields and logic."
      },
      {
         "name": "LearnerSa",
         "description": "This is the South Africa version of the Learner endpoint. It contains SA specific fields and logic."
      },
      {
         "name": "LearnerSg",
         "description": "This is the Singapore version of the Learner endpoint. It contains SG specific fields and logic."
      },
      {
         "name": "LearnerPosition",
         "description": "A Learner Position is the relationship between a Learner and a Workplace."
      },
      {
         "name": "Location",
         "description": "A Location is used to define the site of delivery. It can be linked with Course Offer, Unit Offer and Unit Enrolment."
      },
      {
         "name": "Opportunity",
         "description": "An Opportunity tracks a sales deal linked against a Sales Contact."
      },
      {
         "name": "Promotion",
         "description": "A Promotion is a specific sales campaign that is available to Agents."
      },
      {
         "name": "SalesContact",
         "description": "A Sales Contact is any person who has a relationship with the education provider."
      },
      {
         "name": "SalesPerson",
         "description": "A Sales Person is a Staff record that has Assessor Flag enabled. Used in Course Enrolment and Sales."
      },
      {
         "name": "Staff",
         "description": "Used to record any Staff member within the training organisation."
      },
      {
         "name": "Tag",
         "description": "Tags work like keywords that can be associated with records to group similar records."
      },
      {
         "name": "Trainer",
         "description": "A Trainer is a Staff record that has Assessor Flag enabled. Used in Course Offer, Unit Offer, Course Enrolment and Unit Enrolment."
      },
      {
         "name": "Unit",
         "description": "A Unit is used to record individual subjects or modules that are required for a Course."
      },
      {
         "name": "UnitOffer",
         "description": "A Unit Offer is an instance of a Unit that belongs to a Course Offer and is configured for specific delivery requirements (Locations, Dates, Funding). A Learner is added as a Unit Enrolment against a Unit Offer."
      },
      {
         "name": "UnitEnrolment",
         "description": "A Unit Enrolment is the relationship between a Course Enrolment and an Unit Offer."
      },
      {
         "name": "USI",
         "description": "Allows a USI record to be verified against the USI service."
      },
      {
         "name": "Workplace",
         "description": "Workplaces can be used for tracking details for any type of employment or training based organisation."
      },
      {
         "name": "Combo",
         "description": "A combo is also known as a dropdown in Wisenet. Each combo returns the available records with the required Id that is needed when interacting with the non-combo endpoints."
      }
   ]
}